{
  "patch": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -1709,7 +1709,7 @@ def get_prep_value(self, value):\n \n     def formfield(self, **kwargs):\n         return super().formfield(**{\n-            'path': self.path,\n+            'path': self.path() if callable(self.path) else self.path,\n             'match': self.match,\n             'recursive': self.recursive,\n             'form_class': forms.FilePathField,\n",
  "test_patch": "diff --git a/tests/model_fields/test_filepathfield.py b/tests/model_fields/test_filepathfield.py\nnew file mode 100644\n--- /dev/null\n+++ b/tests/model_fields/test_filepathfield.py\n@@ -0,0 +1,22 @@\n+import os\n+\n+from django.db.models import FilePathField\n+from django.test import SimpleTestCase\n+\n+\n+class FilePathFieldTests(SimpleTestCase):\n+    def test_path(self):\n+        path = os.path.dirname(__file__)\n+        field = FilePathField(path=path)\n+        self.assertEqual(field.path, path)\n+        self.assertEqual(field.formfield().path, path)\n+\n+    def test_callable_path(self):\n+        path = os.path.dirname(__file__)\n+\n+        def generate_path():\n+            return path\n+\n+        field = FilePathField(path=generate_path)\n+        self.assertEqual(field.path(), path)\n+        self.assertEqual(field.formfield().path, path)\n"
}