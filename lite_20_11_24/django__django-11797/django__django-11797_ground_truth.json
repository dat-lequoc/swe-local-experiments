{
  "patch": "diff --git a/django/db/models/lookups.py b/django/db/models/lookups.py\n--- a/django/db/models/lookups.py\n+++ b/django/db/models/lookups.py\n@@ -262,9 +262,9 @@ def process_rhs(self, compiler, connection):\n         from django.db.models.sql.query import Query\n         if isinstance(self.rhs, Query):\n             if self.rhs.has_limit_one():\n-                # The subquery must select only the pk.\n-                self.rhs.clear_select_clause()\n-                self.rhs.add_fields(['pk'])\n+                if not self.rhs.has_select_fields:\n+                    self.rhs.clear_select_clause()\n+                    self.rhs.add_fields(['pk'])\n             else:\n                 raise ValueError(\n                     'The QuerySet value for an exact lookup must be limited to '\n",
  "test_patch": "diff --git a/tests/lookup/tests.py b/tests/lookup/tests.py\n--- a/tests/lookup/tests.py\n+++ b/tests/lookup/tests.py\n@@ -5,6 +5,7 @@\n \n from django.core.exceptions import FieldError\n from django.db import connection\n+from django.db.models import Max\n from django.db.models.expressions import Exists, OuterRef\n from django.db.models.functions import Substr\n from django.test import TestCase, skipUnlessDBFeature\n@@ -956,3 +957,15 @@ def test_nested_outerref_lhs(self):\n             ),\n         )\n         self.assertEqual(qs.get(has_author_alias_match=True), tag)\n+\n+    def test_exact_query_rhs_with_selected_columns(self):\n+        newest_author = Author.objects.create(name='Author 2')\n+        authors_max_ids = Author.objects.filter(\n+            name='Author 2',\n+        ).values(\n+            'name',\n+        ).annotate(\n+            max_id=Max('id'),\n+        ).values('max_id')\n+        authors = Author.objects.filter(id=authors_max_ids[:1])\n+        self.assertEqual(authors.get(), newest_author)\n"
}