diff --git a/django/conf/global_settings.py b/django/conf/global_settings.py
index acee9887d2..bdeec80610 100644
--- a/django/conf/global_settings.py
+++ b/django/conf/global_settings.py
@@ -304,7 +304,7 @@ FILE_UPLOAD_TEMP_DIR = None
 
 # The numeric mode to set newly-uploaded files to. The value should be a mode
 # you'd pass directly to os.chmod; see https://docs.python.org/library/os.html#files-and-directories.
-FILE_UPLOAD_PERMISSIONS = None
+FILE_UPLOAD_PERMISSIONS = 0o644
 
 # The numeric mode to assign to newly-created directories, when uploading files.
 # The value should be a mode as you'd pass to os.chmod;
diff --git a/edge_cases.py b/edge_cases.py
new file mode 100644
index 0000000000..1c7f2a2cc0
--- /dev/null
+++ b/edge_cases.py
@@ -0,0 +1,49 @@
+import os
+import tempfile
+from django.conf import settings
+from django.core.files.storage import FileSystemStorage
+from django.core.files.uploadedfile import SimpleUploadedFile, TemporaryUploadedFile
+
+# Configure Django settings
+settings.configure(
+    DEBUG=True,
+    MEDIA_ROOT=tempfile.mkdtemp(),
+    FILE_UPLOAD_PERMISSIONS=0o644,
+    SECRET_KEY='test-key'
+)
+
+def test_edge_cases():
+    storage = FileSystemStorage()
+    
+    # Test empty file
+    empty_file = SimpleUploadedFile("empty.txt", b"")
+    empty_file_name = storage.save("empty.txt", empty_file)
+    empty_file_path = storage.path(empty_file_name)
+    empty_file_perms = oct(os.stat(empty_file_path).st_mode & 0o777)
+    print(f"Empty file permissions: {empty_file_perms}")
+    
+    # Test file with special characters in name
+    special_file = SimpleUploadedFile("special!@#$%^&*.txt", b"Special content")
+    special_file_name = storage.save("special!@#$%^&*.txt", special_file)
+    special_file_path = storage.path(special_file_name)
+    special_file_perms = oct(os.stat(special_file_path).st_mode & 0o777)
+    print(f"Special chars file permissions: {special_file_perms}")
+    
+    # Test file in subdirectory
+    os.makedirs(os.path.join(settings.MEDIA_ROOT, "subdir"), exist_ok=True)
+    subdir_file = SimpleUploadedFile("subdir/test.txt", b"Subdir content")
+    subdir_file_name = storage.save("subdir/test.txt", subdir_file)
+    subdir_file_path = storage.path(subdir_file_name)
+    subdir_file_perms = oct(os.stat(subdir_file_path).st_mode & 0o777)
+    print(f"Subdir file permissions: {subdir_file_perms}")
+    
+    # Test file with exactly FILE_UPLOAD_MAX_MEMORY_SIZE bytes
+    threshold_size = getattr(settings, 'FILE_UPLOAD_MAX_MEMORY_SIZE', 2621440)
+    threshold_file = SimpleUploadedFile("threshold.txt", b"x" * threshold_size)
+    threshold_file_name = storage.save("threshold.txt", threshold_file)
+    threshold_file_path = storage.path(threshold_file_name)
+    threshold_file_perms = oct(os.stat(threshold_file_path).st_mode & 0o777)
+    print(f"Threshold size file permissions: {threshold_file_perms}")
+
+if __name__ == '__main__':
+    test_edge_cases()
\ No newline at end of file
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..e086cbfe8c
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,37 @@
+import os
+import tempfile
+from django.conf import settings
+from django.core.files.storage import FileSystemStorage
+from django.core.files.uploadedfile import SimpleUploadedFile, TemporaryUploadedFile
+
+# Configure Django settings
+settings.configure(
+    DEBUG=True,
+    MEDIA_ROOT=tempfile.mkdtemp(),
+    FILE_UPLOAD_PERMISSIONS=0o644,
+    SECRET_KEY='test-key'
+)
+
+def test_file_permissions():
+    storage = FileSystemStorage()
+    
+    # Test small file (MemoryUploadedFile)
+    small_file = SimpleUploadedFile("small.txt", b"Small file content")
+    small_file_name = storage.save("small.txt", small_file)
+    small_file_path = storage.path(small_file_name)
+    small_file_perms = oct(os.stat(small_file_path).st_mode & 0o777)
+    print(f"Small file permissions: {small_file_perms}")
+    
+    # Test large file (TemporaryUploadedFile)
+    with tempfile.NamedTemporaryFile() as tmp:
+        tmp.write(b"Large file content" * 1000)  # Make it larger than memory buffer
+        tmp.seek(0)
+        large_file = TemporaryUploadedFile("large.txt", "text/plain", tmp.tell(), None)
+        large_file.file = tmp
+        large_file_name = storage.save("large.txt", large_file)
+        large_file_path = storage.path(large_file_name)
+        large_file_perms = oct(os.stat(large_file_path).st_mode & 0o777)
+        print(f"Large file permissions: {large_file_perms}")
+
+if __name__ == '__main__':
+    test_file_permissions()
\ No newline at end of file
