{
  "instance_id": "django__django-11583",
  "model_patch": "diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py\nindex 25c3b44250..a3746512e3 100644\n--- a/django/utils/autoreload.py\n+++ b/django/utils/autoreload.py\n@@ -134,16 +134,19 @@ def iter_modules_and_files(modules, extra_files):\n \n     results = set()\n     for filename in itertools.chain(sys_file_paths, extra_files):\n-        if not filename:\n+        if not filename or '\\x00' in str(filename):\n             continue\n-        path = Path(filename)\n         try:\n+            path = Path(filename)\n             resolved_path = path.resolve(strict=True).absolute()\n+            results.add(resolved_path)\n         except FileNotFoundError:\n             # The module could have been removed, don't fail loudly if this\n             # is the case.\n             continue\n-        results.add(resolved_path)\n+        except ValueError:\n+            # Handle invalid paths (like those with null bytes)\n+            continue\n     return frozenset(results)\n \n \ndiff --git a/tests/reproduce_error.py b/tests/reproduce_error.py\nnew file mode 100644\nindex 0000000000..34cc0cf68d\n--- /dev/null\n+++ b/tests/reproduce_error.py\n@@ -0,0 +1,21 @@\n+import os\n+import pathlib\n+from django.utils.autoreload import iter_modules_and_files\n+\n+def test_null_byte_handling():\n+    # Create a path with a null byte\n+    bad_path = '/test/path\\x00with/null/byte'\n+    \n+    # Test that iter_modules_and_files handles it gracefully\n+    result = iter_modules_and_files(tuple(), frozenset([bad_path]))\n+    assert len(result) == 0  # Should ignore the bad path\n+    \n+    # Test with a mix of good and bad paths\n+    good_path = os.path.abspath(__file__)\n+    result = iter_modules_and_files(tuple(), frozenset([good_path, bad_path]))\n+    assert len(result) == 1  # Should only include the good path\n+    assert pathlib.Path(good_path).resolve() in result\n+\n+if __name__ == '__main__':\n+    test_null_byte_handling()\n+    print(\"All tests passed!\")\n\\ No newline at end of file\ndiff --git a/tests/test_settings.py b/tests/test_settings.py\nnew file mode 100644\nindex 0000000000..d06ed78f62\n--- /dev/null\n+++ b/tests/test_settings.py\n@@ -0,0 +1,16 @@\n+DATABASES = {\n+    'default': {\n+        'ENGINE': 'django.db.backends.sqlite3',\n+        'NAME': ':memory:',\n+    }\n+}\n+\n+INSTALLED_APPS = [\n+    'django.contrib.auth',\n+    'django.contrib.contenttypes',\n+    'django.contrib.sessions',\n+    'django.contrib.messages',\n+    'django.contrib.staticfiles',\n+]\n+\n+SECRET_KEY = 'dummy-key-for-tests'\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}