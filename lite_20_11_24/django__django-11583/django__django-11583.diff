diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py
index 25c3b44250..a3746512e3 100644
--- a/django/utils/autoreload.py
+++ b/django/utils/autoreload.py
@@ -134,16 +134,19 @@ def iter_modules_and_files(modules, extra_files):
 
     results = set()
     for filename in itertools.chain(sys_file_paths, extra_files):
-        if not filename:
+        if not filename or '\x00' in str(filename):
             continue
-        path = Path(filename)
         try:
+            path = Path(filename)
             resolved_path = path.resolve(strict=True).absolute()
+            results.add(resolved_path)
         except FileNotFoundError:
             # The module could have been removed, don't fail loudly if this
             # is the case.
             continue
-        results.add(resolved_path)
+        except ValueError:
+            # Handle invalid paths (like those with null bytes)
+            continue
     return frozenset(results)
 
 
diff --git a/tests/reproduce_error.py b/tests/reproduce_error.py
new file mode 100644
index 0000000000..34cc0cf68d
--- /dev/null
+++ b/tests/reproduce_error.py
@@ -0,0 +1,21 @@
+import os
+import pathlib
+from django.utils.autoreload import iter_modules_and_files
+
+def test_null_byte_handling():
+    # Create a path with a null byte
+    bad_path = '/test/path\x00with/null/byte'
+    
+    # Test that iter_modules_and_files handles it gracefully
+    result = iter_modules_and_files(tuple(), frozenset([bad_path]))
+    assert len(result) == 0  # Should ignore the bad path
+    
+    # Test with a mix of good and bad paths
+    good_path = os.path.abspath(__file__)
+    result = iter_modules_and_files(tuple(), frozenset([good_path, bad_path]))
+    assert len(result) == 1  # Should only include the good path
+    assert pathlib.Path(good_path).resolve() in result
+
+if __name__ == '__main__':
+    test_null_byte_handling()
+    print("All tests passed!")
\ No newline at end of file
diff --git a/tests/test_settings.py b/tests/test_settings.py
new file mode 100644
index 0000000000..d06ed78f62
--- /dev/null
+++ b/tests/test_settings.py
@@ -0,0 +1,16 @@
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': ':memory:',
+    }
+}
+
+INSTALLED_APPS = [
+    'django.contrib.auth',
+    'django.contrib.contenttypes',
+    'django.contrib.sessions',
+    'django.contrib.messages',
+    'django.contrib.staticfiles',
+]
+
+SECRET_KEY = 'dummy-key-for-tests'
\ No newline at end of file
