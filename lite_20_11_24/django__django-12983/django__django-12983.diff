diff --git a/django/utils/text.py b/django/utils/text.py
index fb5f6298c4..31ce0e0f18 100644
--- a/django/utils/text.py
+++ b/django/utils/text.py
@@ -395,7 +395,7 @@ def slugify(value, allow_unicode=False):
     """
     Convert to ASCII if 'allow_unicode' is False. Convert spaces to hyphens.
     Remove characters that aren't alphanumerics, underscores, or hyphens.
-    Convert to lowercase. Also strip leading and trailing whitespace.
+    Convert to lowercase. Also strip leading and trailing whitespace, dashes and underscores.
     """
     value = str(value)
     if allow_unicode:
@@ -403,7 +403,8 @@ def slugify(value, allow_unicode=False):
     else:
         value = unicodedata.normalize('NFKD', value).encode('ascii', 'ignore').decode('ascii')
     value = re.sub(r'[^\w\s-]', '', value.lower()).strip()
-    return re.sub(r'[-\s]+', '-', value)
+    value = re.sub(r'[-\s]+', '-', value)
+    return value.strip('-_')
 
 
 def camel_case_to_spaces(value):
diff --git a/edge_cases.py b/edge_cases.py
new file mode 100644
index 0000000000..8084bf5e35
--- /dev/null
+++ b/edge_cases.py
@@ -0,0 +1,29 @@
+from django.utils.text import slugify
+
+def test_case(input_str, expected):
+    result = slugify(input_str)
+    assert result == expected, f"For input '{input_str}': Expected '{expected}', got '{result}'"
+    print(f"Test passed: '{input_str}' -> '{result}'")
+
+# Test various edge cases
+test_cases = [
+    ("", ""),
+    ("---", ""),
+    ("___", ""),
+    ("_-_-_", ""),
+    ("___test---", "test"),
+    ("---test___", "test"),
+    ("___hello---world___", "hello-world"),
+    ("___hello   world---", "hello-world"),
+    ("___123---", "123"),
+    ("___test-123___", "test-123"),
+    ("___!@#$%^&*()___", ""),
+    ("   ", ""),
+    ("___TEST---", "test"),
+    ("_" * 50 + "test" + "-" * 50, "test"),
+]
+
+print("Running edge cases tests...")
+for input_str, expected in test_cases:
+    test_case(input_str, expected)
+print("All edge cases passed!")
\ No newline at end of file
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..779b356f0c
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,9 @@
+from django.utils.text import slugify
+
+# Test cases from PR description
+test_str = "___This is a test ---"
+result = slugify(test_str)
+print(f"Input: {test_str}")
+print(f"Output: {result}")
+assert result == "this-is-a-test", f"Expected 'this-is-a-test', got '{result}'"
+print("Basic test passed!")
\ No newline at end of file
