{
  "instance_id": "django__django-12983",
  "model_patch": "diff --git a/django/utils/text.py b/django/utils/text.py\nindex fb5f6298c4..31ce0e0f18 100644\n--- a/django/utils/text.py\n+++ b/django/utils/text.py\n@@ -395,7 +395,7 @@ def slugify(value, allow_unicode=False):\n     \"\"\"\n     Convert to ASCII if 'allow_unicode' is False. Convert spaces to hyphens.\n     Remove characters that aren't alphanumerics, underscores, or hyphens.\n-    Convert to lowercase. Also strip leading and trailing whitespace.\n+    Convert to lowercase. Also strip leading and trailing whitespace, dashes and underscores.\n     \"\"\"\n     value = str(value)\n     if allow_unicode:\n@@ -403,7 +403,8 @@ def slugify(value, allow_unicode=False):\n     else:\n         value = unicodedata.normalize('NFKD', value).encode('ascii', 'ignore').decode('ascii')\n     value = re.sub(r'[^\\w\\s-]', '', value.lower()).strip()\n-    return re.sub(r'[-\\s]+', '-', value)\n+    value = re.sub(r'[-\\s]+', '-', value)\n+    return value.strip('-_')\n \n \n def camel_case_to_spaces(value):\ndiff --git a/edge_cases.py b/edge_cases.py\nnew file mode 100644\nindex 0000000000..8084bf5e35\n--- /dev/null\n+++ b/edge_cases.py\n@@ -0,0 +1,29 @@\n+from django.utils.text import slugify\n+\n+def test_case(input_str, expected):\n+    result = slugify(input_str)\n+    assert result == expected, f\"For input '{input_str}': Expected '{expected}', got '{result}'\"\n+    print(f\"Test passed: '{input_str}' -> '{result}'\")\n+\n+# Test various edge cases\n+test_cases = [\n+    (\"\", \"\"),\n+    (\"---\", \"\"),\n+    (\"___\", \"\"),\n+    (\"_-_-_\", \"\"),\n+    (\"___test---\", \"test\"),\n+    (\"---test___\", \"test\"),\n+    (\"___hello---world___\", \"hello-world\"),\n+    (\"___hello   world---\", \"hello-world\"),\n+    (\"___123---\", \"123\"),\n+    (\"___test-123___\", \"test-123\"),\n+    (\"___!@#$%^&*()___\", \"\"),\n+    (\"   \", \"\"),\n+    (\"___TEST---\", \"test\"),\n+    (\"_\" * 50 + \"test\" + \"-\" * 50, \"test\"),\n+]\n+\n+print(\"Running edge cases tests...\")\n+for input_str, expected in test_cases:\n+    test_case(input_str, expected)\n+print(\"All edge cases passed!\")\n\\ No newline at end of file\ndiff --git a/reproduce_error.py b/reproduce_error.py\nnew file mode 100644\nindex 0000000000..779b356f0c\n--- /dev/null\n+++ b/reproduce_error.py\n@@ -0,0 +1,9 @@\n+from django.utils.text import slugify\n+\n+# Test cases from PR description\n+test_str = \"___This is a test ---\"\n+result = slugify(test_str)\n+print(f\"Input: {test_str}\")\n+print(f\"Output: {result}\")\n+assert result == \"this-is-a-test\", f\"Expected 'this-is-a-test', got '{result}'\"\n+print(\"Basic test passed!\")\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}