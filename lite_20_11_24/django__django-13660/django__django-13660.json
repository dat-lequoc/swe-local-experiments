{
  "instance_id": "django__django-13660",
  "model_patch": "diff --git a/django/core/management/commands/shell.py b/django/core/management/commands/shell.py\nindex 2b306a579e..eb2264ac82 100644\n--- a/django/core/management/commands/shell.py\n+++ b/django/core/management/commands/shell.py\n@@ -84,7 +84,8 @@ class Command(BaseCommand):\n     def handle(self, **options):\n         # Execute the command and exit.\n         if options['command']:\n-            exec(options['command'])\n+            globals_dict = {}\n+            exec(options['command'], globals_dict)\n             return\n \n         # Execute stdin if it has anything to read and exit.\ndiff --git a/reproduce_error.py b/reproduce_error.py\nnew file mode 100644\nindex 0000000000..6b8133a21d\n--- /dev/null\n+++ b/reproduce_error.py\n@@ -0,0 +1,32 @@\n+import os\n+import sys\n+import subprocess\n+\n+def test_shell_command():\n+    # Test case 1: Function definition and execution\n+    cmd = '''python -m django shell -c \"\n+import django\n+def f():\n+    print(django.__version__)\n+f()\"'''\n+    \n+    result = subprocess.run(cmd, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=True)\n+    print(\"Test case 1 output:\", result.stdout)\n+    print(\"Test case 1 error:\", result.stderr)\n+    \n+    # Test case 2: Multiple functions and variables\n+    cmd2 = '''python -m django shell -c \"\n+x = 42\n+def f1():\n+    return x\n+def f2():\n+    return f1() + 1\n+print(f2())\"'''\n+    \n+    result2 = subprocess.run(cmd2, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=True)\n+    print(\"\\nTest case 2 output:\", result2.stdout)\n+    print(\"Test case 2 error:\", result2.stderr)\n+\n+if __name__ == '__main__':\n+    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'django.conf.global_settings')\n+    test_shell_command()\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}