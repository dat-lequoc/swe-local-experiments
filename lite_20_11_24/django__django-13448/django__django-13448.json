{
  "instance_id": "django__django-13448",
  "model_patch": "diff --git a/django/test/utils.py b/django/test/utils.py\nindex 4f4ce99967..e3f55f23a1 100644\n--- a/django/test/utils.py\n+++ b/django/test/utils.py\n@@ -176,11 +176,15 @@ def setup_databases(verbosity, interactive, *, time_keeper=None, keepdb=False, d\n             if first_alias is None:\n                 first_alias = alias\n                 with time_keeper.timed(\"  Creating '%s'\" % alias):\n+                    # Only serialize if migrations are enabled\n+                    serialize = connection.settings_dict['TEST'].get('SERIALIZE', True)\n+                    if not connection.settings_dict['TEST'].get('MIGRATE', True):\n+                        serialize = False\n                     connection.creation.create_test_db(\n                         verbosity=verbosity,\n                         autoclobber=not interactive,\n                         keepdb=keepdb,\n-                        serialize=connection.settings_dict['TEST'].get('SERIALIZE', True),\n+                        serialize=serialize,\n                     )\n                 if parallel > 1:\n                     for index in range(parallel):\ndiff --git a/test_migrate_settings.py b/test_migrate_settings.py\nnew file mode 100644\nindex 0000000000..9bebaf6d4e\n--- /dev/null\n+++ b/test_migrate_settings.py\n@@ -0,0 +1,35 @@\n+from django.test import TestCase, override_settings\n+from django.test.utils import setup_databases, teardown_databases\n+from django.conf import settings\n+import unittest\n+\n+class TestMigrateSettings(TestCase):\n+    def setUp(self):\n+        self.old_db_settings = settings.DATABASES['default'].copy()\n+        \n+    def tearDown(self):\n+        settings.DATABASES['default'] = self.old_db_settings\n+\n+    @override_settings(DATABASES={\n+        'default': {\n+            'ENGINE': 'django.db.backends.sqlite3',\n+            'NAME': ':memory:',\n+            'TEST': {\n+                'MIGRATE': False,\n+            },\n+        }\n+    })\n+    def test_no_migrate_no_serialize(self):\n+        \"\"\"Test that when MIGRATE is False, serialization is skipped.\"\"\"\n+        old_config = setup_databases(\n+            verbosity=0,\n+            interactive=False,\n+            keepdb=False,\n+            debug_sql=False,\n+            parallel=0,\n+        )\n+        try:\n+            # If we got here without errors, the test passed\n+            self.assertTrue(True)\n+        finally:\n+            teardown_databases(old_config, verbosity=0)\n\\ No newline at end of file\ndiff --git a/test_no_migrate.py b/test_no_migrate.py\nnew file mode 100644\nindex 0000000000..9645cc4c4b\n--- /dev/null\n+++ b/test_no_migrate.py\n@@ -0,0 +1,6 @@\n+from django.test import TestCase\n+\n+class TestNoMigrate(TestCase):\n+    def test_no_migrate(self):\n+        # This test should pass when MIGRATE is False\n+        self.assertTrue(True)\n\\ No newline at end of file\ndiff --git a/test_settings.py b/test_settings.py\nnew file mode 100644\nindex 0000000000..50ccb4d31e\n--- /dev/null\n+++ b/test_settings.py\n@@ -0,0 +1,46 @@\n+DATABASES = {\n+    'default': {\n+        'ENGINE': 'django.db.backends.sqlite3',\n+        'NAME': ':memory:',\n+        'TEST': {\n+            'MIGRATE': False,\n+        },\n+    }\n+}\n+\n+INSTALLED_APPS = [\n+    'django.contrib.admin',\n+    'django.contrib.auth',\n+    'django.contrib.contenttypes',\n+    'django.contrib.sessions',\n+    'django.contrib.messages',\n+    'django.contrib.staticfiles',\n+]\n+\n+SECRET_KEY = 'dummy'\n+\n+MIDDLEWARE = [\n+    'django.middleware.security.SecurityMiddleware',\n+    'django.contrib.sessions.middleware.SessionMiddleware',\n+    'django.middleware.common.CommonMiddleware',\n+    'django.middleware.csrf.CsrfViewMiddleware',\n+    'django.contrib.auth.middleware.AuthenticationMiddleware',\n+    'django.contrib.messages.middleware.MessageMiddleware',\n+    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n+]\n+\n+TEMPLATES = [\n+    {\n+        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n+        'DIRS': [],\n+        'APP_DIRS': True,\n+        'OPTIONS': {\n+            'context_processors': [\n+                'django.template.context_processors.debug',\n+                'django.template.context_processors.request',\n+                'django.contrib.auth.context_processors.auth',\n+                'django.contrib.messages.context_processors.messages',\n+            ],\n+        },\n+    },\n+]\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}