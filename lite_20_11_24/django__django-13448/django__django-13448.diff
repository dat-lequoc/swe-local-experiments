diff --git a/django/test/utils.py b/django/test/utils.py
index 4f4ce99967..e3f55f23a1 100644
--- a/django/test/utils.py
+++ b/django/test/utils.py
@@ -176,11 +176,15 @@ def setup_databases(verbosity, interactive, *, time_keeper=None, keepdb=False, d
             if first_alias is None:
                 first_alias = alias
                 with time_keeper.timed("  Creating '%s'" % alias):
+                    # Only serialize if migrations are enabled
+                    serialize = connection.settings_dict['TEST'].get('SERIALIZE', True)
+                    if not connection.settings_dict['TEST'].get('MIGRATE', True):
+                        serialize = False
                     connection.creation.create_test_db(
                         verbosity=verbosity,
                         autoclobber=not interactive,
                         keepdb=keepdb,
-                        serialize=connection.settings_dict['TEST'].get('SERIALIZE', True),
+                        serialize=serialize,
                     )
                 if parallel > 1:
                     for index in range(parallel):
diff --git a/test_migrate_settings.py b/test_migrate_settings.py
new file mode 100644
index 0000000000..9bebaf6d4e
--- /dev/null
+++ b/test_migrate_settings.py
@@ -0,0 +1,35 @@
+from django.test import TestCase, override_settings
+from django.test.utils import setup_databases, teardown_databases
+from django.conf import settings
+import unittest
+
+class TestMigrateSettings(TestCase):
+    def setUp(self):
+        self.old_db_settings = settings.DATABASES['default'].copy()
+        
+    def tearDown(self):
+        settings.DATABASES['default'] = self.old_db_settings
+
+    @override_settings(DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+            'TEST': {
+                'MIGRATE': False,
+            },
+        }
+    })
+    def test_no_migrate_no_serialize(self):
+        """Test that when MIGRATE is False, serialization is skipped."""
+        old_config = setup_databases(
+            verbosity=0,
+            interactive=False,
+            keepdb=False,
+            debug_sql=False,
+            parallel=0,
+        )
+        try:
+            # If we got here without errors, the test passed
+            self.assertTrue(True)
+        finally:
+            teardown_databases(old_config, verbosity=0)
\ No newline at end of file
diff --git a/test_no_migrate.py b/test_no_migrate.py
new file mode 100644
index 0000000000..9645cc4c4b
--- /dev/null
+++ b/test_no_migrate.py
@@ -0,0 +1,6 @@
+from django.test import TestCase
+
+class TestNoMigrate(TestCase):
+    def test_no_migrate(self):
+        # This test should pass when MIGRATE is False
+        self.assertTrue(True)
\ No newline at end of file
diff --git a/test_settings.py b/test_settings.py
new file mode 100644
index 0000000000..50ccb4d31e
--- /dev/null
+++ b/test_settings.py
@@ -0,0 +1,46 @@
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': ':memory:',
+        'TEST': {
+            'MIGRATE': False,
+        },
+    }
+}
+
+INSTALLED_APPS = [
+    'django.contrib.admin',
+    'django.contrib.auth',
+    'django.contrib.contenttypes',
+    'django.contrib.sessions',
+    'django.contrib.messages',
+    'django.contrib.staticfiles',
+]
+
+SECRET_KEY = 'dummy'
+
+MIDDLEWARE = [
+    'django.middleware.security.SecurityMiddleware',
+    'django.contrib.sessions.middleware.SessionMiddleware',
+    'django.middleware.common.CommonMiddleware',
+    'django.middleware.csrf.CsrfViewMiddleware',
+    'django.contrib.auth.middleware.AuthenticationMiddleware',
+    'django.contrib.messages.middleware.MessageMiddleware',
+    'django.middleware.clickjacking.XFrameOptionsMiddleware',
+]
+
+TEMPLATES = [
+    {
+        'BACKEND': 'django.template.backends.django.DjangoTemplates',
+        'DIRS': [],
+        'APP_DIRS': True,
+        'OPTIONS': {
+            'context_processors': [
+                'django.template.context_processors.debug',
+                'django.template.context_processors.request',
+                'django.contrib.auth.context_processors.auth',
+                'django.contrib.messages.context_processors.messages',
+            ],
+        },
+    },
+]
\ No newline at end of file
