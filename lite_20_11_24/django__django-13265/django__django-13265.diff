diff --git a/edge_cases.py b/edge_cases.py
new file mode 100644
index 0000000000..a1aa44958a
--- /dev/null
+++ b/edge_cases.py
@@ -0,0 +1,55 @@
+from django.db import migrations, models
+from django.db.migrations.optimizer import MigrationOptimizer
+
+def test_operation_ordering():
+    # Test case 1: Basic ordering
+    operations = [
+        migrations.AddIndex(
+            model_name='LookImage',
+            index=models.Index(fields=['look', '_order'], name='look_image_look_id_eaff30_idx'),
+        ),
+        migrations.AlterOrderWithRespectTo(
+            name='LookImage',
+            order_with_respect_to='look',
+        ),
+    ]
+    
+    # Test case 2: Multiple indexes
+    operations_multiple = [
+        migrations.AddIndex(
+            model_name='LookImage',
+            index=models.Index(fields=['look', '_order'], name='look_image_look_id_eaff30_idx'),
+        ),
+        migrations.AddIndex(
+            model_name='LookImage',
+            index=models.Index(fields=['created_at'], name='look_image_created_f746cf_idx'),
+        ),
+        migrations.AlterOrderWithRespectTo(
+            name='LookImage',
+            order_with_respect_to='look',
+        ),
+    ]
+
+    # Test case 3: Multiple models
+    operations_multiple_models = [
+        migrations.AddIndex(
+            model_name='LookImage',
+            index=models.Index(fields=['look', '_order'], name='look_image_look_id_eaff30_idx'),
+        ),
+        migrations.AddIndex(
+            model_name='OtherModel',
+            index=models.Index(fields=['created_at'], name='other_model_created_idx'),
+        ),
+        migrations.AlterOrderWithRespectTo(
+            name='LookImage',
+            order_with_respect_to='look',
+        ),
+    ]
+
+    return operations, operations_multiple, operations_multiple_models
+
+if __name__ == '__main__':
+    ops, ops_multi, ops_multi_models = test_operation_ordering()
+    print("Basic ordering test:", ops)
+    print("Multiple indexes test:", ops_multi)
+    print("Multiple models test:", ops_multi_models)
\ No newline at end of file
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..814d6a5561
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,33 @@
+from django.db import migrations, models
+
+def test_migration_order():
+    # Create the operations in the wrong order
+    operations = [
+        migrations.AddIndex(
+            model_name='LookImage',
+            index=models.Index(fields=['look', '_order'], name='look_image_look_id_eaff30_idx'),
+        ),
+        migrations.AlterOrderWithRespectTo(
+            name='LookImage',
+            order_with_respect_to='look',
+        ),
+    ]
+
+    # Create the operations in the correct order
+    correct_operations = [
+        migrations.AlterOrderWithRespectTo(
+            name='LookImage',
+            order_with_respect_to='look',
+        ),
+        migrations.AddIndex(
+            model_name='LookImage',
+            index=models.Index(fields=['look', '_order'], name='look_image_look_id_eaff30_idx'),
+        ),
+    ]
+
+    return operations, correct_operations
+
+if __name__ == '__main__':
+    wrong_ops, correct_ops = test_migration_order()
+    print("Wrong order operations:", wrong_ops)
+    print("Correct order operations:", correct_ops)
\ No newline at end of file
