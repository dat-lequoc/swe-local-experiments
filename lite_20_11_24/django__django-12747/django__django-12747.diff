diff --git a/django/db/models/deletion.py b/django/db/models/deletion.py
index 16dff6a1cd..bc37e016a4 100644
--- a/django/db/models/deletion.py
+++ b/django/db/models/deletion.py
@@ -104,8 +104,15 @@ class Collector:
 
         Return a list of all objects that were not already collected.
         """
-        if not objs:
+        if hasattr(objs, 'model'):
+            # If we're adding a queryset, ensure its model is tracked
+            model = objs.model
+            self.data.setdefault(model, set())
+            if not objs:
+                return []
+        elif not objs:
             return []
+            
         new_objs = []
         model = objs[0].__class__
         instances = self.data[model]
@@ -377,6 +384,11 @@ class Collector:
         self.data = {model: self.data[model] for model in sorted_models}
 
     def delete(self):
+        # Ensure all models are in self.data even if there are no instances
+        # This is needed for consistent behavior with empty querysets
+        for model in set(model for model, _ in self.instances_with_model()):
+            self.data.setdefault(model, set())
+            
         # sort instance collections
         for model, instances in self.data.items():
             self.data[model] = sorted(instances, key=attrgetter("pk"))
@@ -387,6 +399,11 @@ class Collector:
         self.sort()
         # number of objects deleted for each model label
         deleted_counter = Counter()
+        
+        # Always initialize counters for all models to ensure consistent behavior
+        # This ensures the model's label is included even when no objects are deleted
+        for model in self.data:
+            deleted_counter[model._meta.label] = 0
 
         # Optimize for the case with a single obj and no dependencies
         if len(self.data) == 1 and len(instances) == 1:
diff --git a/run_tests.py b/run_tests.py
new file mode 100644
index 0000000000..f33d9a362f
--- /dev/null
+++ b/run_tests.py
@@ -0,0 +1,13 @@
+import os
+import sys
+import django
+from django.conf import settings
+from django.test.utils import get_runner
+
+if __name__ == "__main__":
+    os.environ['DJANGO_SETTINGS_MODULE'] = 'tests.test_settings'
+    django.setup()
+    TestRunner = get_runner(settings)
+    test_runner = TestRunner()
+    failures = test_runner.run_tests(["tests.delete.tests"])
+    sys.exit(bool(failures))
\ No newline at end of file
diff --git a/tests/delete/reproduce_error.py b/tests/delete/reproduce_error.py
new file mode 100644
index 0000000000..81e54ee01b
--- /dev/null
+++ b/tests/delete/reproduce_error.py
@@ -0,0 +1,37 @@
+import os
+import sys
+import django
+from django.test import TestCase
+from django.db import models
+
+# Add the parent directory to sys.path
+sys.path.append(os.path.dirname(os.path.dirname(os.path.dirname(__file__))))
+
+# Configure Django settings
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'tests.test_settings')
+django.setup()
+
+# Test models
+class SimpleModel(models.Model):
+    name = models.CharField(max_length=100)
+
+class RelatedModel(models.Model):
+    name = models.CharField(max_length=100)
+    simple = models.ForeignKey(SimpleModel, on_delete=models.CASCADE)
+
+# Test cases
+class DeleteBehaviorTest(TestCase):
+    def test_delete_empty_simple_model(self):
+        # Test deleting from a model without foreign keys when no objects exist
+        result = SimpleModel.objects.all().delete()
+        self.assertEqual(result, (0, {'delete.SimpleModel': 0}))
+
+    def test_delete_empty_related_model(self):
+        # Test deleting from a model with foreign keys when no objects exist
+        result = RelatedModel.objects.all().delete()
+        self.assertEqual(result, (0, {'delete.RelatedModel': 0}))
+
+if __name__ == '__main__':
+    from django.test.runner import DiscoverRunner
+    test_runner = DiscoverRunner(verbosity=2)
+    test_runner.run_tests(['tests.delete.reproduce_error'])
\ No newline at end of file
diff --git a/tests/delete/test_empty_delete.py b/tests/delete/test_empty_delete.py
new file mode 100644
index 0000000000..407b3d3d1f
--- /dev/null
+++ b/tests/delete/test_empty_delete.py
@@ -0,0 +1,24 @@
+from django.test import TestCase
+from django.db import models
+
+class SimpleModel(models.Model):
+    name = models.CharField(max_length=100)
+    class Meta:
+        app_label = 'delete'
+
+class RelatedModel(models.Model):
+    name = models.CharField(max_length=100)
+    simple = models.ForeignKey(SimpleModel, on_delete=models.CASCADE)
+    class Meta:
+        app_label = 'delete'
+
+class EmptyDeleteTest(TestCase):
+    def test_empty_delete_simple_model(self):
+        """Test deleting from a model without foreign keys when no objects exist"""
+        result = SimpleModel.objects.all().delete()
+        self.assertEqual(result, (0, {'delete.SimpleModel': 0}))
+
+    def test_empty_delete_related_model(self):
+        """Test deleting from a model with foreign keys when no objects exist"""
+        result = RelatedModel.objects.all().delete()
+        self.assertEqual(result, (0, {'delete.RelatedModel': 0}))
\ No newline at end of file
diff --git a/tests/test_settings.py b/tests/test_settings.py
new file mode 100644
index 0000000000..88660fd7ae
--- /dev/null
+++ b/tests/test_settings.py
@@ -0,0 +1,36 @@
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': ':memory:',
+    }
+}
+
+INSTALLED_APPS = [
+    'django.contrib.contenttypes',
+    'django.contrib.auth',
+    'django.contrib.admin',
+    'django.contrib.sessions',
+    'django.contrib.messages',
+    'tests.delete',
+]
+
+MIDDLEWARE = [
+    'django.contrib.sessions.middleware.SessionMiddleware',
+    'django.contrib.auth.middleware.AuthenticationMiddleware',
+    'django.contrib.messages.middleware.MessageMiddleware',
+]
+
+TEMPLATES = [
+    {
+        'BACKEND': 'django.template.backends.django.DjangoTemplates',
+        'APP_DIRS': True,
+        'OPTIONS': {
+            'context_processors': [
+                'django.contrib.auth.context_processors.auth',
+                'django.contrib.messages.context_processors.messages',
+            ],
+        },
+    },
+]
+
+SECRET_KEY = 'dummy'
\ No newline at end of file
