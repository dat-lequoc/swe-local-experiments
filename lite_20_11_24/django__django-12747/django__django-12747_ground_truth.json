{
  "patch": "diff --git a/django/db/models/deletion.py b/django/db/models/deletion.py\n--- a/django/db/models/deletion.py\n+++ b/django/db/models/deletion.py\n@@ -408,7 +408,8 @@ def delete(self):\n             # fast deletes\n             for qs in self.fast_deletes:\n                 count = qs._raw_delete(using=self.using)\n-                deleted_counter[qs.model._meta.label] += count\n+                if count:\n+                    deleted_counter[qs.model._meta.label] += count\n \n             # update fields\n             for model, instances_for_fieldvalues in self.field_updates.items():\n@@ -426,7 +427,8 @@ def delete(self):\n                 query = sql.DeleteQuery(model)\n                 pk_list = [obj.pk for obj in instances]\n                 count = query.delete_batch(pk_list, self.using)\n-                deleted_counter[model._meta.label] += count\n+                if count:\n+                    deleted_counter[model._meta.label] += count\n \n                 if not model._meta.auto_created:\n                     for obj in instances:\n",
  "test_patch": "diff --git a/tests/delete/tests.py b/tests/delete/tests.py\n--- a/tests/delete/tests.py\n+++ b/tests/delete/tests.py\n@@ -522,11 +522,10 @@ def test_queryset_delete_returns_num_rows(self):\n         existed_objs = {\n             R._meta.label: R.objects.count(),\n             HiddenUser._meta.label: HiddenUser.objects.count(),\n-            A._meta.label: A.objects.count(),\n-            MR._meta.label: MR.objects.count(),\n             HiddenUserProfile._meta.label: HiddenUserProfile.objects.count(),\n         }\n         deleted, deleted_objs = R.objects.all().delete()\n+        self.assertCountEqual(deleted_objs.keys(), existed_objs.keys())\n         for k, v in existed_objs.items():\n             self.assertEqual(deleted_objs[k], v)\n \n@@ -550,13 +549,13 @@ def test_model_delete_returns_num_rows(self):\n         existed_objs = {\n             R._meta.label: R.objects.count(),\n             HiddenUser._meta.label: HiddenUser.objects.count(),\n-            A._meta.label: A.objects.count(),\n             MR._meta.label: MR.objects.count(),\n             HiddenUserProfile._meta.label: HiddenUserProfile.objects.count(),\n             M.m2m.through._meta.label: M.m2m.through.objects.count(),\n         }\n         deleted, deleted_objs = r.delete()\n         self.assertEqual(deleted, sum(existed_objs.values()))\n+        self.assertCountEqual(deleted_objs.keys(), existed_objs.keys())\n         for k, v in existed_objs.items():\n             self.assertEqual(deleted_objs[k], v)\n \n@@ -694,7 +693,7 @@ def test_fast_delete_empty_no_update_can_self_select(self):\n         with self.assertNumQueries(1):\n             self.assertEqual(\n                 User.objects.filter(avatar__desc='missing').delete(),\n-                (0, {'delete.User': 0})\n+                (0, {}),\n             )\n \n     def test_fast_delete_combined_relationships(self):\n"
}