{
  "instance_id": "matplotlib__matplotlib-23987",
  "model_patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex 5bbb786984..4c8d47e6d4 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -2426,9 +2426,13 @@ class Figure(FigureBase):\n             if isinstance(tight_layout, dict):\n                 self.get_layout_engine().set(**tight_layout)\n         elif constrained_layout is not None:\n-            self.set_layout_engine(layout='constrained')\n-            if isinstance(constrained_layout, dict):\n-                self.get_layout_engine().set(**constrained_layout)\n+            # If constrained_layout is explicitly False, don't set any layout engine\n+            if constrained_layout is False:\n+                self.set_layout_engine(layout='none')\n+            else:\n+                self.set_layout_engine(layout='constrained')\n+                if isinstance(constrained_layout, dict):\n+                    self.get_layout_engine().set(**constrained_layout)\n         else:\n             # everything is None, so use default:\n             self.set_layout_engine(layout=layout)\n@@ -3522,4 +3526,4 @@ def figaspect(arg):\n     # Finally, if we have a really funky aspect ratio, break it but respect\n     # the min/max dimensions (we don't want figures 10 feet tall!)\n     newsize = np.clip(newsize, figsize_min, figsize_max)\n-    return newsize\n+    return newsize\n\\ No newline at end of file\ndiff --git a/lib/matplotlib/tests/test_figure.py b/lib/matplotlib/tests/test_figure.py\nindex 48b4a880e0..630a4b1d18 100644\n--- a/lib/matplotlib/tests/test_figure.py\n+++ b/lib/matplotlib/tests/test_figure.py\n@@ -439,6 +439,14 @@ def test_invalid_figure_size(width, height):\n     with pytest.raises(ValueError):\n         fig.set_size_inches(width, height)\n \n+def test_no_warning_with_constrained_layout_false():\n+    \"\"\"Test that no warning is issued when constrained_layout=False.\"\"\"\n+    fig, ax = plt.subplots(1, 2, constrained_layout=False)\n+    with warnings.catch_warnings(record=True) as w:\n+        warnings.simplefilter(\"always\")\n+        plt.subplots_adjust(wspace=0)\n+        assert len(w) == 0, \"Warning was issued when constrained_layout=False\"\n+\n \n def test_invalid_figure_add_axes():\n     fig = plt.figure()\n@@ -1411,4 +1419,4 @@ def test_unpickle_with_device_pixel_ratio():\n     fig.canvas._set_device_pixel_ratio(7)\n     assert fig.dpi == 42*7\n     fig2 = pickle.loads(pickle.dumps(fig))\n-    assert fig2.dpi == 42\n+    assert fig2.dpi == 42\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}