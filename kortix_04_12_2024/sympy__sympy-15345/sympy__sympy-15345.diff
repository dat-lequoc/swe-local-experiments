diff --git a/sympy/printing/mathematica.py b/sympy/printing/mathematica.py
index ea7e3a2d94..01e8fc5868 100644
--- a/sympy/printing/mathematica.py
+++ b/sympy/printing/mathematica.py
@@ -94,7 +94,10 @@ def _print_list(self, expr):
     _print_Tuple = _print_list
 
     def _print_Function(self, expr):
-        if expr.func.__name__ in self.known_functions:
+        if expr.func.__name__ in ['Max', 'Min']:
+            args = [self._print(arg) for arg in expr.args]
+            return "%s[%s]" % (expr.func.__name__, ", ".join(args))
+        elif expr.func.__name__ in self.known_functions:
             cond_mfunc = self.known_functions[expr.func.__name__]
             for cond, mfunc in cond_mfunc:
                 if cond(*expr.args):
@@ -128,4 +131,4 @@ def mathematica_code(expr, **settings):
     >>> mcode(sin(x).series(x).removeO())
     '(1/120)*x^5 - 1/6*x^3 + x'
     """
-    return MCodePrinter(settings).doprint(expr)
+    return MCodePrinter(settings).doprint(expr)
\ No newline at end of file
diff --git a/sympy/printing/tests/test_mathematica.py b/sympy/printing/tests/test_mathematica.py
index dd636d0623..870cd3ed66 100644
--- a/sympy/printing/tests/test_mathematica.py
+++ b/sympy/printing/tests/test_mathematica.py
@@ -25,7 +25,11 @@ def test_Rational():
 
 
 def test_Function():
+    from sympy import Max, Min
     assert mcode(f(x, y, z)) == "f[x, y, z]"
+    assert mcode(Max(x, 2)) == "Max[x, 2]"
+    assert mcode(Min(x, 2)) == "Min[x, 2]"
+    assert mcode(Max(x, y, 2)) == "Max[x, y, 2]"
     assert mcode(sin(x) ** cos(x)) == "Sin[x]^Cos[x]"
     assert mcode(conjugate(x)) == "Conjugate[x]"
 
@@ -89,4 +93,4 @@ def test_Sum():
                      (x, -oo, oo),
                      (y, -oo, oo))) == \
         "Hold[Sum[Exp[-x^2 - y^2], {x, -Infinity, Infinity}, " \
-        "{y, -Infinity, Infinity}]]"
+        "{y, -Infinity, Infinity}]]"
\ No newline at end of file
