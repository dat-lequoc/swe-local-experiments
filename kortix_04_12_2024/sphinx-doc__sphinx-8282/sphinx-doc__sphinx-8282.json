{
  "instance_id": "sphinx-doc__sphinx-8282",
  "model_patch": "diff --git a/setup.py b/setup.py\nindex 8505d2679..2571a3294 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -15,22 +15,22 @@ if sys.version_info < (3, 5):\n     sys.exit(1)\n \n install_requires = [\n-    'sphinxcontrib-applehelp',\n-    'sphinxcontrib-devhelp',\n+    'sphinxcontrib-applehelp<=1.0.7',\n+    'sphinxcontrib-devhelp<=1.0.5',\n     'sphinxcontrib-jsmath',\n-    'sphinxcontrib-htmlhelp',\n-    'sphinxcontrib-serializinghtml',\n-    'sphinxcontrib-qthelp',\n-    'Jinja2>=2.3',\n+    'sphinxcontrib-htmlhelp<=2.0.4',\n+    'sphinxcontrib-serializinghtml<=1.1.9',\n+    'sphinxcontrib-qthelp<=1.0.6',\n+    'Jinja2<3.0',\n     'Pygments>=2.0',\n     'docutils>=0.12',\n     'snowballstemmer>=1.1',\n     'babel>=1.3',\n-    'alabaster>=0.7,<0.8',\n+    'alabaster>=0.7,<0.7.12',\n     'imagesize',\n     'requests>=2.5.0',\n     'setuptools',\n-    'packaging',\n+    'packaging', 'markupsafe<=2.0.1',\n ]\n \n extras_require = {\ndiff --git a/tests/roots/test-ext-autodoc/target/overloaded.py b/tests/roots/test-ext-autodoc/target/overloaded.py\nnew file mode 100644\nindex 000000000..218136c36\n--- /dev/null\n+++ b/tests/roots/test-ext-autodoc/target/overloaded.py\n@@ -0,0 +1,13 @@\n+from typing import overload\n+\n+@overload\n+def overloaded(arg: int) -> int:\n+    ...\n+\n+@overload \n+def overloaded(arg: str) -> str:\n+    ...\n+\n+def overloaded(arg):\n+    \"\"\"Function with overloads.\"\"\"\n+    return arg\ndiff --git a/tests/test_ext_autodoc_autofunction.py b/tests/test_ext_autodoc_autofunction.py\nindex bb292bc6a..ad16e0b2c 100644\n--- a/tests/test_ext_autodoc_autofunction.py\n+++ b/tests/test_ext_autodoc_autofunction.py\n@@ -105,6 +105,20 @@ def test_decorated(app):\n \n \n @pytest.mark.sphinx('html', testroot='ext-autodoc')\n+@pytest.mark.sphinx('html', testroot='ext-autodoc', confoverrides={'autodoc_typehints': 'none'})\n+def test_overloaded_function_without_typehints(app):\n+    options = {}\n+    actual = do_autodoc(app, 'function', 'target.overloaded', options)\n+    assert list(actual) == [\n+        '',\n+        '.. py:function:: overloaded(arg)',\n+        '                 overloaded(arg)',\n+        '   :module: target',\n+        '',\n+        '   Function with overloads.',\n+        '',\n+    ]\n+\n def test_singledispatch(app):\n     options = {}\n     actual = do_autodoc(app, 'function', 'target.singledispatch.func', options)\n@@ -158,4 +172,4 @@ def test_wrapped_function_contextmanager(app):\n         '',\n         \"   You'll feel better in this context!\",\n         '',\n-    ]\n+    ]\n\\ No newline at end of file\ndiff --git a/tox.ini b/tox.ini\nindex a61299979..e2baccc07 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -28,7 +28,7 @@ setenv =\n     PYTHONWARNINGS = all,ignore::ImportWarning:importlib._bootstrap_external,ignore::DeprecationWarning:site,ignore::DeprecationWarning:distutils\n     PYTEST_ADDOPTS = --color yes\n commands=\n-    pytest --durations 25 {posargs}\n+    pytest -rA --durations 25 {posargs}\n \n [testenv:flake8]\n basepython = python3\n",
  "model_name_or_path": "KortixAI"
}