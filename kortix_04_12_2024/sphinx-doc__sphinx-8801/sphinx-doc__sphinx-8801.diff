diff --git a/setup.py b/setup.py
index dfc80578f..b5e4452f4 100644
--- a/setup.py
+++ b/setup.py
@@ -15,22 +15,22 @@ if sys.version_info < (3, 5):
     sys.exit(1)
 
 install_requires = [
-    'sphinxcontrib-applehelp',
-    'sphinxcontrib-devhelp',
+    'sphinxcontrib-applehelp<=1.0.7',
+    'sphinxcontrib-devhelp<=1.0.5',
     'sphinxcontrib-jsmath',
-    'sphinxcontrib-htmlhelp',
-    'sphinxcontrib-serializinghtml',
-    'sphinxcontrib-qthelp',
-    'Jinja2>=2.3',
+    'sphinxcontrib-htmlhelp<=2.0.4',
+    'sphinxcontrib-serializinghtml<=1.1.9',
+    'sphinxcontrib-qthelp<=1.0.6',
+    'Jinja2<3.0',
     'Pygments>=2.0',
     'docutils>=0.12',
     'snowballstemmer>=1.1',
     'babel>=1.3',
-    'alabaster>=0.7,<0.8',
+    'alabaster>=0.7,<0.7.12',
     'imagesize',
     'requests>=2.5.0',
     'setuptools',
-    'packaging',
+    'packaging', 'markupsafe<=2.0.1',
 ]
 
 extras_require = {
diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py
index dc413b5c2..b6c732279 100644
--- a/sphinx/ext/autodoc/__init__.py
+++ b/sphinx/ext/autodoc/__init__.py
@@ -2426,21 +2426,32 @@ class AttributeDocumenter(GenericAliasMixin, NewTypeMixin, SlotsMixin,  # type:
         return False
 
     def update_annotations(self, parent: Any) -> None:
-        """Update __annotations__ to support type_comment and so on."""
+        """Update __annotations__ to support type_comment and inherited annotations."""
         try:
             annotations = dict(inspect.getannotations(parent))
             parent.__annotations__ = annotations
 
+            # Traverse MRO chain to gather all annotations
             for cls in inspect.getmro(parent):
                 try:
                     module = safe_getattr(cls, '__module__')
                     qualname = safe_getattr(cls, '__qualname__')
 
+                    # Get annotations from module analyzer
                     analyzer = ModuleAnalyzer.for_module(module)
                     analyzer.analyze()
+                    
+                    # Add annotations from this class if not already present
                     for (classname, attrname), annotation in analyzer.annotations.items():
                         if classname == qualname and attrname not in annotations:
                             annotations[attrname] = annotation
+
+                    # Also check class annotations directly
+                    cls_annotations = inspect.getannotations(cls)
+                    for name, value in cls_annotations.items():
+                        if name not in annotations:
+                            annotations[name] = value
+                            
                 except (AttributeError, PycodeError):
                     pass
         except TypeError:
@@ -2656,4 +2667,4 @@ def setup(app: Sphinx) -> Dict[str, Any]:
     app.setup_extension('sphinx.ext.autodoc.type_comment')
     app.setup_extension('sphinx.ext.autodoc.typehints')
 
-    return {'version': sphinx.__display_version__, 'parallel_read_safe': True}
+    return {'version': sphinx.__display_version__, 'parallel_read_safe': True}
\ No newline at end of file
diff --git a/tests/test_ext_autodoc.py b/tests/test_ext_autodoc.py
index d555359cf..c4363acd0 100644
--- a/tests/test_ext_autodoc.py
+++ b/tests/test_ext_autodoc.py
@@ -636,6 +636,25 @@ def test_autodoc_inherited_members_Base(app):
     assert '   .. py:method:: Derived.inheritedmeth()' in actual
     assert '   .. py:method:: Derived.inheritedclassmeth' not in actual
 
+def test_autodoc_inherited_annotations(app):
+    text = '''\
+    class Foo:
+        """Foo docstring"""
+        attr1: int  #: docstring for attr1
+
+    class Bar(Foo):
+        """Bar docstring"""
+        attr2: str  #: docstring for attr2
+    '''
+    # Write test module
+    (app.srcdir / 'annotation_inheritance.py').write_text(text, encoding='utf-8')
+
+    options = {"members": None,
+               "inherited-members": None}
+    actual = do_autodoc(app, 'class', 'annotation_inheritance.Bar', options)
+    assert '   .. py:attribute:: Bar.attr1' in actual
+    assert '   .. py:attribute:: Bar.attr2' in actual
+
 
 @pytest.mark.sphinx('html', testroot='ext-autodoc')
 def test_autodoc_inherited_members_None(app):
@@ -2280,4 +2299,4 @@ def test_hide_value(app):
         '',
         '   :meta hide-value:',
         '',
-    ]
+    ]
\ No newline at end of file
diff --git a/tox.ini b/tox.ini
index 21a0faec3..be1a9127e 100644
--- a/tox.ini
+++ b/tox.ini
@@ -28,7 +28,7 @@ setenv =
     PYTHONWARNINGS = all,ignore::ImportWarning:importlib._bootstrap_external,ignore::DeprecationWarning:site,ignore::DeprecationWarning:distutils,ignore::DeprecationWarning:pip._vendor.packaging.version
     PYTEST_ADDOPTS = {env:PYTEST_ADDOPTS:} --color yes
 commands=
-    python -X dev -m pytest --durations 25 {posargs}
+    python -X dev -m pytest -rA --durations 25 {posargs}
 
 [testenv:flake8]
 basepython = python3
