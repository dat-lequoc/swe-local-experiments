diff --git a/src/_pytest/nodes.py b/src/_pytest/nodes.py
index 4a79bc861..0e85163d4 100644
--- a/src/_pytest/nodes.py
+++ b/src/_pytest/nodes.py
@@ -113,6 +113,7 @@ class Node(metaclass=NodeMeta):
         fspath: Optional[py.path.local] = None,
         nodeid: Optional[str] = None,
     ) -> None:
+        self._original_cwd = os.getcwd()
         #: a unique name within the scope of the parent node
         self.name = name
 
@@ -604,4 +605,4 @@ class Item(Node):
             fspath = py.path.local(location[0])
         relfspath = self.session._node_location_to_relpath(fspath)
         assert type(location[2]) is str
-        return (relfspath, location[1], location[2])
+        return (relfspath, location[1], location[2])
\ No newline at end of file
diff --git a/src/_pytest/reports.py b/src/_pytest/reports.py
index 178df6004..4bda455ca 100644
--- a/src/_pytest/reports.py
+++ b/src/_pytest/reports.py
@@ -327,7 +327,11 @@ class CollectReport(BaseReport):
 
     @property
     def location(self):
-        return (self.fspath, None, self.fspath)
+        if hasattr(self, '_original_cwd'):
+            fspath = os.path.relpath(self.fspath, self._original_cwd)
+        else:
+            fspath = self.fspath
+        return (fspath, None, fspath)
 
     def __repr__(self):
         return "<CollectReport {!r} lenresult={} outcome={!r}>".format(
@@ -505,4 +509,4 @@ def _report_kwargs_from_json(reportdict):
             exception_info.addsection(*section)
         reportdict["longrepr"] = exception_info
 
-    return reportdict
+    return reportdict
\ No newline at end of file
diff --git a/testing/test_reports.py b/testing/test_reports.py
index 81778e27d..9fa5fc36b 100644
--- a/testing/test_reports.py
+++ b/testing/test_reports.py
@@ -404,6 +404,34 @@ class TestReportSerialization:
         result.stdout.fnmatch_lines(["E   *Error: No module named 'unknown'"])
         result.stdout.no_fnmatch_line("ERROR  - *ConftestImportFailure*")
 
+    def test_directory_change_path_reporting(self, testdir):
+        """Test that paths are reported correctly when directory is changed in fixture"""
+        testdir.makepyfile("""
+            import os
+            import pytest
+            
+            @pytest.fixture
+            def change_dir(tmpdir):
+                old_dir = os.getcwd()
+                os.chdir(str(tmpdir))
+                yield
+                os.chdir(old_dir)
+                
+            def test_show_path(change_dir):
+                assert False
+        """)
+        
+        result = testdir.runpytest()
+        result.stdout.fnmatch_lines([
+            "*test_directory_change_path_reporting.py:*",  # Should not show ../
+        ])
+        sub_dir = testdir.tmpdir.join("ns").ensure_dir()
+        sub_dir.join("conftest").new(ext=".py").write("import unknown")
+
+        result = testdir.runpytest_subprocess(".")
+        result.stdout.fnmatch_lines(["E   *Error: No module named 'unknown'"])
+        result.stdout.no_fnmatch_line("ERROR  - *ConftestImportFailure*")
+
 
 class TestHooks:
     """Test that the hooks are working correctly for plugins"""
@@ -472,4 +500,4 @@ class TestHooks:
         with pytest.raises(AssertionError):
             _ = pytestconfig.hook.pytest_report_from_serializable(
                 config=pytestconfig, data=data
-            )
+            )
\ No newline at end of file
