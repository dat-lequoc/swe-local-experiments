{
  "instance_id": "sympy__sympy-12236",
  "model_patch": "diff --git a/sympy/polys/partfrac.py b/sympy/polys/partfrac.py\nindex 612b8f4607..8aa7517336 100644\n--- a/sympy/polys/partfrac.py\n+++ b/sympy/polys/partfrac.py\n@@ -76,6 +76,28 @@ def apart(f, x=None, full=False, **options):\n         return f\n     else:\n         P, Q = f.as_numer_denom()\n+        # Enhanced normalization for symbolic coefficients\n+        if x is not None:\n+            P = P.expand()\n+            P = P.collect(x)\n+            if not P.is_polynomial(x):\n+                P = Add(*[t.collect(x) for t in P.as_ordered_terms()])\n+            P = P.expand()\n+            # Additional normalization for symbolic coefficients\n+            P = P.collect(x, evaluate=False)\n+            P = Add(*[coeff*monom for monom, coeff in P.items()])\n+            \n+            # Track symbolic coefficients\n+            if any(t.free_symbols for t in P.as_ordered_terms()):\n+                P = P.as_ordered_terms()\n+                P = Add(*[t.collect(x, evaluate=False) for t in P])\n+            \n+            # Normalize denominator similarly\n+            Q = Q.expand()\n+            Q = Q.collect(x)\n+            Q = Q.expand()\n+            Q = Q.collect(x, evaluate=False)\n+            Q = Add(*[coeff*monom for monom, coeff in Q.items()])\n \n     _options = options.copy()\n     options = set_defaults(options, extension=True)\n@@ -323,6 +345,28 @@ def apart_list(f, x=None, dummies=None, **options):\n         return f\n     else:\n         P, Q = f.as_numer_denom()\n+        # Enhanced normalization for symbolic coefficients\n+        if x is not None:\n+            P = P.expand()\n+            P = P.collect(x)\n+            if not P.is_polynomial(x):\n+                P = Add(*[t.collect(x) for t in P.as_ordered_terms()])\n+            P = P.expand()\n+            # Additional normalization for symbolic coefficients\n+            P = P.collect(x, evaluate=False)\n+            P = Add(*[coeff*monom for monom, coeff in P.items()])\n+            \n+            # Track symbolic coefficients\n+            if any(t.free_symbols for t in P.as_ordered_terms()):\n+                P = P.as_ordered_terms()\n+                P = Add(*[t.collect(x, evaluate=False) for t in P])\n+            \n+            # Normalize denominator similarly\n+            Q = Q.expand()\n+            Q = Q.collect(x)\n+            Q = Q.expand()\n+            Q = Q.collect(x, evaluate=False)\n+            Q = Add(*[coeff*monom for monom, coeff in Q.items()])\n \n     options = set_defaults(options, extension=True)\n     (P, Q), opt = parallel_poly_from_expr((P, Q), x, **options)\n@@ -495,4 +539,4 @@ def assemble_partfrac_list(partial_list):\n             for root in r:\n                 pfd += nf(root)/df(root)**ex\n \n-    return common*pfd\n+    return common*pfd\n\\ No newline at end of file\ndiff --git a/sympy/polys/tests/test_partfrac.py b/sympy/polys/tests/test_partfrac.py\nindex 707fb45871..d8cf47cae5 100644\n--- a/sympy/polys/tests/test_partfrac.py\n+++ b/sympy/polys/tests/test_partfrac.py\n@@ -164,7 +164,14 @@ class foo(Expr):\n     c = 1/(1 + y)\n     assert apart(e + foo()) == c + foo()\n \n+def test_symbolic_apart():\n+    from sympy import symbols\n+    a, t = symbols('a t', real=True)\n+    bug = a * (-t + (-t + 1) * (2 * t - 1)) / (2 * t - 1)\n+    assert apart(bug, t) == -a*t + a/2 - a/(2*(2*t - 1))\n+    assert apart(bug.subs(a, 1), t) == -t + S(1)/2 - 1/(2*(2*t - 1))\n+\n def test_issue_5798():\n     assert apart(\n         2*x/(x**2 + 1) - (x - 1)/(2*(x**2 + 1)) + 1/(2*(x + 1)) - 2/x) == \\\n-        (3*x + 1)/(x**2 + 1)/2 + 1/(x + 1)/2 - 2/x\n+        (3*x + 1)/(x**2 + 1)/2 + 1/(x + 1)/2 - 2/x\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}