{
  "instance_id": "pallets__flask-4045",
  "model_patch": "diff --git a/src/flask/blueprints.py b/src/flask/blueprints.py\nindex 5fb84d86..6dfd4b80 100644\n--- a/src/flask/blueprints.py\n+++ b/src/flask/blueprints.py\n@@ -188,6 +188,7 @@ class Blueprint(Scaffold):\n             template_folder=template_folder,\n             root_path=root_path,\n         )\n+        assert \".\" not in name, \"Blueprint name should not contain dots\"\n         self.name = name\n         self.url_prefix = url_prefix\n         self.subdomain = subdomain\n@@ -539,4 +540,4 @@ class Blueprint(Scaffold):\n         self.record_once(\n             lambda s: s.app.url_default_functions.setdefault(None, []).append(f)\n         )\n-        return f\n+        return f\n\\ No newline at end of file\ndiff --git a/tests/test_blueprints.py b/tests/test_blueprints.py\nindex b986ca02..6b3e35a8 100644\n--- a/tests/test_blueprints.py\n+++ b/tests/test_blueprints.py\n@@ -254,8 +254,13 @@ def test_templates_list(test_apps):\n \n \n def test_dotted_names(app, client):\n-    frontend = flask.Blueprint(\"myapp.frontend\", __name__)\n-    backend = flask.Blueprint(\"myapp.backend\", __name__)\n+    with pytest.raises(AssertionError) as excinfo:\n+        flask.Blueprint(\"myapp.frontend\", __name__)\n+    assert \"Blueprint name should not contain dots\" in str(excinfo.value)\n+\n+    # Test that normal names still work\n+    frontend = flask.Blueprint(\"frontend\", __name__)\n+    backend = flask.Blueprint(\"backend\", __name__)\n \n     @frontend.route(\"/fe\")\n     def frontend_index():\n@@ -898,4 +903,4 @@ def test_nested_blueprint(app, client):\n     assert client.get(\"/parent/child/grandchild/\").data == b\"Grandchild yes\"\n     assert client.get(\"/parent/no\").data == b\"Parent no\"\n     assert client.get(\"/parent/child/no\").data == b\"Parent no\"\n-    assert client.get(\"/parent/child/grandchild/no\").data == b\"Grandchild no\"\n+    assert client.get(\"/parent/child/grandchild/no\").data == b\"Grandchild no\"\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}