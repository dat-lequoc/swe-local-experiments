{
  "instance_id": "sympy__sympy-13480",
  "model_patch": "diff --git a/sympy/functions/elementary/hyperbolic.py b/sympy/functions/elementary/hyperbolic.py\nindex 2a4555d919..8762d75c1c 100644\n--- a/sympy/functions/elementary/hyperbolic.py\n+++ b/sympy/functions/elementary/hyperbolic.py\n@@ -587,7 +587,7 @@ def eval(cls, arg):\n                 x, m = _peeloff_ipi(arg)\n                 if m:\n                     cothm = coth(m)\n-                    if cotm is S.ComplexInfinity:\n+                    if cothm is S.ComplexInfinity:\n                         return coth(x)\n                     else: # cothm == 0\n                         return tanh(x)\n@@ -1400,4 +1400,4 @@ def inverse(self, argindex=1):\n         return csch\n \n     def _eval_rewrite_as_log(self, arg):\n-        return log(1/arg + sqrt(1/arg**2 + 1))\n+        return log(1/arg + sqrt(1/arg**2 + 1))\n\\ No newline at end of file\ndiff --git a/sympy/functions/elementary/tests/test_hyperbolic.py b/sympy/functions/elementary/tests/test_hyperbolic.py\nindex dd9ebd72a2..5c1d1d9db5 100644\n--- a/sympy/functions/elementary/tests/test_hyperbolic.py\n+++ b/sympy/functions/elementary/tests/test_hyperbolic.py\n@@ -212,6 +212,10 @@ def test_tanh_series():\n \n def test_coth():\n     x, y = symbols('x,y')\n+    \n+    # Test for coth(log(tan(x))) at various values\n+    for val in [2, 3, 5, 6, 8, 9, 11, 12]:\n+        assert coth(log(tan(val))).is_real is True\n \n     k = Symbol('k', integer=True)\n \n@@ -934,4 +938,4 @@ def test_cosh_expansion():\n     assert cosh(x+y).expand(trig=True) == cosh(x)*cosh(y) + sinh(x)*sinh(y)\n     assert cosh(2*x).expand(trig=True) == cosh(x)**2 + sinh(x)**2\n     assert cosh(3*x).expand(trig=True).expand() == \\\n-        3*sinh(x)**2*cosh(x) + cosh(x)**3\n+        3*sinh(x)**2*cosh(x) + cosh(x)**3\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}