diff --git a/django/contrib/sessions/backends/base.py b/django/contrib/sessions/backends/base.py
index 187e14b1b7..4cec65183a 100644
--- a/django/contrib/sessions/backends/base.py
+++ b/django/contrib/sessions/backends/base.py
@@ -132,8 +132,20 @@ class SessionBase:
 
     def _legacy_decode(self, session_data):
         # RemovedInDjango40Warning: pre-Django 3.1 format will be invalid.
-        encoded_data = base64.b64decode(session_data.encode('ascii'))
         try:
+            # Add padding if necessary
+            pad_len = len(session_data) % 4
+            if pad_len:
+                session_data += '=' * (4 - pad_len)
+            
+            # Attempt base64 decode
+            try:
+                encoded_data = base64.b64decode(session_data.encode('ascii'))
+            except Exception as e:
+                logger = logging.getLogger('django.security.SuspiciousSession')
+                logger.warning(f'Invalid base64 session data: {str(e)}')
+                return {}
+
             # could produce ValueError if there is no ':'
             hash, serialized = encoded_data.split(b':', 1)
             expected_hash = self._hash(serialized)
@@ -383,4 +395,4 @@ class SessionBase:
         NotImplementedError. If it isn't necessary, because the backend has
         a built-in expiration mechanism, it should be a no-op.
         """
-        raise NotImplementedError('This backend does not support clear_expired().')
+        raise NotImplementedError('This backend does not support clear_expired().')
\ No newline at end of file
