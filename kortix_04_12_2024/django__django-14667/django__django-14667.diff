diff --git a/django/db/models/query.py b/django/db/models/query.py
index 71a52fb754..f2962aeeec 100644
--- a/django/db/models/query.py
+++ b/django/db/models/query.py
@@ -1221,7 +1221,15 @@ class QuerySet:
         if fields == (None,):
             clone.query.clear_deferred_loading()
         else:
-            clone.query.add_deferred_loading(fields)
+            if clone.query.deferred_loading[1]:  # If in only() mode
+                only_fields = clone.query.deferred_loading[0]
+                # Remove the deferred fields from the positive set
+                only_fields.difference_update(fields)
+                # Ensure PK is always included
+                only_fields.add(self.model._meta.pk.attname)
+                clone.query.deferred_loading = (only_fields, True)
+            else:
+                clone.query.add_deferred_loading(fields)
         return clone
 
     def only(self, *fields):
@@ -2040,4 +2048,4 @@ def get_related_populators(klass_info, select, db):
     for rel_klass_info in related_klass_infos:
         rel_cls = RelatedPopulator(rel_klass_info, select, db)
         iterators.append(rel_cls)
-    return iterators
+    return iterators
\ No newline at end of file
diff --git a/tests/queries/tests.py b/tests/queries/tests.py
index fa87e7859c..2d338e5051 100644
--- a/tests/queries/tests.py
+++ b/tests/queries/tests.py
@@ -248,6 +248,20 @@ class Queries1Tests(TestCase):
     def test_ticket7323(self):
         self.assertEqual(Item.objects.values('creator', 'name').count(), 4)
 
+    def test_defer_only_chain(self):
+        # Test that defer() properly handles fields after only()
+        qs = Note.objects.only('note').defer('note')
+        self.assertEqual(list(qs.values_list('id', flat=True)), [1, 2, 3])
+        
+        # Test multiple defer after only
+        qs = Note.objects.only('note', 'misc').defer('note').defer('misc')
+        self.assertEqual(list(qs.values_list('id', flat=True)), [1, 2, 3])
+        
+        # Test that defer after only with other fields works correctly
+        qs = Note.objects.only('note', 'misc').defer('note')
+        self.assertEqual(set(qs.values_list('misc', flat=True)), {'foo', 'bar'})
+
+
     def test_ticket2253(self):
         q1 = Item.objects.order_by('name')
         q2 = Item.objects.filter(id=self.i1.id)
@@ -3980,4 +3994,4 @@ class Ticket23622Tests(TestCase):
             set(Ticket23605A.objects.filter(qx).values_list('pk', flat=True)),
             set(Ticket23605A.objects.filter(qy).values_list('pk', flat=True))
         )
-        self.assertSequenceEqual(Ticket23605A.objects.filter(qx), [a2])
+        self.assertSequenceEqual(Ticket23605A.objects.filter(qx), [a2])
\ No newline at end of file
