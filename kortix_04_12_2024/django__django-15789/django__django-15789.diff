diff --git a/django/utils/html.py b/django/utils/html.py
index d0bc97be80..255e932d71 100644
--- a/django/utils/html.py
+++ b/django/utils/html.py
@@ -59,15 +59,19 @@ _json_script_escapes = {
 }
 
 
-def json_script(value, element_id=None):
+def json_script(value, element_id=None, encoder=None):
     """
     Escape all the HTML/XML special characters with their unicode escapes, so
     value is safe to be output anywhere except for inside a tag attribute. Wrap
     the escaped JSON in a script tag.
+
+    The encoder parameter allows using a custom JSON encoder class.
     """
     from django.core.serializers.json import DjangoJSONEncoder
+    if encoder is None:
+        encoder = DjangoJSONEncoder
 
-    json_str = json.dumps(value, cls=DjangoJSONEncoder).translate(_json_script_escapes)
+    json_str = json.dumps(value, cls=encoder).translate(_json_script_escapes)
     if element_id:
         template = '<script id="{}" type="application/json">{}</script>'
         args = (element_id, mark_safe(json_str))
@@ -418,4 +422,4 @@ def html_safe(klass):
     klass_str = klass.__str__
     klass.__str__ = lambda self: mark_safe(klass_str(self))
     klass.__html__ = lambda self: str(self)
-    return klass
+    return klass
\ No newline at end of file
diff --git a/tests/utils_tests/test_html.py b/tests/utils_tests/test_html.py
index 22a43fd4cd..e3e48bc9fa 100644
--- a/tests/utils_tests/test_html.py
+++ b/tests/utils_tests/test_html.py
@@ -1,4 +1,5 @@
 import os
+import json
 from datetime import datetime
 
 from django.test import SimpleTestCase
@@ -217,6 +218,19 @@ class TestUtilsHtml(SimpleTestCase):
             '<script type="application/json">{"key": "value"}</script>',
         )
 
+    def test_json_script_custom_encoder(self):
+        class CustomEncoder(json.JSONEncoder):
+            def default(self, obj):
+                if isinstance(obj, datetime):
+                    return obj.isoformat()
+                return super().default(obj)
+
+        now = datetime(2024, 1, 1, 12, 0, 0)
+        self.assertEqual(
+            json_script({"datetime": now}, "test_id", encoder=CustomEncoder),
+            '<script id="test_id" type="application/json">{"datetime": "2024-01-01T12:00:00"}</script>'
+        )
+
     def test_smart_urlquote(self):
         items = (
             ("http://öäü.com/", "http://xn--4ca9at.com/"),
@@ -334,4 +348,4 @@ class TestUtilsHtml(SimpleTestCase):
         )
         for value in tests:
             with self.subTest(value=value):
-                self.assertEqual(urlize(value), value)
+                self.assertEqual(urlize(value), value)
\ No newline at end of file
