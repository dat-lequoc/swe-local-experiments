{
  "instance_id": "matplotlib__matplotlib-26011",
  "model_patch": "diff --git a/lib/matplotlib/tests/test_axes.py b/lib/matplotlib/tests/test_axes.py\nindex baef9ac09a..905c5a233e 100644\n--- a/lib/matplotlib/tests/test_axes.py\n+++ b/lib/matplotlib/tests/test_axes.py\n@@ -58,6 +58,22 @@ def test_get_labels():\n     assert ax.get_xlabel() == 'x label'\n     assert ax.get_ylabel() == 'y label'\n \n+def test_shared_axes_callbacks():\n+    fig, (ax1, ax2) = plt.subplots(1, 2, sharex=True)\n+    callback_called = []\n+    def callback(ax): \n+        callback_called.append(ax)\n+    ax2.callbacks.connect('xlim_changed', callback)\n+    \n+    # Test callback fires when limits change from primary axis\n+    ax1.set_xlim(0, 10)\n+    assert callback_called == [ax2]\n+    \n+    # Test callback fires when limits change directly\n+    callback_called.clear()\n+    ax2.set_xlim(0, 5)\n+    assert callback_called == [ax2]\n+\n \n def test_repr():\n     fig, ax = plt.subplots()\n@@ -8793,4 +8809,4 @@ def test_set_secondary_axis_color():\n     assert mcolors.same_color(sax.spines[\"top\"].get_edgecolor(), \"red\")\n     assert mcolors.same_color(sax.xaxis.get_tick_params()[\"color\"], \"red\")\n     assert mcolors.same_color(sax.xaxis.get_tick_params()[\"labelcolor\"], \"red\")\n-    assert mcolors.same_color(sax.xaxis.label.get_color(), \"red\")\n+    assert mcolors.same_color(sax.xaxis.label.get_color(), \"red\")\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}