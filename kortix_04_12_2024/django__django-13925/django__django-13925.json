{
  "instance_id": "django__django-13925",
  "model_patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 4038859cfa..ff54ddc93e 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -1299,6 +1299,12 @@ class Model(metaclass=ModelBase):\n     def _check_default_pk(cls):\n         if (\n             cls._meta.pk.auto_created and\n+            not cls._meta.abstract and\n+            not any(\n+                isinstance(field, OneToOneField) and field.parent_link\n+                for field in cls._meta.local_fields\n+            ) and\n+            not cls._meta.parents and\n             not settings.is_overridden('DEFAULT_AUTO_FIELD') and\n             not cls._meta.app_config._is_default_auto_field_overridden\n         ):\n@@ -2136,4 +2142,4 @@ def model_unpickle(model_id):\n     return model.__new__(model)\n \n \n-model_unpickle.__safe_for_unpickle__ = True\n+model_unpickle.__safe_for_unpickle__ = True\n\\ No newline at end of file\ndiff --git a/tests/model_inheritance/test_pk_inheritance.py b/tests/model_inheritance/test_pk_inheritance.py\nnew file mode 100644\nindex 0000000000..659a9e295a\n--- /dev/null\n+++ b/tests/model_inheritance/test_pk_inheritance.py\n@@ -0,0 +1,27 @@\n+from django.test import TestCase\n+from django.test.utils import override_settings\n+from django.core import checks\n+\n+from .models import Restaurant, ItalianRestaurant, ParkingLot, Place\n+\n+\n+class PKInheritanceTests(TestCase):\n+    def test_pk_inheritance_warning(self):\n+        \"\"\"\n+        Test that models.W042 is not raised for models inheriting PKs.\n+        \"\"\"\n+        with override_settings(DEFAULT_AUTO_FIELD=None):\n+            # ItalianRestaurant inherits PK from Restaurant\n+            errors = ItalianRestaurant.check()\n+            w042_errors = [e for e in errors if e.id == 'models.W042']\n+            self.assertEqual(len(w042_errors), 0)\n+\n+            # ParkingLot has explicit parent_link=True\n+            errors = ParkingLot.check()\n+            w042_errors = [e for e in errors if e.id == 'models.W042']\n+            self.assertEqual(len(w042_errors), 0)\n+\n+            # Place should still get the warning as it creates its own PK\n+            errors = Place.check()\n+            w042_errors = [e for e in errors if e.id == 'models.W042']\n+            self.assertEqual(len(w042_errors), 1)\n",
  "model_name_or_path": "KortixAI"
}