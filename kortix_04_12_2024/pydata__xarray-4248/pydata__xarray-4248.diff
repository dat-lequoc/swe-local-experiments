diff --git a/xarray/tests/test_dataset.py b/xarray/tests/test_dataset.py
index 9037013c..f35e247a 100644
--- a/xarray/tests/test_dataset.py
+++ b/xarray/tests/test_dataset.py
@@ -189,6 +189,30 @@ class InaccessibleVariableDataStore(backends.InMemoryDataStore):
 
 
 class TestDataset:
+    def test_repr_with_units(self):
+        ds = Dataset(
+            {
+                "temperature": (("x", "y"), [[20, 21], [22, 23]], {"units": "°C"}),
+                "precipitation": (("x", "y"), [[1, 2], [3, 4]], {"units": "mm"}),
+            },
+            coords={
+                "x": ("x", [1, 2], {"units": "degrees_north"}),
+                "y": ("y", [1, 2], {"units": "degrees_east"}),
+            },
+        )
+        expected = dedent(
+            """\
+            <xarray.Dataset>
+            Dimensions:        (x: 2, y: 2)
+            Coordinates:
+              * x, in degrees_north  (x) int64 1 2
+              * y, in degrees_east   (y) int64 1 2
+            Data variables:
+                temperature, in °C     (x, y) int64 20 21 22 23
+                precipitation, in mm   (x, y) int64 1 2 3 4"""
+        )
+        assert expected in repr(ds)
+
     def test_repr(self):
         data = create_test_data(seed=123)
         data.attrs["foo"] = "bar"
@@ -6275,4 +6299,4 @@ def test_weakref():
 
     ds = Dataset()
     r = ref(ds)
-    assert r() is ds
+    assert r() is ds
\ No newline at end of file
diff --git a/xarray/tests/test_formatting.py b/xarray/tests/test_formatting.py
index 82de8080..bfde5727 100644
--- a/xarray/tests/test_formatting.py
+++ b/xarray/tests/test_formatting.py
@@ -377,6 +377,20 @@ class TestFormatting:
         actual = formatting.diff_dataset_repr(ds_a, ds_b, "identical")
         assert actual == expected
 
+    def test_format_unit_string(self):
+        from xarray.core.variable import Variable
+        var_no_attrs = Variable('x', [1, 2, 3])
+        assert format_unit_string(var_no_attrs) == ""
+        
+        var_no_units = Variable('x', [1, 2, 3], attrs={'other': 'attr'})
+        assert format_unit_string(var_no_units) == ""
+        
+        var_empty_units = Variable('x', [1, 2, 3], attrs={'units': ''})
+        assert format_unit_string(var_empty_units) == ""
+        
+        var_with_units = Variable('x', [1, 2, 3], attrs={'units': 'meters'})
+        assert format_unit_string(var_with_units) == ", in meters"
+
     def test_array_repr(self):
         ds = xr.Dataset(coords={"foo": [1, 2, 3], "bar": [1, 2, 3]})
         ds[(1, 2)] = xr.DataArray([0], dims="test")
@@ -420,4 +434,4 @@ def test_large_array_repr_length():
     da = xr.DataArray(np.random.randn(100, 5, 1))
 
     result = repr(da).splitlines()
-    assert len(result) < 50
+    assert len(result) < 50
\ No newline at end of file
