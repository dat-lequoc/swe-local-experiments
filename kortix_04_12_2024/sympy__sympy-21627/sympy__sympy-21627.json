{
  "instance_id": "sympy__sympy-21627",
  "model_patch": "diff --git a/sympy/functions/elementary/hyperbolic.py b/sympy/functions/elementary/hyperbolic.py\nindex 892e19cabb..d7b03dcac8 100644\n--- a/sympy/functions/elementary/hyperbolic.py\n+++ b/sympy/functions/elementary/hyperbolic.py\n@@ -268,6 +268,14 @@ def _eval_is_zero(self):\n         arg = self.args[0]\n         if arg.is_zero:\n             return True\n+        if arg.is_extended_real is False:\n+            return None  # Return None for complex arguments to prevent recursion\n+        if arg.is_extended_real is False:\n+            return None  # Return None for complex arguments to prevent recursion\n+        if arg.is_extended_real is False:\n+            return None  # Return None for complex arguments to prevent recursion\n+        if arg.is_extended_real is False:\n+            return None  # Return None for complex arguments to prevent recursion\n \n \n class cosh(HyperbolicFunction):\n@@ -717,6 +725,14 @@ def _eval_is_zero(self):\n         arg = self.args[0]\n         if arg.is_zero:\n             return True\n+        if arg.is_extended_real is False:\n+            return None  # Return None for complex arguments to prevent recursion\n+        if arg.is_extended_real is False:\n+            return None  # Return None for complex arguments to prevent recursion\n+        if arg.is_extended_real is False:\n+            return None  # Return None for complex arguments to prevent recursion\n+        if arg.is_extended_real is False:\n+            return None  # Return None for complex arguments to prevent recursion\n \n \n class coth(HyperbolicFunction):\n@@ -1215,6 +1231,14 @@ def _eval_is_zero(self):\n         arg = self.args[0]\n         if arg.is_zero:\n             return True\n+        if arg.is_extended_real is False:\n+            return None  # Return None for complex arguments to prevent recursion\n+        if arg.is_extended_real is False:\n+            return None  # Return None for complex arguments to prevent recursion\n+        if arg.is_extended_real is False:\n+            return None  # Return None for complex arguments to prevent recursion\n+        if arg.is_extended_real is False:\n+            return None  # Return None for complex arguments to prevent recursion\n \n \n class acosh(InverseHyperbolicFunction):\n@@ -1462,6 +1486,14 @@ def _eval_is_zero(self):\n         arg = self.args[0]\n         if arg.is_zero:\n             return True\n+        if arg.is_extended_real is False:\n+            return None  # Return None for complex arguments to prevent recursion\n+        if arg.is_extended_real is False:\n+            return None  # Return None for complex arguments to prevent recursion\n+        if arg.is_extended_real is False:\n+            return None  # Return None for complex arguments to prevent recursion\n+        if arg.is_extended_real is False:\n+            return None  # Return None for complex arguments to prevent recursion\n \n \n     def inverse(self, argindex=1):\n@@ -1792,4 +1824,4 @@ def inverse(self, argindex=1):\n         return csch\n \n     def _eval_rewrite_as_log(self, arg, **kwargs):\n-        return log(1/arg + sqrt(1/arg**2 + 1))\n+        return log(1/arg + sqrt(1/arg**2 + 1))\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}