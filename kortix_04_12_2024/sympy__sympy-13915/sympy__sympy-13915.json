{
  "instance_id": "sympy__sympy-13915",
  "model_patch": "diff --git a/sympy/core/tests/test_subs.py b/sympy/core/tests/test_subs.py\nindex 90abb9e374..4be139b5e1 100644\n--- a/sympy/core/tests/test_subs.py\n+++ b/sympy/core/tests/test_subs.py\n@@ -621,6 +621,18 @@ def test_issue_4680():\n     N = Symbol('N')\n     assert N.subs(dict(N=3)) == 3\n \n+def test_undefined_substitution():\n+    # Test substitutions that lead to undefined expressions\n+    a, b = symbols('a b')\n+    expr = (1/(a+b) + 1/(a-b))/(1/(a+b) - 1/(a-b))\n+    # When b->a, both numerator and denominator contain undefined terms\n+    assert expr.subs(b, a) == nan\n+    # Test simpler undefined case\n+    assert (1/x).subs(x, 0) == zoo\n+    # Test complex undefined case\n+    expr2 = 1/(a**2 - b**2)\n+    assert expr2.subs(b, a) == zoo\n+\n \n def test_issue_6158():\n     assert (x - 1).subs(1, y) == x - y\n@@ -778,4 +790,4 @@ def test_issue_12657():\n     assert (x < -oo).subs(list(reversed(reps))) == (x < 1)\n     reps = [(-oo, 2), (oo, 1)]\n     assert (x < oo).subs(reps) == (x < 1)\n-    assert (x < oo).subs(list(reversed(reps))) == (x < 1)\n+    assert (x < oo).subs(list(reversed(reps))) == (x < 1)\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}