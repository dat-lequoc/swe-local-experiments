{
  "patch": "diff --git a/sympy/core/mul.py b/sympy/core/mul.py\n--- a/sympy/core/mul.py\n+++ b/sympy/core/mul.py\n@@ -423,6 +423,11 @@ def _gather(c_powers):\n             changed = False\n             for b, e in c_powers:\n                 if e.is_zero:\n+                    # canceling out infinities yields NaN\n+                    if (b.is_Add or b.is_Mul) and any(infty in b.args\n+                        for infty in (S.ComplexInfinity, S.Infinity,\n+                                      S.NegativeInfinity)):\n+                        return [S.NaN], [], None\n                     continue\n                 if e is S.One:\n                     if b.is_Number:\n",
  "test_patch": "diff --git a/sympy/core/tests/test_arit.py b/sympy/core/tests/test_arit.py\n--- a/sympy/core/tests/test_arit.py\n+++ b/sympy/core/tests/test_arit.py\n@@ -1,7 +1,7 @@\n from __future__ import division\n \n from sympy import (Basic, Symbol, sin, cos, exp, sqrt, Rational, Float, re, pi,\n-        sympify, Add, Mul, Pow, Mod, I, log, S, Max, symbols, oo, Integer,\n+        sympify, Add, Mul, Pow, Mod, I, log, S, Max, symbols, oo, zoo, Integer,\n         sign, im, nan, Dummy, factorial, comp, refine\n )\n from sympy.core.compatibility import long, range\n@@ -1937,6 +1937,14 @@ def test_Mul_with_zero_infinite():\n     assert e.is_positive is None\n     assert e.is_hermitian is None\n \n+def test_Mul_does_not_cancel_infinities():\n+    a, b = symbols('a b')\n+    assert ((zoo + 3*a)/(3*a + zoo)) is nan\n+    assert ((b - oo)/(b - oo)) is nan\n+    # issue 13904\n+    expr = (1/(a+b) + 1/(a-b))/(1/(a+b) - 1/(a-b))\n+    assert expr.subs(b, a) is nan\n+\n def test_issue_8247_8354():\n     from sympy import tan\n     z = sqrt(1 + sqrt(3)) + sqrt(3 + 3*sqrt(3)) - sqrt(10 + 6*sqrt(3))\n"
}