{
  "instance_id": "sphinx-doc__sphinx-7686",
  "model_patch": "diff --git a/setup.py b/setup.py\nindex a427d5493..978e3d8e0 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -15,22 +15,22 @@ if sys.version_info < (3, 5):\n     sys.exit(1)\n \n install_requires = [\n-    'sphinxcontrib-applehelp',\n-    'sphinxcontrib-devhelp',\n+    'sphinxcontrib-applehelp<=1.0.7',\n+    'sphinxcontrib-devhelp<=1.0.5',\n     'sphinxcontrib-jsmath',\n-    'sphinxcontrib-htmlhelp',\n-    'sphinxcontrib-serializinghtml',\n-    'sphinxcontrib-qthelp',\n-    'Jinja2>=2.3',\n+    'sphinxcontrib-htmlhelp<=2.0.4',\n+    'sphinxcontrib-serializinghtml<=1.1.9',\n+    'sphinxcontrib-qthelp<=1.0.6',\n+    'Jinja2<3.0',\n     'Pygments>=2.0',\n     'docutils>=0.12',\n     'snowballstemmer>=1.1',\n     'babel>=1.3',\n-    'alabaster>=0.7,<0.8',\n+    'alabaster>=0.7,<0.7.12',\n     'imagesize',\n     'requests>=2.5.0',\n     'setuptools',\n-    'packaging',\n+    'packaging', 'markupsafe<=2.0.1',\n ]\n \n extras_require = {\ndiff --git a/sphinx/ext/autosummary/generate.py b/sphinx/ext/autosummary/generate.py\nindex a57c73fb7..eed13dfcc 100644\n--- a/sphinx/ext/autosummary/generate.py\n+++ b/sphinx/ext/autosummary/generate.py\n@@ -246,7 +246,30 @@ def generate_autosummary_content(name: str, obj: Any, parent: Any,\n     ns.update(context)\n \n     if doc.objtype == 'module':\n-        ns['members'] = dir(obj)\n+        all_members = dir(obj)\n+        filtered_members = []\n+        \n+        # Filter members based on imported_members setting\n+        try:\n+            analyzer = ModuleAnalyzer.for_module(name)\n+            for member in all_members:\n+                if member.startswith('__'):  # Keep special attributes\n+                    filtered_members.append(member)\n+                    continue\n+                if imported_members:\n+                    filtered_members.append(member)\n+                else:\n+                    # Only include if it's defined in the module\n+                    if hasattr(obj, member):\n+                        member_obj = getattr(obj, member)\n+                        if (getattr(member_obj, '__module__', obj.__name__) == obj.__name__ or\n+                            member in analyzer.find_attr_docs()[1]):\n+                            filtered_members.append(member)\n+        except PycodeError:\n+            # Fallback to all members if analysis fails\n+            filtered_members = all_members\n+\n+        ns['members'] = filtered_members\n         ns['functions'], ns['all_functions'] = \\\n             get_members(obj, {'function'}, imported=imported_members)\n         ns['classes'], ns['all_classes'] = \\\n@@ -254,7 +277,7 @@ def generate_autosummary_content(name: str, obj: Any, parent: Any,\n         ns['exceptions'], ns['all_exceptions'] = \\\n             get_members(obj, {'exception'}, imported=imported_members)\n         ns['attributes'], ns['all_attributes'] = \\\n-            get_module_attrs(ns['members'])\n+            get_module_attrs(filtered_members)\n         ispackage = hasattr(obj, '__path__')\n         if ispackage and recursive:\n             ns['modules'], ns['all_modules'] = get_modules(obj)\n@@ -582,4 +605,4 @@ def main(argv: List[str] = sys.argv[1:]) -> None:\n \n \n if __name__ == '__main__':\n-    main()\n+    main()\n\\ No newline at end of file\ndiff --git a/tests/test_ext_autosummary.py b/tests/test_ext_autosummary.py\nindex 166029ccb..32accd457 100644\n--- a/tests/test_ext_autosummary.py\n+++ b/tests/test_ext_autosummary.py\n@@ -413,8 +413,48 @@ def test_invalid_autosummary_generate(app, status, warning):\n     assert 'WARNING: autosummary_generate: file not found: unknown.rst' in warning.getvalue()\n \n \n+def test_imported_members_filtering(app):\n+    text = '''\n+.. autosummary::\n+   :toctree: generated\n+\n+   target\n+'''\n+    with open(app.srcdir / 'target.py', 'w') as f:\n+        f.write('import os\\n\\ndef local_func(): pass\\n')\n+    \n+    with open(app.srcdir / 'index.rst', 'w') as f:\n+        f.write(text)\n+    \n+    app.config.autosummary_imported_members = False\n+    app.build()\n+    \n+    content = (app.srcdir / 'generated' / 'target.rst').read_text()\n+    assert 'os' not in content\n+    assert 'local_func' in content\n+\n+def test_imported_members_filtering(app):\n+    text = '''\n+.. autosummary::\n+   :toctree: generated\n+\n+   target\n+'''\n+    with open(app.srcdir / 'target.py', 'w') as f:\n+        f.write('import os\\n\\ndef local_func(): pass\\n')\n+    \n+    with open(app.srcdir / 'index.rst', 'w') as f:\n+        f.write(text)\n+    \n+    app.config.autosummary_imported_members = False\n+    app.build()\n+    \n+    content = (app.srcdir / 'generated' / 'target.rst').read_text()\n+    assert 'os' not in content\n+    assert 'local_func' in content\n+\n def test_autogen(rootdir, tempdir):\n     with cd(rootdir / 'test-templating'):\n         args = ['-o', tempdir, '-t', '.', 'autosummary_templating.txt']\n         autogen_main(args)\n-        assert (tempdir / 'sphinx.application.TemplateBridge.rst').exists()\n+        assert (tempdir / 'sphinx.application.TemplateBridge.rst').exists()\n\\ No newline at end of file\ndiff --git a/tox.ini b/tox.ini\nindex d9f040544..bf39854b6 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -28,7 +28,7 @@ extras =\n setenv =\n     PYTHONWARNINGS = all,ignore::ImportWarning:importlib._bootstrap_external,ignore::DeprecationWarning:site,ignore::DeprecationWarning:distutils\n commands=\n-    pytest --durations 25 {posargs}\n+    pytest -rA --durations 25 {posargs}\n \n [testenv:flake8]\n basepython = python3\n",
  "model_name_or_path": "KortixAI"
}