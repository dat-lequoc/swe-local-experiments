diff --git a/django/contrib/admin/views/autocomplete.py b/django/contrib/admin/views/autocomplete.py
index 3903e4c98c..3167b3f48a 100644
--- a/django/contrib/admin/views/autocomplete.py
+++ b/django/contrib/admin/views/autocomplete.py
@@ -26,12 +26,28 @@ class AutocompleteJsonView(BaseListView):
         context = self.get_context_data()
         return JsonResponse({
             'results': [
-                {'id': str(getattr(obj, to_field_name)), 'text': str(obj)}
+                self.serialize_result(obj, to_field_name)
                 for obj in context['object_list']
             ],
             'pagination': {'more': context['page_obj'].has_next()},
         })
 
+    def serialize_result(self, obj, to_field_name):
+        """
+        Serialize object for JSON response.
+        
+        Args:
+            obj: The model instance
+            to_field_name: The field to use for the object's ID
+            
+        Returns:
+            dict: Serialized object with 'id' and 'text' keys
+        """
+        return {
+            'id': str(getattr(obj, to_field_name)),
+            'text': str(obj),
+        }
+
     def get_paginator(self, *args, **kwargs):
         """Use the ModelAdmin's paginator."""
         return self.model_admin.get_paginator(self.request, *args, **kwargs)
@@ -99,4 +115,4 @@ class AutocompleteJsonView(BaseListView):
 
     def has_perm(self, request, obj=None):
         """Check if user has permission to access the related model."""
-        return self.model_admin.has_view_permission(request, obj=obj)
+        return self.model_admin.has_view_permission(request, obj=obj)
\ No newline at end of file
diff --git a/tests/admin_views/test_autocomplete.py b/tests/admin_views/test_autocomplete.py
new file mode 100644
index 0000000000..22bf86d968
--- /dev/null
+++ b/tests/admin_views/test_autocomplete.py
@@ -0,0 +1,45 @@
+from django.contrib.admin.views.autocomplete import AutocompleteJsonView
+from django.contrib.auth.models import Permission, User
+from django.test import RequestFactory, TestCase
+from django.urls import path, reverse
+
+from .models import Parent, Child
+from .admin import ParentAdmin, site
+
+
+class AutocompleteJsonViewTests(TestCase):
+    @classmethod
+    def setUpTestData(cls):
+        cls.superuser = User.objects.create_superuser(
+            username='super', email='super@example.com', password='secret'
+        )
+        cls.user = User.objects.create_user(
+            username='user', email='user@example.com', password='secret'
+        )
+        cls.factory = RequestFactory()
+        cls.parent = Parent.objects.create(name="Test Parent")
+        cls.child = Child.objects.create(name="Test Child", parent=cls.parent)
+
+    def setUp(self):
+        self.client.force_login(self.superuser)
+
+    def test_serialize_result(self):
+        view = AutocompleteJsonView()
+        view.admin_site = site
+        result = view.serialize_result(self.parent, 'id')
+        self.assertEqual(result, {'id': str(self.parent.id), 'text': str(self.parent)})
+
+    def test_custom_serialize_result(self):
+        class CustomAutocompleteJsonView(AutocompleteJsonView):
+            def serialize_result(self, obj, to_field_name):
+                result = super().serialize_result(obj, to_field_name)
+                result['extra'] = 'custom'
+                return result
+
+        view = CustomAutocompleteJsonView()
+        view.admin_site = site
+        result = view.serialize_result(self.parent, 'id')
+        self.assertEqual(
+            result,
+            {'id': str(self.parent.id), 'text': str(self.parent), 'extra': 'custom'}
+        )
