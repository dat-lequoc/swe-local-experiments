{
  "instance_id": "django__django-13768",
  "model_patch": "diff --git a/django/dispatch/dispatcher.py b/django/dispatch/dispatcher.py\nindex b7d9d26389..a7a14c5f42 100644\n--- a/django/dispatch/dispatcher.py\n+++ b/django/dispatch/dispatcher.py\n@@ -1,7 +1,10 @@\n+import logging\n import threading\n import warnings\n import weakref\n \n+logger = logging.getLogger('django.dispatch')\n+\n from django.utils.deprecation import RemovedInDjango40Warning\n from django.utils.inspect import func_accepts_kwargs\n \n@@ -208,6 +211,7 @@ class Signal:\n             try:\n                 response = receiver(signal=self, sender=sender, **named)\n             except Exception as err:\n+                logger.exception(\"Error calling receiver %r for signal %r\", receiver, self)\n                 responses.append((receiver, err))\n             else:\n                 responses.append((receiver, response))\n@@ -291,4 +295,4 @@ def receiver(signal, **kwargs):\n         else:\n             signal.connect(func, **kwargs)\n         return func\n-    return _decorator\n+    return _decorator\n\\ No newline at end of file\ndiff --git a/tests/dispatch/tests.py b/tests/dispatch/tests.py\nindex 9b5482ed58..f199e9c851 100644\n--- a/tests/dispatch/tests.py\n+++ b/tests/dispatch/tests.py\n@@ -1,7 +1,9 @@\n import gc\n import sys\n import weakref\n+import logging\n from types import TracebackType\n+from unittest.mock import patch\n \n from django.dispatch import Signal, receiver\n from django.test import SimpleTestCase\n@@ -174,6 +176,20 @@ class DispatcherTests(SimpleTestCase):\n         a_signal.disconnect(fails)\n         self.assertTestIsClean(a_signal)\n \n+    @patch('django.dispatch.dispatcher.logger')\n+    def test_send_robust_fail_logging(self, mock_logger):\n+        \"\"\"\n+        Test that send_robust logs exceptions from receivers.\n+        \"\"\"\n+        def fails(val, **kwargs):\n+            raise ValueError('this')\n+        a_signal.connect(fails)\n+        a_signal.send_robust(sender=self, val=\"test\")\n+        mock_logger.exception.assert_called_once()\n+        self.assertIn('Error calling receiver', mock_logger.exception.call_args[0][0])\n+        a_signal.disconnect(fails)\n+        self.assertTestIsClean(a_signal)\n+\n     def test_disconnection(self):\n         receiver_1 = Callable()\n         receiver_2 = Callable()\n@@ -229,4 +245,4 @@ class ReceiverTestCase(SimpleTestCase):\n         b_signal.send(sender=self, val='b')\n         self.assertIn('a', self.state)\n         self.assertIn('b', self.state)\n-        self.assertIn('c', self.state)\n+        self.assertIn('c', self.state)\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}