{
  "instance_id": "django__django-13028",
  "test_result": {
    "apply_patch_output": "APPLY_PATCH_PASS\nChecking patch django/db/models/sql/query.py...\nApplied patch django/db/models/sql/query.py cleanly.\n",
    "test_output": "+ source /opt/miniconda3/bin/activate\n++ _CONDA_ROOT=/opt/miniconda3\n++ . /opt/miniconda3/etc/profile.d/conda.sh\n+++ export CONDA_EXE=/opt/miniconda3/bin/conda\n+++ CONDA_EXE=/opt/miniconda3/bin/conda\n+++ export _CE_M=\n+++ _CE_M=\n+++ export _CE_CONDA=\n+++ _CE_CONDA=\n+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python\n+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python\n+++ '[' -z x ']'\n++ conda activate\n++ local cmd=activate\n++ case \"$cmd\" in\n++ __conda_activate activate\n++ '[' -n '' ']'\n++ local ask_conda\n+++ PS1=\n+++ __conda_exe shell.posix activate\n+++ /opt/miniconda3/bin/conda shell.posix activate\n++ ask_conda='PS1='\\''(base) '\\''\nexport PATH='\\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\\''\nexport CONDA_PREFIX='\\''/opt/miniconda3'\\''\nexport CONDA_SHLVL='\\''2'\\''\nexport CONDA_DEFAULT_ENV='\\''base'\\''\nexport CONDA_PROMPT_MODIFIER='\\''(base) '\\''\nexport CONDA_PREFIX_1='\\''/opt/miniconda3/envs/testbed'\\''\nexport CONDA_EXE='\\''/opt/miniconda3/bin/conda'\\''\nexport _CE_M='\\'''\\''\nexport _CE_CONDA='\\'''\\''\nexport CONDA_PYTHON_EXE='\\''/opt/miniconda3/bin/python'\\'''\n++ eval 'PS1='\\''(base) '\\''\nexport PATH='\\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\\''\nexport CONDA_PREFIX='\\''/opt/miniconda3'\\''\nexport CONDA_SHLVL='\\''2'\\''\nexport CONDA_DEFAULT_ENV='\\''base'\\''\nexport CONDA_PROMPT_MODIFIER='\\''(base) '\\''\nexport CONDA_PREFIX_1='\\''/opt/miniconda3/envs/testbed'\\''\nexport CONDA_EXE='\\''/opt/miniconda3/bin/conda'\\''\nexport _CE_M='\\'''\\''\nexport _CE_CONDA='\\'''\\''\nexport CONDA_PYTHON_EXE='\\''/opt/miniconda3/bin/python'\\'''\n+++ PS1='(base) '\n+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n+++ export CONDA_PREFIX=/opt/miniconda3\n+++ CONDA_PREFIX=/opt/miniconda3\n+++ export CONDA_SHLVL=2\n+++ CONDA_SHLVL=2\n+++ export CONDA_DEFAULT_ENV=base\n+++ CONDA_DEFAULT_ENV=base\n+++ export 'CONDA_PROMPT_MODIFIER=(base) '\n+++ CONDA_PROMPT_MODIFIER='(base) '\n+++ export CONDA_PREFIX_1=/opt/miniconda3/envs/testbed\n+++ CONDA_PREFIX_1=/opt/miniconda3/envs/testbed\n+++ export CONDA_EXE=/opt/miniconda3/bin/conda\n+++ CONDA_EXE=/opt/miniconda3/bin/conda\n+++ export _CE_M=\n+++ _CE_M=\n+++ export _CE_CONDA=\n+++ _CE_CONDA=\n+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python\n+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python\n++ __conda_hashr\n++ '[' -n '' ']'\n++ '[' -n '' ']'\n++ hash -r\n+ conda activate testbed\n+ local cmd=activate\n+ case \"$cmd\" in\n+ __conda_activate activate testbed\n+ '[' -n '' ']'\n+ local ask_conda\n++ PS1='(base) '\n++ __conda_exe shell.posix activate testbed\n++ /opt/miniconda3/bin/conda shell.posix activate testbed\n+ ask_conda='PS1='\\''(testbed) '\\''\nexport PATH='\\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\\''\nexport CONDA_PREFIX='\\''/opt/miniconda3/envs/testbed'\\''\nexport CONDA_SHLVL='\\''3'\\''\nexport CONDA_DEFAULT_ENV='\\''testbed'\\''\nexport CONDA_PROMPT_MODIFIER='\\''(testbed) '\\''\nexport CONDA_PREFIX_2='\\''/opt/miniconda3'\\''\nexport CONDA_EXE='\\''/opt/miniconda3/bin/conda'\\''\nexport _CE_M='\\'''\\''\nexport _CE_CONDA='\\'''\\''\nexport CONDA_PYTHON_EXE='\\''/opt/miniconda3/bin/python'\\'''\n+ eval 'PS1='\\''(testbed) '\\''\nexport PATH='\\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\\''\nexport CONDA_PREFIX='\\''/opt/miniconda3/envs/testbed'\\''\nexport CONDA_SHLVL='\\''3'\\''\nexport CONDA_DEFAULT_ENV='\\''testbed'\\''\nexport CONDA_PROMPT_MODIFIER='\\''(testbed) '\\''\nexport CONDA_PREFIX_2='\\''/opt/miniconda3'\\''\nexport CONDA_EXE='\\''/opt/miniconda3/bin/conda'\\''\nexport _CE_M='\\'''\\''\nexport _CE_CONDA='\\'''\\''\nexport CONDA_PYTHON_EXE='\\''/opt/miniconda3/bin/python'\\'''\n++ PS1='(testbed) '\n++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed\n++ CONDA_PREFIX=/opt/miniconda3/envs/testbed\n++ export CONDA_SHLVL=3\n++ CONDA_SHLVL=3\n++ export CONDA_DEFAULT_ENV=testbed\n++ CONDA_DEFAULT_ENV=testbed\n++ export 'CONDA_PROMPT_MODIFIER=(testbed) '\n++ CONDA_PROMPT_MODIFIER='(testbed) '\n++ export CONDA_PREFIX_2=/opt/miniconda3\n++ CONDA_PREFIX_2=/opt/miniconda3\n++ export CONDA_EXE=/opt/miniconda3/bin/conda\n++ CONDA_EXE=/opt/miniconda3/bin/conda\n++ export _CE_M=\n++ _CE_M=\n++ export _CE_CONDA=\n++ _CE_CONDA=\n++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python\n++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python\n+ __conda_hashr\n+ '[' -n '' ']'\n+ '[' -n '' ']'\n+ hash -r\n+ cd /testbed\n+ sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen\n+ locale-gen\n+ export LANG=en_US.UTF-8\n+ LANG=en_US.UTF-8\n+ export LANGUAGE=en_US:en\n+ LANGUAGE=en_US:en\n+ export LC_ALL=en_US.UTF-8\n+ LC_ALL=en_US.UTF-8\n+ git config --global --add safe.directory /testbed\n+ cd /testbed\n+ git status\n+ git show\n+ git diff 78ad4b4b0201003792bfdbf1a7781cbc9ee03539\n+ source /opt/miniconda3/bin/activate\n++ _CONDA_ROOT=/opt/miniconda3\n++ . /opt/miniconda3/etc/profile.d/conda.sh\n+++ export CONDA_EXE=/opt/miniconda3/bin/conda\n+++ CONDA_EXE=/opt/miniconda3/bin/conda\n+++ export _CE_M=\n+++ _CE_M=\n+++ export _CE_CONDA=\n+++ _CE_CONDA=\n+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python\n+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python\n+++ '[' -z x ']'\n++ conda activate\n++ local cmd=activate\n++ case \"$cmd\" in\n++ __conda_activate activate\n++ '[' -n '' ']'\n++ local ask_conda\n+++ PS1='(testbed) '\n+++ __conda_exe shell.posix activate\n+++ /opt/miniconda3/bin/conda shell.posix activate\n++ ask_conda='PS1='\\''(base) '\\''\nexport PATH='\\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\\''\nexport CONDA_PREFIX='\\''/opt/miniconda3'\\''\nexport CONDA_SHLVL='\\''4'\\''\nexport CONDA_DEFAULT_ENV='\\''base'\\''\nexport CONDA_PROMPT_MODIFIER='\\''(base) '\\''\nexport CONDA_PREFIX_3='\\''/opt/miniconda3/envs/testbed'\\''\nexport CONDA_EXE='\\''/opt/miniconda3/bin/conda'\\''\nexport _CE_M='\\'''\\''\nexport _CE_CONDA='\\'''\\''\nexport CONDA_PYTHON_EXE='\\''/opt/miniconda3/bin/python'\\'''\n++ eval 'PS1='\\''(base) '\\''\nexport PATH='\\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\\''\nexport CONDA_PREFIX='\\''/opt/miniconda3'\\''\nexport CONDA_SHLVL='\\''4'\\''\nexport CONDA_DEFAULT_ENV='\\''base'\\''\nexport CONDA_PROMPT_MODIFIER='\\''(base) '\\''\nexport CONDA_PREFIX_3='\\''/opt/miniconda3/envs/testbed'\\''\nexport CONDA_EXE='\\''/opt/miniconda3/bin/conda'\\''\nexport _CE_M='\\'''\\''\nexport _CE_CONDA='\\'''\\''\nexport CONDA_PYTHON_EXE='\\''/opt/miniconda3/bin/python'\\'''\n+++ PS1='(base) '\n+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n+++ export CONDA_PREFIX=/opt/miniconda3\n+++ CONDA_PREFIX=/opt/miniconda3\n+++ export CONDA_SHLVL=4\n+++ CONDA_SHLVL=4\n+++ export CONDA_DEFAULT_ENV=base\n+++ CONDA_DEFAULT_ENV=base\n+++ export 'CONDA_PROMPT_MODIFIER=(base) '\n+++ CONDA_PROMPT_MODIFIER='(base) '\n+++ export CONDA_PREFIX_3=/opt/miniconda3/envs/testbed\n+++ CONDA_PREFIX_3=/opt/miniconda3/envs/testbed\n+++ export CONDA_EXE=/opt/miniconda3/bin/conda\n+++ CONDA_EXE=/opt/miniconda3/bin/conda\n+++ export _CE_M=\n+++ _CE_M=\n+++ export _CE_CONDA=\n+++ _CE_CONDA=\n+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python\n+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python\n++ __conda_hashr\n++ '[' -n '' ']'\n++ '[' -n '' ']'\n++ hash -r\n+ conda activate testbed\n+ local cmd=activate\n+ case \"$cmd\" in\n+ __conda_activate activate testbed\n+ '[' -n '' ']'\n+ local ask_conda\n++ PS1='(base) '\n++ __conda_exe shell.posix activate testbed\n++ /opt/miniconda3/bin/conda shell.posix activate testbed\n+ ask_conda='PS1='\\''(testbed) '\\''\nexport PATH='\\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\\''\nexport CONDA_PREFIX='\\''/opt/miniconda3/envs/testbed'\\''\nexport CONDA_SHLVL='\\''5'\\''\nexport CONDA_DEFAULT_ENV='\\''testbed'\\''\nexport CONDA_PROMPT_MODIFIER='\\''(testbed) '\\''\nexport CONDA_PREFIX_4='\\''/opt/miniconda3'\\''\nexport CONDA_EXE='\\''/opt/miniconda3/bin/conda'\\''\nexport _CE_M='\\'''\\''\nexport _CE_CONDA='\\'''\\''\nexport CONDA_PYTHON_EXE='\\''/opt/miniconda3/bin/python'\\'''\n+ eval 'PS1='\\''(testbed) '\\''\nexport PATH='\\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\\''\nexport CONDA_PREFIX='\\''/opt/miniconda3/envs/testbed'\\''\nexport CONDA_SHLVL='\\''5'\\''\nexport CONDA_DEFAULT_ENV='\\''testbed'\\''\nexport CONDA_PROMPT_MODIFIER='\\''(testbed) '\\''\nexport CONDA_PREFIX_4='\\''/opt/miniconda3'\\''\nexport CONDA_EXE='\\''/opt/miniconda3/bin/conda'\\''\nexport _CE_M='\\'''\\''\nexport _CE_CONDA='\\'''\\''\nexport CONDA_PYTHON_EXE='\\''/opt/miniconda3/bin/python'\\'''\n++ PS1='(testbed) '\n++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed\n++ CONDA_PREFIX=/opt/miniconda3/envs/testbed\n++ export CONDA_SHLVL=5\n++ CONDA_SHLVL=5\n++ export CONDA_DEFAULT_ENV=testbed\n++ CONDA_DEFAULT_ENV=testbed\n++ export 'CONDA_PROMPT_MODIFIER=(testbed) '\n++ CONDA_PROMPT_MODIFIER='(testbed) '\n++ export CONDA_PREFIX_4=/opt/miniconda3\n++ CONDA_PREFIX_4=/opt/miniconda3\n++ export CONDA_EXE=/opt/miniconda3/bin/conda\n++ CONDA_EXE=/opt/miniconda3/bin/conda\n++ export _CE_M=\n++ _CE_M=\n++ export _CE_CONDA=\n++ _CE_CONDA=\n++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python\n++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python\n+ __conda_hashr\n+ '[' -n '' ']'\n+ '[' -n '' ']'\n+ hash -r\n+ python -m pip install -e .\nWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\n+ git checkout 78ad4b4b0201003792bfdbf1a7781cbc9ee03539 tests/queries/models.py tests/queries/tests.py\nUpdated 0 paths from 14c53f8fb3\n+ git apply -v -\nChecking patch tests/queries/models.py...\nChecking patch tests/queries/tests.py...\nApplied patch tests/queries/models.py cleanly.\nApplied patch tests/queries/tests.py cleanly.\n+ ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 queries.models queries.tests\nCreating test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...\ntest_evaluated_queryset_as_argument (queries.tests.CloneTests)\n#13227 -- If a queryset is already evaluated, it can still be used as a query arg ... ok\ntest_no_fields_cloning (queries.tests.CloneTests) ... ok\ntest_no_model_options_cloning (queries.tests.CloneTests) ... ok\ntest_ticket8597 (queries.tests.ComparisonTests) ... ok\ntest_in_list_limit (queries.tests.ConditionalTests) ... ok\ntest_infinite_loop (queries.tests.ConditionalTests) ... ok\ntest_null_ordering_added (queries.tests.ConditionalTests) ... skipped \"Database doesn't support feature(s): requires_explicit_null_ordering_when_grouping\"\ntest_ticket7371 (queries.tests.CustomPkTests) ... ok\ntest_no_extra_params (queries.tests.DefaultValuesInsertTest) ... ok\ntest_disjunction_promotion1 (queries.tests.DisjunctionPromotionTests) ... ok\ntest_disjunction_promotion2 (queries.tests.DisjunctionPromotionTests) ... ok\ntest_disjunction_promotion3 (queries.tests.DisjunctionPromotionTests) ... ok\ntest_disjunction_promotion3_demote (queries.tests.DisjunctionPromotionTests) ... ok\ntest_disjunction_promotion4 (queries.tests.DisjunctionPromotionTests) ... ok\ntest_disjunction_promotion4_demote (queries.tests.DisjunctionPromotionTests) ... ok\ntest_disjunction_promotion5_demote (queries.tests.DisjunctionPromotionTests) ... ok\ntest_disjunction_promotion6 (queries.tests.DisjunctionPromotionTests) ... ok\ntest_disjunction_promotion7 (queries.tests.DisjunctionPromotionTests) ... ok\ntest_disjunction_promotion_fexpression (queries.tests.DisjunctionPromotionTests) ... ok\ntest_disjunction_promotion_select_related (queries.tests.DisjunctionPromotionTests) ... ok\ntest_ticket7872 (queries.tests.DisjunctiveFilterTests) ... ok\ntest_ticket8283 (queries.tests.DisjunctiveFilterTests) ... ok\ntest_double_subquery_in (queries.tests.DoubleInSubqueryTests) ... ok\ntest_21001 (queries.tests.EmptyStringsAsNullTest) ... ok\ntest_direct_exclude (queries.tests.EmptyStringsAsNullTest) ... ok\ntest_joined_exclude (queries.tests.EmptyStringsAsNullTest) ... ok\ntest_ticket_7302 (queries.tests.EscapingTests) ... ok\ntest_ticket15786 (queries.tests.Exclude15786) ... ok\ntest_exclude_plain (queries.tests.ExcludeTest17600) ... ok\ntest_exclude_plain_distinct (queries.tests.ExcludeTest17600) ... ok\ntest_exclude_with_q_is_equal_to_plain_exclude (queries.tests.ExcludeTest17600) ... ok\ntest_exclude_with_q_is_equal_to_plain_exclude_variation (queries.tests.ExcludeTest17600) ... ok\ntest_exclude_with_q_object_distinct (queries.tests.ExcludeTest17600) ... ok\ntest_exclude_with_q_object_no_distinct (queries.tests.ExcludeTest17600) ... ok\ntest_only_orders_with_all_items_having_status_1 (queries.tests.ExcludeTest17600) ... expected failure\ntest_exclude_reverse_fk_field_ref (queries.tests.ExcludeTests) ... ok\ntest_exclude_with_circular_fk_relation (queries.tests.ExcludeTests) ... ok\ntest_subquery_exclude_outerref (queries.tests.ExcludeTests) ... ok\ntest_ticket14511 (queries.tests.ExcludeTests) ... ok\ntest_to_field (queries.tests.ExcludeTests) ... ok\ntest_exists (queries.tests.ExistsSql) ... ok\ntest_ticket_18414 (queries.tests.ExistsSql) ... ok\ntest_ticket_18414_distinct_on (queries.tests.ExistsSql) ... skipped \"Database doesn't support feature(s): can_distinct_on_fields\"\ntest_ticket_21787 (queries.tests.ForeignKeyToBaseExcludeTests) ... ok\ntest_primary_key (queries.tests.IsNullTests) ... ok\ntest_to_field (queries.tests.IsNullTests) ... ok\ntest_fk_reuse (queries.tests.JoinReuseTest) ... ok\ntest_fk_reuse_annotation (queries.tests.JoinReuseTest) ... ok\ntest_fk_reuse_disjunction (queries.tests.JoinReuseTest) ... ok\ntest_fk_reuse_order_by (queries.tests.JoinReuseTest) ... ok\ntest_fk_reuse_select_related (queries.tests.JoinReuseTest) ... ok\ntest_inverted_q_across_relations (queries.tests.JoinReuseTest) ... ok\ntest_revfk_noreuse (queries.tests.JoinReuseTest) ... ok\ntest_revo2o_reuse (queries.tests.JoinReuseTest) ... ok\ntest_exclude_many_to_many (queries.tests.ManyToManyExcludeTest) ... ok\ntest_ticket_12823 (queries.tests.ManyToManyExcludeTest) ... ok\ntest_col_not_in_list_containing_null (queries.tests.NullInExcludeTest) ... expected failure\ntest_double_exclude (queries.tests.NullInExcludeTest) ... ok\ntest_null_in_exclude_qs (queries.tests.NullInExcludeTest) ... ok\ntest_isnull_filter_promotion (queries.tests.NullJoinPromotionOrTest) ... ok\ntest_null_join_demotion (queries.tests.NullJoinPromotionOrTest) ... ok\ntest_ticket_17886 (queries.tests.NullJoinPromotionOrTest) ... ok\ntest_ticket_21366 (queries.tests.NullJoinPromotionOrTest) ... ok\ntest_ticket_21748 (queries.tests.NullJoinPromotionOrTest) ... ok\ntest_ticket_21748_complex_filter (queries.tests.NullJoinPromotionOrTest) ... ok\ntest_ticket_21748_double_negated_and (queries.tests.NullJoinPromotionOrTest) ... ok\ntest_ticket_21748_double_negated_or (queries.tests.NullJoinPromotionOrTest) ... ok\ntest_join_already_in_query (queries.tests.NullableRelOrderingTests) ... ok\ntest_ticket10028 (queries.tests.NullableRelOrderingTests) ... ok\ntest_evaluated_proxy_count (queries.tests.ProxyQueryCleanupTest) ... ok\ntest_avoid_infinite_loop_on_too_many_subqueries (queries.tests.Queries1Tests) ... ok\ntest_common_mixed_case_foreign_keys (queries.tests.Queries1Tests) ... ok\ntest_deferred_load_qs_pickling (queries.tests.Queries1Tests) ... ok\ntest_double_exclude (queries.tests.Queries1Tests) ... ok\ntest_error_raised_on_filter_with_dictionary (queries.tests.Queries1Tests) ... ok\ntest_exclude (queries.tests.Queries1Tests) ... ok\ntest_exclude_in (queries.tests.Queries1Tests) ... ok\ntest_excluded_intermediary_m2m_table_joined (queries.tests.Queries1Tests) ... ok\ntest_field_with_filterable (queries.tests.Queries1Tests) ... ok\ntest_get_clears_ordering (queries.tests.Queries1Tests) ... ok\ntest_heterogeneous_qs_combination (queries.tests.Queries1Tests) ... ok\ntest_lookup_constraint_fielderror (queries.tests.Queries1Tests) ... ok\ntest_nested_exclude (queries.tests.Queries1Tests) ... ok\ntest_order_by_join_unref (queries.tests.Queries1Tests) ... ok\ntest_order_by_raw_column_alias_warning (queries.tests.Queries1Tests) ... ok\ntest_order_by_rawsql (queries.tests.Queries1Tests) ... ok\ntest_order_by_tables (queries.tests.Queries1Tests) ... ok\ntest_reasonable_number_of_subq_aliases (queries.tests.Queries1Tests) ... ok\ntest_subquery_condition (queries.tests.Queries1Tests) ... ok\ntest_ticket10205 (queries.tests.Queries1Tests) ... ok\ntest_ticket10432 (queries.tests.Queries1Tests) ... ok\ntest_ticket1050 (queries.tests.Queries1Tests) ... ok\ntest_ticket10742 (queries.tests.Queries1Tests) ... ok\ntest_ticket17429 (queries.tests.Queries1Tests) ... ok\ntest_ticket1801 (queries.tests.Queries1Tests) ... ok\ntest_ticket19672 (queries.tests.Queries1Tests) ... ok\ntest_ticket2091 (queries.tests.Queries1Tests) ... ok\ntest_ticket2253 (queries.tests.Queries1Tests) ... ok\ntest_ticket2306 (queries.tests.Queries1Tests) ... ok\ntest_ticket2400 (queries.tests.Queries1Tests) ... ok\ntest_ticket2496 (queries.tests.Queries1Tests) ... ok\ntest_ticket3037 (queries.tests.Queries1Tests) ... ok\ntest_ticket3141 (queries.tests.Queries1Tests) ... ok\ntest_ticket4358 (queries.tests.Queries1Tests) ... ok\ntest_ticket4464 (queries.tests.Queries1Tests) ... ok\ntest_ticket4510 (queries.tests.Queries1Tests) ... ok\ntest_ticket6074 (queries.tests.Queries1Tests) ... ok\ntest_ticket6154 (queries.tests.Queries1Tests) ... ok\ntest_ticket6981 (queries.tests.Queries1Tests) ... ok\ntest_ticket7076 (queries.tests.Queries1Tests) ... ok\ntest_ticket7096 (queries.tests.Queries1Tests) ... ok\ntest_ticket7098 (queries.tests.Queries1Tests) ... ok\ntest_ticket7155 (queries.tests.Queries1Tests) ... ok\ntest_ticket7181 (queries.tests.Queries1Tests) ... ok\ntest_ticket7235 (queries.tests.Queries1Tests) ... ok\ntest_ticket7277 (queries.tests.Queries1Tests) ... ok\ntest_ticket7323 (queries.tests.Queries1Tests) ... ok\ntest_ticket7378 (queries.tests.Queries1Tests) ... ok\ntest_ticket7791 (queries.tests.Queries1Tests) ... ok\ntest_ticket7813 (queries.tests.Queries1Tests) ... ok\ntest_ticket8439 (queries.tests.Queries1Tests) ... ok\ntest_ticket9411 (queries.tests.Queries1Tests) ... ok\ntest_ticket9926 (queries.tests.Queries1Tests) ... ok\ntest_ticket9985 (queries.tests.Queries1Tests) ... ok\ntest_ticket9997 (queries.tests.Queries1Tests) ... ok\ntest_ticket_10790_1 (queries.tests.Queries1Tests) ... ok\ntest_ticket_10790_2 (queries.tests.Queries1Tests) ... ok\ntest_ticket_10790_3 (queries.tests.Queries1Tests) ... ok\ntest_ticket_10790_4 (queries.tests.Queries1Tests) ... ok\ntest_ticket_10790_5 (queries.tests.Queries1Tests) ... ok\ntest_ticket_10790_6 (queries.tests.Queries1Tests) ... ok\ntest_ticket_10790_7 (queries.tests.Queries1Tests) ... ok\ntest_ticket_10790_8 (queries.tests.Queries1Tests) ... ok\ntest_ticket_10790_combine (queries.tests.Queries1Tests) ... ok\ntest_ticket_20250 (queries.tests.Queries1Tests) ... ok\ntest_tickets_1878_2939 (queries.tests.Queries1Tests) ... ok\ntest_tickets_2076_7256 (queries.tests.Queries1Tests) ... ok\ntest_tickets_2080_3592 (queries.tests.Queries1Tests) ... ok\ntest_tickets_2874_3002 (queries.tests.Queries1Tests) ... ok\ntest_tickets_4088_4306 (queries.tests.Queries1Tests) ... ok\ntest_tickets_5321_7070 (queries.tests.Queries1Tests) ... ok\ntest_tickets_5324_6704 (queries.tests.Queries1Tests) ... ok\ntest_tickets_6180_6203 (queries.tests.Queries1Tests) ... ok\ntest_tickets_7087_12242 (queries.tests.Queries1Tests) ... ok\ntest_tickets_7204_7506 (queries.tests.Queries1Tests) ... ok\ntest_tickets_7448_7707 (queries.tests.Queries1Tests) ... ok\ntest_ticket12239 (queries.tests.Queries2Tests) ... ok\ntest_ticket4289 (queries.tests.Queries2Tests) ... ok\ntest_ticket7759 (queries.tests.Queries2Tests) ... ok\ntest_ticket22023 (queries.tests.Queries3Tests) ... ok\ntest_ticket7107 (queries.tests.Queries3Tests) ... ok\ntest_ticket8683 (queries.tests.Queries3Tests) ... ok\ntest_combine_join_reuse (queries.tests.Queries4Tests) ... ok\ntest_filter_reverse_non_integer_pk (queries.tests.Queries4Tests) ... ok\ntest_join_reuse_order (queries.tests.Queries4Tests) ... ok\ntest_order_by_resetting (queries.tests.Queries4Tests) ... ok\ntest_order_by_reverse_fk (queries.tests.Queries4Tests) ... ok\ntest_ticket10181 (queries.tests.Queries4Tests) ... ok\ntest_ticket11811 (queries.tests.Queries4Tests) ... ok\ntest_ticket14876 (queries.tests.Queries4Tests) ... ok\ntest_ticket15316_exclude_false (queries.tests.Queries4Tests) ... ok\ntest_ticket15316_exclude_true (queries.tests.Queries4Tests) ... ok\ntest_ticket15316_filter_false (queries.tests.Queries4Tests) ... ok\ntest_ticket15316_filter_true (queries.tests.Queries4Tests) ... ok\ntest_ticket15316_one2one_exclude_false (queries.tests.Queries4Tests) ... ok\ntest_ticket15316_one2one_exclude_true (queries.tests.Queries4Tests) ... ok\ntest_ticket15316_one2one_filter_false (queries.tests.Queries4Tests) ... ok\ntest_ticket15316_one2one_filter_true (queries.tests.Queries4Tests) ... ok\ntest_ticket24525 (queries.tests.Queries4Tests) ... ok\ntest_ticket7095 (queries.tests.Queries4Tests) ... ok\ntest_extra_select_literal_percent_s (queries.tests.Queries5Tests) ... ok\ntest_ordering (queries.tests.Queries5Tests) ... ok\ntest_ticket5261 (queries.tests.Queries5Tests) ... ok\ntest_ticket7045 (queries.tests.Queries5Tests) ... ok\ntest_ticket7256 (queries.tests.Queries5Tests) ... ok\ntest_ticket9848 (queries.tests.Queries5Tests) ... ok\ntest_distinct_ordered_sliced_subquery_aggregation (queries.tests.Queries6Tests) ... ok\ntest_multiple_columns_with_the_same_name_slice (queries.tests.Queries6Tests) ... ok\ntest_nested_queries_sql (queries.tests.Queries6Tests) ... ok\ntest_parallel_iterators (queries.tests.Queries6Tests) ... ok\ntest_ticket3739 (queries.tests.Queries6Tests) ... ok\ntest_ticket_11320 (queries.tests.Queries6Tests) ... ok\ntest_tickets_8921_9188 (queries.tests.Queries6Tests) ... ok\ntest_or_with_both_slice (queries.tests.QuerySetBitwiseOperationTests) ... ok\ntest_or_with_both_slice_and_ordering (queries.tests.QuerySetBitwiseOperationTests) ... ok\ntest_or_with_lhs_slice (queries.tests.QuerySetBitwiseOperationTests) ... ok\ntest_or_with_rhs_slice (queries.tests.QuerySetBitwiseOperationTests) ... ok\ntest_can_combine_queries_using_and_and_or_operators (queries.tests.QuerySetSupportsPythonIdioms) ... ok\ntest_can_get_items_using_index_and_slice_notation (queries.tests.QuerySetSupportsPythonIdioms) ... ok\ntest_can_get_number_of_items_in_queryset_using_standard_len (queries.tests.QuerySetSupportsPythonIdioms) ... ok\ntest_invalid_index (queries.tests.QuerySetSupportsPythonIdioms) ... ok\ntest_slicing_can_slice_again_after_slicing (queries.tests.QuerySetSupportsPythonIdioms) ... ok\ntest_slicing_cannot_combine_queries_once_sliced (queries.tests.QuerySetSupportsPythonIdioms) ... ok\ntest_slicing_cannot_filter_queryset_once_sliced (queries.tests.QuerySetSupportsPythonIdioms) ... ok\ntest_slicing_cannot_reorder_queryset_once_sliced (queries.tests.QuerySetSupportsPythonIdioms) ... ok\ntest_slicing_negative_indexing_not_supported_for_range (queries.tests.QuerySetSupportsPythonIdioms)\nhint: inverting your ordering might do what you need ... ok\ntest_slicing_negative_indexing_not_supported_for_single_element (queries.tests.QuerySetSupportsPythonIdioms)\nhint: inverting your ordering might do what you need ... ok\ntest_slicing_with_steps_can_be_used (queries.tests.QuerySetSupportsPythonIdioms) ... ok\ntest_slicing_with_tests_is_not_lazy (queries.tests.QuerySetSupportsPythonIdioms) ... ok\ntest_slicing_without_step_is_lazy (queries.tests.QuerySetSupportsPythonIdioms) ... ok\ntest_ticket14729 (queries.tests.RawQueriesTests) ... ok\ntest_ticket_19964 (queries.tests.RelabelCloneTest) ... ok\ntest_correct_lookup (queries.tests.RelatedLookupTypeTests) ... ok\ntest_values_queryset_lookup (queries.tests.RelatedLookupTypeTests) ... ok\ntest_wrong_backward_lookup (queries.tests.RelatedLookupTypeTests) ... ok\ntest_wrong_type_lookup (queries.tests.RelatedLookupTypeTests) ... ok\ntest_reverse_trimming (queries.tests.ReverseJoinTrimmingTest) ... ok\ntest_ticket_21879 (queries.tests.ReverseM2MCustomPkTests) ... ok\ntest_tickets_3045_3288 (queries.tests.SelectRelatedTests) ... ok\ntest_ticket7778 (queries.tests.SubclassFKTests) ... ok\ntest_distinct_ordered_sliced_subquery (queries.tests.SubqueryTests) ... ok\ntest_ordered_subselect (queries.tests.SubqueryTests)\nSubselects honor any manual ordering ... ok\ntest_related_sliced_subquery (queries.tests.SubqueryTests) ... ok\ntest_slice_subquery_and_query (queries.tests.SubqueryTests) ... ok\ntest_sliced_delete (queries.tests.SubqueryTests)\nDelete queries can safely contain sliced subqueries ... ok\ntest_ticket_24278 (queries.tests.TestTicket24279) ... ok\ntest_ticket_24605 (queries.tests.TestTicket24605) ... ok\ntest_ticket_12807 (queries.tests.Ticket12807Tests) ... ok\ntest_ticket_14056 (queries.tests.Ticket14056Tests) ... ok\ntest_ticket_20101 (queries.tests.Ticket20101Tests) ... ok\ntest_ticket_20788 (queries.tests.Ticket20788Tests) ... ok\ntest_ticket_20955 (queries.tests.Ticket20955Tests) ... ok\ntest_ticket_21203 (queries.tests.Ticket21203Tests) ... ok\ntest_ticket_22429 (queries.tests.Ticket22429Tests) ... ok\ntest_ticket_23605 (queries.tests.Ticket23605Tests) ... ok\ntest_ticket_23622 (queries.tests.Ticket23622Tests) ... skipped \"Database doesn't support feature(s): can_distinct_on_fields\"\ntest_in_query (queries.tests.ToFieldTests) ... ok\ntest_in_subquery (queries.tests.ToFieldTests) ... ok\ntest_nested_in_subquery (queries.tests.ToFieldTests) ... ok\ntest_recursive_fk (queries.tests.ToFieldTests) ... ok\ntest_recursive_fk_reverse (queries.tests.ToFieldTests) ... ok\ntest_reverse_in (queries.tests.ToFieldTests) ... ok\ntest_single_object (queries.tests.ToFieldTests) ... ok\ntest_single_object_reverse (queries.tests.ToFieldTests) ... ok\ntest_non_nullable_fk_not_promoted (queries.tests.ValuesJoinPromotionTests) ... ok\ntest_ticket_21376 (queries.tests.ValuesJoinPromotionTests) ... ok\ntest_values_no_promotion_for_existing (queries.tests.ValuesJoinPromotionTests) ... ok\ntest_extra_multiple_select_params_values_order_by (queries.tests.ValuesQuerysetTests) ... ok\ntest_extra_select_params_values_order_in_extra (queries.tests.ValuesQuerysetTests) ... ok\ntest_extra_values (queries.tests.ValuesQuerysetTests) ... ok\ntest_extra_values_list (queries.tests.ValuesQuerysetTests) ... ok\ntest_extra_values_order_in_extra (queries.tests.ValuesQuerysetTests) ... ok\ntest_extra_values_order_multiple (queries.tests.ValuesQuerysetTests) ... ok\ntest_extra_values_order_twice (queries.tests.ValuesQuerysetTests) ... ok\ntest_field_error_values_list (queries.tests.ValuesQuerysetTests) ... ok\ntest_flat_extra_values_list (queries.tests.ValuesQuerysetTests) ... ok\ntest_flat_values_list (queries.tests.ValuesQuerysetTests) ... ok\ntest_named_values_list_bad_field_name (queries.tests.ValuesQuerysetTests) ... ok\ntest_named_values_list_expression (queries.tests.ValuesQuerysetTests) ... ok\ntest_named_values_list_expression_with_default_alias (queries.tests.ValuesQuerysetTests) ... ok\ntest_named_values_list_flat (queries.tests.ValuesQuerysetTests) ... ok\ntest_named_values_list_with_fields (queries.tests.ValuesQuerysetTests) ... ok\ntest_named_values_list_without_fields (queries.tests.ValuesQuerysetTests) ... ok\ntest_values_in_subquery (queries.tests.ValuesSubqueryTests) ... ok\ntest_empty_resultset_sql (queries.tests.WeirdQuerysetSlicingTests) ... ok\ntest_empty_sliced_subquery (queries.tests.WeirdQuerysetSlicingTests) ... ok\ntest_empty_sliced_subquery_exclude (queries.tests.WeirdQuerysetSlicingTests) ... ok\ntest_tickets_7698_10202 (queries.tests.WeirdQuerysetSlicingTests) ... ok\ntest_zero_length_values_slicing (queries.tests.WeirdQuerysetSlicingTests) ... ok\ntest_emptyqueryset_values (queries.tests.EmptyQuerySetTests) ... ok\ntest_ticket_19151 (queries.tests.EmptyQuerySetTests) ... ok\ntest_values_subquery (queries.tests.EmptyQuerySetTests) ... ok\ntest_empty_string_promotion (queries.tests.EmptyStringPromotionTests) ... ok\ntest_ticket10432 (queries.tests.GeneratorExpressionTests) ... ok\ntest_invalid_order_by (queries.tests.QuerySetExceptionTests) ... ok\ntest_invalid_queryset_model (queries.tests.QuerySetExceptionTests) ... ok\ntest_iter_exceptions (queries.tests.QuerySetExceptionTests) ... ok\ntest_invalid_values (queries.tests.TestInvalidValuesRelation) ... ok\ntest_ticket_18785 (queries.tests.Ticket18785Tests) ... ok\ntest_empty_full_handling_conjunction (queries.tests.WhereNodeTest) ... ok\ntest_empty_full_handling_disjunction (queries.tests.WhereNodeTest) ... ok\ntest_empty_nodes (queries.tests.WhereNodeTest) ... ok\ntest_annotated_ordering (queries.tests.QuerysetOrderedTests) ... ok\ntest_cleared_default_ordering (queries.tests.QuerysetOrderedTests) ... ok\ntest_empty_queryset (queries.tests.QuerysetOrderedTests) ... ok\ntest_explicit_ordering (queries.tests.QuerysetOrderedTests) ... ok\ntest_no_default_or_explicit_ordering (queries.tests.QuerysetOrderedTests) ... ok\ntest_order_by_extra (queries.tests.QuerysetOrderedTests) ... ok\ntest_AB_ACB (queries.tests.UnionTests) ... ok\ntest_A_AB (queries.tests.UnionTests) ... ok\ntest_A_AB2 (queries.tests.UnionTests) ... ok\ntest_BAB_BAC (queries.tests.UnionTests) ... ok\ntest_BAB_BACB (queries.tests.UnionTests) ... ok\ntest_BA_BCA__BAB_BAC_BCA (queries.tests.UnionTests) ... ok\n\n----------------------------------------------------------------------\nRan 284 tests in 1.236s\n\nOK (skipped=3, expected failures=2)\nDestroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...\n+ git checkout 78ad4b4b0201003792bfdbf1a7781cbc9ee03539 tests/queries/models.py tests/queries/tests.py\nUpdated 2 paths from 14c53f8fb3\nGenerating locales (this might take a while)...\n  en_US.UTF-8... done\nGeneration complete.\nOn branch main\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git restore <file>...\" to discard changes in working directory)\n\tmodified:   django/db/models/sql/query.py\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\ncommit 78ad4b4b0201003792bfdbf1a7781cbc9ee03539\nAuthor: Mariusz Felisiak <felisiak.mariusz@gmail.com>\nDate:   Mon Jun 8 07:21:54 2020 +0200\n\n    Fixed #31660 -- Fixed queryset crash when grouping by m2o relation.\n    \n    Regression in 3a941230c85b2702a5e1cd97e17251ce21057efa.\n    \n    Thanks Tomasz Szyma\u0144ski for the report.\n\ndiff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 6bd1471692..76f8fded41 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -383,7 +383,9 @@ class BaseExpression:\n         Custom format for select clauses. For example, EXISTS expressions need\n         to be wrapped in CASE WHEN on Oracle.\n         \"\"\"\n-        return self.output_field.select_format(compiler, sql, params)\n+        if hasattr(self.output_field, 'select_format'):\n+            return self.output_field.select_format(compiler, sql, params)\n+        return sql, params\n \n     @cached_property\n     def identity(self):\ndiff --git a/docs/releases/3.0.8.txt b/docs/releases/3.0.8.txt\nindex e355f0a0ff..d21eac37c8 100644\n--- a/docs/releases/3.0.8.txt\n+++ b/docs/releases/3.0.8.txt\n@@ -11,3 +11,6 @@ Bugfixes\n \n * Fixed messages of ``InvalidCacheKey`` exceptions and ``CacheKeyWarning``\n   warnings raised by cache key validation (:ticket:`31654`).\n+\n+* Fixed a regression in Django 3.0.7 that caused a queryset crash when grouping\n+  by a many-to-one relationship (:ticket:`31660`).\ndiff --git a/tests/annotations/tests.py b/tests/annotations/tests.py\nindex 142c23ead6..c1ac0516ac 100644\n--- a/tests/annotations/tests.py\n+++ b/tests/annotations/tests.py\n@@ -1,11 +1,13 @@\n import datetime\n from decimal import Decimal\n+from unittest import skipIf\n \n from django.core.exceptions import FieldDoesNotExist, FieldError\n+from django.db import connection\n from django.db.models import (\n-    BooleanField, CharField, Count, DateTimeField, Exists, ExpressionWrapper,\n-    F, Func, IntegerField, Max, NullBooleanField, OuterRef, Q, Subquery, Sum,\n-    Value,\n+    BooleanField, Case, CharField, Count, DateTimeField, Exists,\n+    ExpressionWrapper, F, Func, IntegerField, Max, NullBooleanField, OuterRef,\n+    Q, Subquery, Sum, Value, When,\n )\n from django.db.models.expressions import RawSQL\n from django.db.models.functions import Length, Lower\n@@ -632,3 +634,22 @@ class NonAggregateAnnotationTestCase(TestCase):\n             datetime.date(2008, 6, 23),\n             datetime.date(2008, 11, 3),\n         ])\n+\n+    @skipIf(\n+        connection.vendor == 'mysql' and 'ONLY_FULL_GROUP_BY' in connection.sql_mode,\n+        'GROUP BY optimization does not work properly when ONLY_FULL_GROUP_BY '\n+        'mode is enabled on MySQL, see #31331.',\n+    )\n+    def test_annotation_aggregate_with_m2o(self):\n+        qs = Author.objects.filter(age__lt=30).annotate(\n+            max_pages=Case(\n+                When(book_contact_set__isnull=True, then=Value(0)),\n+                default=Max(F('book__pages')),\n+                output_field=IntegerField(),\n+            ),\n+        ).values('name', 'max_pages')\n+        self.assertCountEqual(qs, [\n+            {'name': 'James Bennett', 'max_pages': 300},\n+            {'name': 'Paul Bissex', 'max_pages': 0},\n+            {'name': 'Wesley J. Chun', 'max_pages': 0},\n+        ])\ndiff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex ce18098fd2..5f0bca0f97 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -1124,7 +1124,7 @@ class Query(BaseExpression):\n \n     def check_filterable(self, expression):\n         \"\"\"Raise an error if expression cannot be used in a WHERE clause.\"\"\"\n-        if not getattr(expression, 'filterable', True):\n+        if isinstance(expression, BaseExpression) and not getattr(expression, 'filterable', True):\n             raise NotSupportedError(\n                 expression.__class__.__name__ + ' is disallowed in the filter '\n                 'clause.'\n@@ -2411,4 +2411,4 @@ class JoinPromoter:\n             # and again we could safely demote to INNER.\n         query.promote_joins(to_promote)\n         query.demote_joins(to_demote)\n-        return to_demote\n+        return to_demote\n\\ No newline at end of file\nObtaining file:///testbed\nRequirement already satisfied: asgiref>=3.2 in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from Django==3.2) (3.4.1)\nRequirement already satisfied: pytz in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from Django==3.2) (2024.1)\nRequirement already satisfied: sqlparse>=0.2.2 in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from Django==3.2) (0.4.4)\nRequirement already satisfied: typing-extensions in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from asgiref>=3.2->Django==3.2) (4.1.1)\nInstalling collected packages: Django\n  Attempting uninstall: Django\n    Found existing installation: Django 3.2\n    Uninstalling Django-3.2:\n      Successfully uninstalled Django-3.2\n  Running setup.py develop for Django\nSuccessfully installed Django-3.2\nTesting against Django installed in '/testbed/django'\nImporting application queries\nSkipping setup of unused database(s): other.\nOperations to perform:\n  Synchronize unmigrated apps: auth, contenttypes, messages, queries, sessions, staticfiles\n  Apply all migrations: admin, sites\nSynchronizing apps without migrations:\n  Creating tables...\n    Creating table django_content_type\n    Creating table auth_permission\n    Creating table auth_group\n    Creating table auth_user\n    Creating table django_session\n    Creating table queries_dumbcategory\n    Creating table queries_namedcategory\n    Creating table queries_tag\n    Creating table queries_note\n    Creating table queries_annotation\n    Creating table queries_datetimepk\n    Creating table queries_extrainfo\n    Creating table queries_author\n    Creating table queries_item\n    Creating table queries_report\n    Creating table queries_reportcomment\n    Creating table queries_ranking\n    Creating table queries_cover\n    Creating table queries_number\n    Creating table queries_valid\n    Creating table queries_x\n    Creating table queries_y\n    Creating table queries_loopx\n    Creating table queries_loopy\n    Creating table queries_loopz\n    Creating table queries_managedmodel\n    Creating table queries_detail\n    Creating table queries_member\n    Creating table queries_child\n    Creating table queries_custompk\n    Creating table queries_related\n    Creating table queries_custompktag\n    Creating table queries_celebrity\n    Creating table queries_tvchef\n    Creating table queries_fan\n    Creating table queries_leafa\n    Creating table queries_leafb\n    Creating table queries_join\n    Creating table queries_reservedname\n    Creating table queries_sharedconnection\n    Creating table queries_pointera\n    Creating table queries_pointerb\n    Creating table queries_singleobject\n    Creating table queries_relatedobject\n    Creating table queries_plaything\n    Creating table queries_article\n    Creating table queries_food\n    Creating table queries_eaten\n    Creating table queries_node\n    Creating table queries_objecta\n    Creating table queries_childobjecta\n    Creating table queries_objectb\n    Creating table queries_objectc\n    Creating table queries_simplecategory\n    Creating table queries_specialcategory\n    Creating table queries_categoryitem\n    Creating table queries_mixedcasefieldcategoryitem\n    Creating table queries_mixedcasedbcolumncategoryitem\n    Creating table queries_onetoonecategory\n    Creating table queries_categoryrelationship\n    Creating table queries_commonmixedcaseforeignkeys\n    Creating table queries_nullablename\n    Creating table queries_modeld\n    Creating table queries_modelc\n    Creating table queries_modelb\n    Creating table queries_modela\n    Creating table queries_job\n    Creating table queries_jobresponsibilities\n    Creating table queries_responsibility\n    Creating table queries_fk1\n    Creating table queries_fk2\n    Creating table queries_fk3\n    Creating table queries_basea\n    Creating table queries_identifier\n    Creating table queries_program\n    Creating table queries_channel\n    Creating table queries_book\n    Creating table queries_chapter\n    Creating table queries_paragraph\n    Creating table queries_page\n    Creating table queries_myobject\n    Creating table queries_order\n    Creating table queries_orderitem\n    Creating table queries_baseuser\n    Creating table queries_task\n    Creating table queries_staff\n    Creating table queries_staffuser\n    Creating table queries_ticket21203parent\n    Creating table queries_ticket21203child\n    Creating table queries_person\n    Creating table queries_company\n    Creating table queries_employment\n    Creating table queries_school\n    Creating table queries_student\n    Creating table queries_classroom\n    Creating table queries_teacher\n    Creating table queries_ticket23605aparent\n    Creating table queries_ticket23605a\n    Creating table queries_ticket23605b\n    Creating table queries_ticket23605c\n    Creating table Individual\n    Creating table RelatedIndividual\n    Creating table queries_customdbcolumn\n    Creating table queries_returningmodel\n    Creating table queries_nonintegerpkreturningmodel\n    Creating table queries_jsonfieldnullable\n    Running deferred SQL...\nRunning migrations:\n  Applying admin.0001_initial... OK\n  Applying admin.0002_logentry_remove_auto_add... OK\n  Applying admin.0003_logentry_add_action_flag_choices... OK\n  Applying sites.0001_initial... OK\n  Applying sites.0002_alter_domain_unique... OK\nSystem check identified no issues (1 silenced).\n",
    "report": {
      "patch_is_None": false,
      "patch_exists": true,
      "patch_successfully_applied": true,
      "resolved": true,
      "tests_status": {
        "FAIL_TO_PASS": {
          "success": [
            "test_field_with_filterable (queries.tests.Queries1Tests)",
            "test_ticket8439 (queries.tests.Queries1Tests)"
          ],
          "failure": []
        },
        "PASS_TO_PASS": {
          "success": [
            "#13227 -- If a queryset is already evaluated, it can still be used as a query arg",
            "test_no_fields_cloning (queries.tests.CloneTests)",
            "test_no_model_options_cloning (queries.tests.CloneTests)",
            "test_no_extra_params (queries.tests.DefaultValuesInsertTest)",
            "test_ticket_7302 (queries.tests.EscapingTests)",
            "test_ticket7371 (queries.tests.CustomPkTests)",
            "test_ticket22023 (queries.tests.Queries3Tests)",
            "test_ticket7107 (queries.tests.Queries3Tests)",
            "test_ticket8683 (queries.tests.Queries3Tests)",
            "test_ticket_21203 (queries.tests.Ticket21203Tests)",
            "test_empty_string_promotion (queries.tests.EmptyStringPromotionTests)",
            "test_invalid_values (queries.tests.TestInvalidValuesRelation)",
            "test_emptyqueryset_values (queries.tests.EmptyQuerySetTests)",
            "test_ticket_19151 (queries.tests.EmptyQuerySetTests)",
            "test_values_subquery (queries.tests.EmptyQuerySetTests)",
            "test_invalid_order_by (queries.tests.QuerySetExceptionTests)",
            "test_invalid_queryset_model (queries.tests.QuerySetExceptionTests)",
            "test_iter_exceptions (queries.tests.QuerySetExceptionTests)",
            "test_evaluated_proxy_count (queries.tests.ProxyQueryCleanupTest)",
            "test_ticket_21879 (queries.tests.ReverseM2MCustomPkTests)",
            "test_in_list_limit (queries.tests.ConditionalTests)",
            "test_infinite_loop (queries.tests.ConditionalTests)",
            "test_empty_full_handling_conjunction (queries.tests.WhereNodeTest)",
            "test_empty_full_handling_disjunction (queries.tests.WhereNodeTest)",
            "test_empty_nodes (queries.tests.WhereNodeTest)",
            "test_ticket_24278 (queries.tests.TestTicket24279)",
            "test_ticket_24605 (queries.tests.TestTicket24605)",
            "test_ticket_19964 (queries.tests.RelabelCloneTest)",
            "test_ticket10432 (queries.tests.GeneratorExpressionTests)",
            "test_ticket7778 (queries.tests.SubclassFKTests)",
            "test_ticket7872 (queries.tests.DisjunctiveFilterTests)",
            "test_ticket8283 (queries.tests.DisjunctiveFilterTests)",
            "test_annotated_ordering (queries.tests.QuerysetOrderedTests)",
            "test_cleared_default_ordering (queries.tests.QuerysetOrderedTests)",
            "test_empty_queryset (queries.tests.QuerysetOrderedTests)",
            "test_explicit_ordering (queries.tests.QuerysetOrderedTests)",
            "test_no_default_or_explicit_ordering (queries.tests.QuerysetOrderedTests)",
            "test_order_by_extra (queries.tests.QuerysetOrderedTests)",
            "test_ticket14729 (queries.tests.RawQueriesTests)",
            "test_double_subquery_in (queries.tests.DoubleInSubqueryTests)",
            "test_tickets_3045_3288 (queries.tests.SelectRelatedTests)",
            "test_reverse_trimming (queries.tests.ReverseJoinTrimmingTest)",
            "test_exists (queries.tests.ExistsSql)",
            "test_ticket_18414 (queries.tests.ExistsSql)",
            "test_ticket_18785 (queries.tests.Ticket18785Tests)",
            "test_ticket_20101 (queries.tests.Ticket20101Tests)",
            "test_ticket_14056 (queries.tests.Ticket14056Tests)",
            "test_primary_key (queries.tests.IsNullTests)",
            "test_to_field (queries.tests.IsNullTests)",
            "test_ticket_20788 (queries.tests.Ticket20788Tests)",
            "test_ticket8597 (queries.tests.ComparisonTests)",
            "test_values_in_subquery (queries.tests.ValuesSubqueryTests)",
            "test_21001 (queries.tests.EmptyStringsAsNullTest)",
            "test_direct_exclude (queries.tests.EmptyStringsAsNullTest)",
            "test_joined_exclude (queries.tests.EmptyStringsAsNullTest)",
            "test_ticket15786 (queries.tests.Exclude15786)",
            "test_ticket_12807 (queries.tests.Ticket12807Tests)",
            "test_join_already_in_query (queries.tests.NullableRelOrderingTests)",
            "test_ticket10028 (queries.tests.NullableRelOrderingTests)",
            "test_ticket_21787 (queries.tests.ForeignKeyToBaseExcludeTests)",
            "test_exclude_plain (queries.tests.ExcludeTest17600)",
            "test_exclude_plain_distinct (queries.tests.ExcludeTest17600)",
            "test_exclude_with_q_is_equal_to_plain_exclude (queries.tests.ExcludeTest17600)",
            "test_exclude_with_q_is_equal_to_plain_exclude_variation (queries.tests.ExcludeTest17600)",
            "test_exclude_with_q_object_distinct (queries.tests.ExcludeTest17600)",
            "test_exclude_with_q_object_no_distinct (queries.tests.ExcludeTest17600)",
            "test_or_with_both_slice (queries.tests.QuerySetBitwiseOperationTests)",
            "test_or_with_both_slice_and_ordering (queries.tests.QuerySetBitwiseOperationTests)",
            "test_or_with_lhs_slice (queries.tests.QuerySetBitwiseOperationTests)",
            "test_or_with_rhs_slice (queries.tests.QuerySetBitwiseOperationTests)",
            "test_non_nullable_fk_not_promoted (queries.tests.ValuesJoinPromotionTests)",
            "test_ticket_21376 (queries.tests.ValuesJoinPromotionTests)",
            "test_values_no_promotion_for_existing (queries.tests.ValuesJoinPromotionTests)",
            "test_double_exclude (queries.tests.NullInExcludeTest)",
            "test_null_in_exclude_qs (queries.tests.NullInExcludeTest)",
            "test_correct_lookup (queries.tests.RelatedLookupTypeTests)",
            "test_values_queryset_lookup (queries.tests.RelatedLookupTypeTests)",
            "test_wrong_backward_lookup (queries.tests.RelatedLookupTypeTests)",
            "test_wrong_type_lookup (queries.tests.RelatedLookupTypeTests)",
            "test_exclude_many_to_many (queries.tests.ManyToManyExcludeTest)",
            "test_ticket_12823 (queries.tests.ManyToManyExcludeTest)",
            "test_ticket_20955 (queries.tests.Ticket20955Tests)",
            "test_ticket_22429 (queries.tests.Ticket22429Tests)",
            "test_ticket_23605 (queries.tests.Ticket23605Tests)",
            "test_fk_reuse (queries.tests.JoinReuseTest)",
            "test_fk_reuse_annotation (queries.tests.JoinReuseTest)",
            "test_fk_reuse_disjunction (queries.tests.JoinReuseTest)",
            "test_fk_reuse_order_by (queries.tests.JoinReuseTest)",
            "test_fk_reuse_select_related (queries.tests.JoinReuseTest)",
            "test_inverted_q_across_relations (queries.tests.JoinReuseTest)",
            "test_revfk_noreuse (queries.tests.JoinReuseTest)",
            "test_revo2o_reuse (queries.tests.JoinReuseTest)",
            "test_distinct_ordered_sliced_subquery_aggregation (queries.tests.Queries6Tests)",
            "test_multiple_columns_with_the_same_name_slice (queries.tests.Queries6Tests)",
            "test_nested_queries_sql (queries.tests.Queries6Tests)",
            "test_parallel_iterators (queries.tests.Queries6Tests)",
            "test_ticket3739 (queries.tests.Queries6Tests)",
            "test_ticket_11320 (queries.tests.Queries6Tests)",
            "test_tickets_8921_9188 (queries.tests.Queries6Tests)",
            "test_empty_resultset_sql (queries.tests.WeirdQuerysetSlicingTests)",
            "test_empty_sliced_subquery (queries.tests.WeirdQuerysetSlicingTests)",
            "test_empty_sliced_subquery_exclude (queries.tests.WeirdQuerysetSlicingTests)",
            "test_tickets_7698_10202 (queries.tests.WeirdQuerysetSlicingTests)",
            "test_zero_length_values_slicing (queries.tests.WeirdQuerysetSlicingTests)",
            "test_ticket12239 (queries.tests.Queries2Tests)",
            "test_ticket4289 (queries.tests.Queries2Tests)",
            "test_ticket7759 (queries.tests.Queries2Tests)",
            "test_can_combine_queries_using_and_and_or_operators (queries.tests.QuerySetSupportsPythonIdioms)",
            "test_can_get_items_using_index_and_slice_notation (queries.tests.QuerySetSupportsPythonIdioms)",
            "test_can_get_number_of_items_in_queryset_using_standard_len (queries.tests.QuerySetSupportsPythonIdioms)",
            "test_invalid_index (queries.tests.QuerySetSupportsPythonIdioms)",
            "test_slicing_can_slice_again_after_slicing (queries.tests.QuerySetSupportsPythonIdioms)",
            "test_slicing_cannot_combine_queries_once_sliced (queries.tests.QuerySetSupportsPythonIdioms)",
            "test_slicing_cannot_filter_queryset_once_sliced (queries.tests.QuerySetSupportsPythonIdioms)",
            "test_slicing_cannot_reorder_queryset_once_sliced (queries.tests.QuerySetSupportsPythonIdioms)",
            "hint: inverting your ordering might do what you need",
            "test_slicing_with_steps_can_be_used (queries.tests.QuerySetSupportsPythonIdioms)",
            "test_slicing_with_tests_is_not_lazy (queries.tests.QuerySetSupportsPythonIdioms)",
            "test_slicing_without_step_is_lazy (queries.tests.QuerySetSupportsPythonIdioms)",
            "test_in_query (queries.tests.ToFieldTests)",
            "test_in_subquery (queries.tests.ToFieldTests)",
            "test_nested_in_subquery (queries.tests.ToFieldTests)",
            "test_recursive_fk (queries.tests.ToFieldTests)",
            "test_recursive_fk_reverse (queries.tests.ToFieldTests)",
            "test_reverse_in (queries.tests.ToFieldTests)",
            "test_single_object (queries.tests.ToFieldTests)",
            "test_single_object_reverse (queries.tests.ToFieldTests)",
            "test_AB_ACB (queries.tests.UnionTests)",
            "test_A_AB (queries.tests.UnionTests)",
            "test_A_AB2 (queries.tests.UnionTests)",
            "test_BAB_BAC (queries.tests.UnionTests)",
            "test_BAB_BACB (queries.tests.UnionTests)",
            "test_BA_BCA__BAB_BAC_BCA (queries.tests.UnionTests)",
            "test_extra_multiple_select_params_values_order_by (queries.tests.ValuesQuerysetTests)",
            "test_extra_select_params_values_order_in_extra (queries.tests.ValuesQuerysetTests)",
            "test_extra_values (queries.tests.ValuesQuerysetTests)",
            "test_extra_values_list (queries.tests.ValuesQuerysetTests)",
            "test_extra_values_order_in_extra (queries.tests.ValuesQuerysetTests)",
            "test_extra_values_order_multiple (queries.tests.ValuesQuerysetTests)",
            "test_extra_values_order_twice (queries.tests.ValuesQuerysetTests)",
            "test_field_error_values_list (queries.tests.ValuesQuerysetTests)",
            "test_flat_extra_values_list (queries.tests.ValuesQuerysetTests)",
            "test_flat_values_list (queries.tests.ValuesQuerysetTests)",
            "test_named_values_list_bad_field_name (queries.tests.ValuesQuerysetTests)",
            "test_named_values_list_expression (queries.tests.ValuesQuerysetTests)",
            "test_named_values_list_expression_with_default_alias (queries.tests.ValuesQuerysetTests)",
            "test_named_values_list_flat (queries.tests.ValuesQuerysetTests)",
            "test_named_values_list_with_fields (queries.tests.ValuesQuerysetTests)",
            "test_named_values_list_without_fields (queries.tests.ValuesQuerysetTests)",
            "test_disjunction_promotion1 (queries.tests.DisjunctionPromotionTests)",
            "test_disjunction_promotion2 (queries.tests.DisjunctionPromotionTests)",
            "test_disjunction_promotion3 (queries.tests.DisjunctionPromotionTests)",
            "test_disjunction_promotion3_demote (queries.tests.DisjunctionPromotionTests)",
            "test_disjunction_promotion4 (queries.tests.DisjunctionPromotionTests)",
            "test_disjunction_promotion4_demote (queries.tests.DisjunctionPromotionTests)",
            "test_disjunction_promotion5_demote (queries.tests.DisjunctionPromotionTests)",
            "test_disjunction_promotion6 (queries.tests.DisjunctionPromotionTests)",
            "test_disjunction_promotion7 (queries.tests.DisjunctionPromotionTests)",
            "test_disjunction_promotion_fexpression (queries.tests.DisjunctionPromotionTests)",
            "test_disjunction_promotion_select_related (queries.tests.DisjunctionPromotionTests)",
            "test_exclude_reverse_fk_field_ref (queries.tests.ExcludeTests)",
            "test_exclude_with_circular_fk_relation (queries.tests.ExcludeTests)",
            "test_subquery_exclude_outerref (queries.tests.ExcludeTests)",
            "test_ticket14511 (queries.tests.ExcludeTests)",
            "test_to_field (queries.tests.ExcludeTests)",
            "test_extra_select_literal_percent_s (queries.tests.Queries5Tests)",
            "test_ordering (queries.tests.Queries5Tests)",
            "test_ticket5261 (queries.tests.Queries5Tests)",
            "test_ticket7045 (queries.tests.Queries5Tests)",
            "test_ticket7256 (queries.tests.Queries5Tests)",
            "test_ticket9848 (queries.tests.Queries5Tests)",
            "test_distinct_ordered_sliced_subquery (queries.tests.SubqueryTests)",
            "Subselects honor any manual ordering",
            "test_related_sliced_subquery (queries.tests.SubqueryTests)",
            "test_slice_subquery_and_query (queries.tests.SubqueryTests)",
            "Delete queries can safely contain sliced subqueries",
            "test_isnull_filter_promotion (queries.tests.NullJoinPromotionOrTest)",
            "test_null_join_demotion (queries.tests.NullJoinPromotionOrTest)",
            "test_ticket_17886 (queries.tests.NullJoinPromotionOrTest)",
            "test_ticket_21366 (queries.tests.NullJoinPromotionOrTest)",
            "test_ticket_21748 (queries.tests.NullJoinPromotionOrTest)",
            "test_ticket_21748_complex_filter (queries.tests.NullJoinPromotionOrTest)",
            "test_ticket_21748_double_negated_and (queries.tests.NullJoinPromotionOrTest)",
            "test_ticket_21748_double_negated_or (queries.tests.NullJoinPromotionOrTest)",
            "test_combine_join_reuse (queries.tests.Queries4Tests)",
            "test_filter_reverse_non_integer_pk (queries.tests.Queries4Tests)",
            "test_join_reuse_order (queries.tests.Queries4Tests)",
            "test_order_by_resetting (queries.tests.Queries4Tests)",
            "test_order_by_reverse_fk (queries.tests.Queries4Tests)",
            "test_ticket10181 (queries.tests.Queries4Tests)",
            "test_ticket11811 (queries.tests.Queries4Tests)",
            "test_ticket14876 (queries.tests.Queries4Tests)",
            "test_ticket15316_exclude_false (queries.tests.Queries4Tests)",
            "test_ticket15316_exclude_true (queries.tests.Queries4Tests)",
            "test_ticket15316_filter_false (queries.tests.Queries4Tests)",
            "test_ticket15316_filter_true (queries.tests.Queries4Tests)",
            "test_ticket15316_one2one_exclude_false (queries.tests.Queries4Tests)",
            "test_ticket15316_one2one_exclude_true (queries.tests.Queries4Tests)",
            "test_ticket15316_one2one_filter_false (queries.tests.Queries4Tests)",
            "test_ticket15316_one2one_filter_true (queries.tests.Queries4Tests)",
            "test_ticket24525 (queries.tests.Queries4Tests)",
            "test_ticket7095 (queries.tests.Queries4Tests)",
            "test_avoid_infinite_loop_on_too_many_subqueries (queries.tests.Queries1Tests)",
            "test_common_mixed_case_foreign_keys (queries.tests.Queries1Tests)",
            "test_deferred_load_qs_pickling (queries.tests.Queries1Tests)",
            "test_double_exclude (queries.tests.Queries1Tests)",
            "test_error_raised_on_filter_with_dictionary (queries.tests.Queries1Tests)",
            "test_exclude (queries.tests.Queries1Tests)",
            "test_exclude_in (queries.tests.Queries1Tests)",
            "test_excluded_intermediary_m2m_table_joined (queries.tests.Queries1Tests)",
            "test_get_clears_ordering (queries.tests.Queries1Tests)",
            "test_heterogeneous_qs_combination (queries.tests.Queries1Tests)",
            "test_lookup_constraint_fielderror (queries.tests.Queries1Tests)",
            "test_nested_exclude (queries.tests.Queries1Tests)",
            "test_order_by_join_unref (queries.tests.Queries1Tests)",
            "test_order_by_raw_column_alias_warning (queries.tests.Queries1Tests)",
            "test_order_by_rawsql (queries.tests.Queries1Tests)",
            "test_order_by_tables (queries.tests.Queries1Tests)",
            "test_reasonable_number_of_subq_aliases (queries.tests.Queries1Tests)",
            "test_subquery_condition (queries.tests.Queries1Tests)",
            "test_ticket10205 (queries.tests.Queries1Tests)",
            "test_ticket10432 (queries.tests.Queries1Tests)",
            "test_ticket1050 (queries.tests.Queries1Tests)",
            "test_ticket10742 (queries.tests.Queries1Tests)",
            "test_ticket17429 (queries.tests.Queries1Tests)",
            "test_ticket1801 (queries.tests.Queries1Tests)",
            "test_ticket19672 (queries.tests.Queries1Tests)",
            "test_ticket2091 (queries.tests.Queries1Tests)",
            "test_ticket2253 (queries.tests.Queries1Tests)",
            "test_ticket2306 (queries.tests.Queries1Tests)",
            "test_ticket2400 (queries.tests.Queries1Tests)",
            "test_ticket2496 (queries.tests.Queries1Tests)",
            "test_ticket3037 (queries.tests.Queries1Tests)",
            "test_ticket3141 (queries.tests.Queries1Tests)",
            "test_ticket4358 (queries.tests.Queries1Tests)",
            "test_ticket4464 (queries.tests.Queries1Tests)",
            "test_ticket4510 (queries.tests.Queries1Tests)",
            "test_ticket6074 (queries.tests.Queries1Tests)",
            "test_ticket6154 (queries.tests.Queries1Tests)",
            "test_ticket6981 (queries.tests.Queries1Tests)",
            "test_ticket7076 (queries.tests.Queries1Tests)",
            "test_ticket7096 (queries.tests.Queries1Tests)",
            "test_ticket7098 (queries.tests.Queries1Tests)",
            "test_ticket7155 (queries.tests.Queries1Tests)",
            "test_ticket7181 (queries.tests.Queries1Tests)",
            "test_ticket7235 (queries.tests.Queries1Tests)",
            "test_ticket7277 (queries.tests.Queries1Tests)",
            "test_ticket7323 (queries.tests.Queries1Tests)",
            "test_ticket7378 (queries.tests.Queries1Tests)",
            "test_ticket7791 (queries.tests.Queries1Tests)",
            "test_ticket7813 (queries.tests.Queries1Tests)",
            "test_ticket9411 (queries.tests.Queries1Tests)",
            "test_ticket9926 (queries.tests.Queries1Tests)",
            "test_ticket9985 (queries.tests.Queries1Tests)",
            "test_ticket9997 (queries.tests.Queries1Tests)",
            "test_ticket_10790_1 (queries.tests.Queries1Tests)",
            "test_ticket_10790_2 (queries.tests.Queries1Tests)",
            "test_ticket_10790_3 (queries.tests.Queries1Tests)",
            "test_ticket_10790_4 (queries.tests.Queries1Tests)",
            "test_ticket_10790_5 (queries.tests.Queries1Tests)",
            "test_ticket_10790_6 (queries.tests.Queries1Tests)",
            "test_ticket_10790_7 (queries.tests.Queries1Tests)",
            "test_ticket_10790_8 (queries.tests.Queries1Tests)",
            "test_ticket_10790_combine (queries.tests.Queries1Tests)",
            "test_ticket_20250 (queries.tests.Queries1Tests)",
            "test_tickets_1878_2939 (queries.tests.Queries1Tests)",
            "test_tickets_2076_7256 (queries.tests.Queries1Tests)",
            "test_tickets_2080_3592 (queries.tests.Queries1Tests)",
            "test_tickets_2874_3002 (queries.tests.Queries1Tests)",
            "test_tickets_4088_4306 (queries.tests.Queries1Tests)",
            "test_tickets_5321_7070 (queries.tests.Queries1Tests)",
            "test_tickets_5324_6704 (queries.tests.Queries1Tests)",
            "test_tickets_6180_6203 (queries.tests.Queries1Tests)",
            "test_tickets_7087_12242 (queries.tests.Queries1Tests)",
            "test_tickets_7204_7506 (queries.tests.Queries1Tests)",
            "test_tickets_7448_7707 (queries.tests.Queries1Tests)"
          ],
          "failure": []
        },
        "FAIL_TO_FAIL": {
          "success": [],
          "failure": []
        },
        "PASS_TO_FAIL": {
          "success": [],
          "failure": []
        }
      }
    }
  }
}