diff --git a/django/forms/formsets.py b/django/forms/formsets.py
index a89c35599f..43ab3f36d2 100644
--- a/django/forms/formsets.py
+++ b/django/forms/formsets.py
@@ -75,7 +75,7 @@ class BaseFormSet:
         self.form_kwargs = form_kwargs or {}
         self.error_class = error_class
         self._errors = None
-        self._non_form_errors = None
+        self._non_form_errors = self.error_class(error_class='errorlist nonform')
 
         messages = {}
         for cls in reversed(type(self).__mro__):
@@ -493,4 +493,4 @@ def formset_factory(form, formset=BaseFormSet, extra=1, can_order=False,
 def all_valid(formsets):
     """Validate every formset and return True if all are valid."""
     # List comprehension ensures is_valid() is called for all formsets.
-    return all([formset.is_valid() for formset in formsets])
+    return all([formset.is_valid() for formset in formsets])
\ No newline at end of file
diff --git a/tests/forms_tests/tests/test_formsets.py b/tests/forms_tests/tests/test_formsets.py
index 889560aa74..1d4628ff2a 100644
--- a/tests/forms_tests/tests/test_formsets.py
+++ b/tests/forms_tests/tests/test_formsets.py
@@ -139,6 +139,19 @@ class FormsFormsetTestCase(SimpleTestCase):
         self.assertTrue(hasattr(formset.empty_form, 'custom_kwarg'))
         self.assertEqual(formset.empty_form.custom_kwarg, 1)
 
+    def test_non_form_errors_css_class(self):
+        """
+        non_form_errors() should have nonform CSS class.
+        """
+        data = {
+            'choices-TOTAL_FORMS': '1',
+            'choices-INITIAL_FORMS': '0',
+            'choices-MIN_NUM_FORMS': '0',
+            'choices-MAX_NUM_FORMS': '0',
+        }
+        formset = ChoiceFormSet(data, auto_id=False, prefix='choices')
+        self.assertIn('nonform', formset.non_form_errors().error_class)
+
     def test_formset_validation(self):
         # FormSet instances can also have an error attribute if validation failed for
         # any of the forms.
@@ -1481,4 +1494,4 @@ class AllValidTests(SimpleTestCase):
         self.assertIs(all_valid((formset1, formset2)), False)
         expected_errors = [{'votes': ['This field is required.']}, {'votes': ['This field is required.']}]
         self.assertEqual(formset1._errors, expected_errors)
-        self.assertEqual(formset2._errors, expected_errors)
+        self.assertEqual(formset2._errors, expected_errors)
\ No newline at end of file
