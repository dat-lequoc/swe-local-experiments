{
  "instance_id": "django__django-11133",
  "model_patch": "diff --git a/django/http/response.py b/django/http/response.py\nindex 6a84e193ba..cbbb91de23 100644\n--- a/django/http/response.py\n+++ b/django/http/response.py\n@@ -229,7 +229,7 @@ class HttpResponseBase:\n         # Handle string types -- we can't rely on force_bytes here because:\n         # - Python attempts str conversion first\n         # - when self._charset != 'utf-8' it re-encodes the content\n-        if isinstance(value, bytes):\n+        if isinstance(value, (bytes, memoryview)):\n             return bytes(value)\n         if isinstance(value, str):\n             return bytes(value.encode(self.charset))\n@@ -555,4 +555,4 @@ class JsonResponse(HttpResponse):\n             json_dumps_params = {}\n         kwargs.setdefault('content_type', 'application/json')\n         data = json.dumps(data, cls=encoder, **json_dumps_params)\n-        super().__init__(content=data, **kwargs)\n+        super().__init__(content=data, **kwargs)\n\\ No newline at end of file\ndiff --git a/tests/http/__init__.py b/tests/http/__init__.py\nnew file mode 100644\nindex 0000000000..8b13789179\n--- /dev/null\n+++ b/tests/http/__init__.py\n@@ -0,0 +1 @@\n+\ndiff --git a/tests/http/tests.py b/tests/http/tests.py\nnew file mode 100644\nindex 0000000000..51797a6993\n--- /dev/null\n+++ b/tests/http/tests.py\n@@ -0,0 +1,21 @@\n+from django.test import SimpleTestCase\n+from django.http import HttpResponse\n+\n+class HttpResponseTests(SimpleTestCase):\n+    def test_memoryview_content(self):\n+        \"\"\"HttpResponse handles memoryview objects correctly.\"\"\"\n+        content = memoryview(b\"My Content\")\n+        response = HttpResponse(content)\n+        self.assertEqual(response.content, b\"My Content\")\n+\n+    def test_empty_memoryview_content(self):\n+        \"\"\"HttpResponse handles empty memoryview objects.\"\"\"\n+        content = memoryview(b\"\")\n+        response = HttpResponse(content)\n+        self.assertEqual(response.content, b\"\")\n+\n+    def test_memoryview_with_existing_types(self):\n+        \"\"\"Existing content types still work with memoryview changes.\"\"\"\n+        self.assertEqual(HttpResponse(\"text\").content, b\"text\")\n+        self.assertEqual(HttpResponse(b\"bytes\").content, b\"bytes\")\n+        self.assertEqual(HttpResponse(123).content, b\"123\")\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}