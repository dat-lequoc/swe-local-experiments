{
  "instance_id": "scikit-learn__scikit-learn-13439",
  "model_patch": "diff --git a/sklearn/pipeline.py b/sklearn/pipeline.py\nindex 7eaf9a46f..97a289f90 100644\n--- a/sklearn/pipeline.py\n+++ b/sklearn/pipeline.py\n@@ -160,6 +160,9 @@ class Pipeline(_BaseComposition):\n         return self\n \n     def _validate_steps(self):\n+        if not self.steps:\n+            return\n+            \n         names, estimators = zip(*self.steps)\n \n         # validate names\n@@ -228,6 +231,10 @@ class Pipeline(_BaseComposition):\n         # Use Bunch object to improve autocomplete\n         return Bunch(**dict(self.steps))\n \n+    def __len__(self):\n+        \"\"\"Returns the length of the Pipeline - the number of steps.\"\"\"\n+        return len(self.steps)\n+\n     @property\n     def _final_estimator(self):\n         estimator = self.steps[-1][1]\n@@ -928,4 +935,4 @@ def make_union(*transformers, **kwargs):\n         # change its type spec in make_union\n         raise TypeError('Unknown keyword arguments: \"{}\"'\n                         .format(list(kwargs.keys())[0]))\n-    return FeatureUnion(_name_estimators(transformers), n_jobs=n_jobs)\n+    return FeatureUnion(_name_estimators(transformers), n_jobs=n_jobs)\n\\ No newline at end of file\ndiff --git a/sklearn/tests/test_pipeline.py b/sklearn/tests/test_pipeline.py\nindex 8d6fe8f70..1764e2186 100644\n--- a/sklearn/tests/test_pipeline.py\n+++ b/sklearn/tests/test_pipeline.py\n@@ -154,6 +154,20 @@ class DummyEstimatorParams(BaseEstimator):\n         return self\n \n \n+def test_pipeline_len():\n+    # Test pipeline length\n+    pipe = Pipeline([])\n+    assert_equal(len(pipe), 0)\n+    \n+    pipe = Pipeline([('name', None)])\n+    assert_equal(len(pipe), 1)\n+    \n+    pipe = Pipeline([('t1', Transf()), ('t2', None), ('t3', Transf())])\n+    assert_equal(len(pipe), 3)\n+    \n+    pipe = Pipeline([('t1', 'passthrough'), ('t2', Transf())])\n+    assert_equal(len(pipe), 2)\n+\n def test_pipeline_init():\n     # Test the various init parameters of the pipeline.\n     assert_raises(TypeError, Pipeline)\n@@ -1070,4 +1084,4 @@ def test_make_pipeline_memory():\n     pipeline = make_pipeline(DummyTransf(), SVC())\n     assert pipeline.memory is None\n \n-    shutil.rmtree(cachedir)\n+    shutil.rmtree(cachedir)\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}