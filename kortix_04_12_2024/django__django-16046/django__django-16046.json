{
  "instance_id": "django__django-16046",
  "model_patch": "diff --git a/django/utils/numberformat.py b/django/utils/numberformat.py\nindex 488d6a77cd..bc53f01b1d 100644\n--- a/django/utils/numberformat.py\n+++ b/django/utils/numberformat.py\n@@ -25,6 +25,8 @@ def format(\n         module in locale.localeconv() LC_NUMERIC grouping (e.g. (3, 2, 0)).\n     * thousand_sep: Thousand separator symbol (for example \",\")\n     \"\"\"\n+    if number is None or number == \"\":\n+        return \"\"\n     use_grouping = (\n         use_l10n or (use_l10n is None and settings.USE_L10N)\n     ) and settings.USE_THOUSAND_SEPARATOR\n@@ -101,4 +103,4 @@ def format(\n             int_part_gd += digit\n             cnt += 1\n         int_part = int_part_gd[::-1]\n-    return sign + int_part + dec_part\n+    return sign + int_part + dec_part\n\\ No newline at end of file\ndiff --git a/tests/utils_tests/test_numberformat.py b/tests/utils_tests/test_numberformat.py\nindex cec3e4c385..cf71bcc9de 100644\n--- a/tests/utils_tests/test_numberformat.py\n+++ b/tests/utils_tests/test_numberformat.py\n@@ -160,6 +160,13 @@ class TestNumberFormat(SimpleTestCase):\n                     nformat(Decimal(value), \".\", decimal_pos), expected_value\n                 )\n \n+    def test_none_empty_values(self):\n+        \"\"\"Test handling of None and empty string values.\"\"\"\n+        self.assertEqual(nformat(None, \".\"), \"\")\n+        self.assertEqual(nformat(\"\", \".\"), \"\")\n+        self.assertEqual(nformat(\"\", \".\", decimal_pos=2), \"\")\n+        self.assertEqual(nformat(None, \".\", decimal_pos=2), \"\")\n+\n     def test_decimal_subclass(self):\n         class EuroDecimal(Decimal):\n             \"\"\"\n@@ -171,4 +178,4 @@ class TestNumberFormat(SimpleTestCase):\n                 return \"\u20ac {}\".format(amount)\n \n         price = EuroDecimal(\"1.23\")\n-        self.assertEqual(nformat(price, \",\"), \"\u20ac 1,23\")\n+        self.assertEqual(nformat(price, \",\"), \"\u20ac 1,23\")\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}