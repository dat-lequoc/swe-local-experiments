{
  "instance_id": "scikit-learn__scikit-learn-25638",
  "model_patch": "diff --git a/sklearn/utils/multiclass.py b/sklearn/utils/multiclass.py\nindex 5eaef2fde..16bcda4d3 100644\n--- a/sklearn/utils/multiclass.py\n+++ b/sklearn/utils/multiclass.py\n@@ -20,9 +20,18 @@ from .validation import check_array, _assert_all_finite\n from ..utils._array_api import get_namespace\n \n \n+def _is_pandas_nullable(y):\n+    return hasattr(y, \"dtype\") and str(y.dtype) in (\"Int64\", \"Float64\", \"boolean\")\n+\n+def _convert_pandas_nullable(y):\n+    if _is_pandas_nullable(y):\n+        return y.astype(y.dtype.numpy_dtype)\n+    return y\n+\n def _unique_multiclass(y):\n     xp, is_array_api = get_namespace(y)\n     if hasattr(y, \"__array__\") or is_array_api:\n+        y = _convert_pandas_nullable(y)\n         return xp.unique_values(xp.asarray(y))\n     else:\n         return set(y)\n@@ -518,4 +527,4 @@ def _ovr_decision_function(predictions, confidences, n_classes):\n     transformed_confidences = sum_of_confidences / (\n         3 * (np.abs(sum_of_confidences) + 1)\n     )\n-    return votes + transformed_confidences\n+    return votes + transformed_confidences\n\\ No newline at end of file\ndiff --git a/sklearn/utils/tests/test_multiclass.py b/sklearn/utils/tests/test_multiclass.py\nindex cf5858d0f..64bae0a0c 100644\n--- a/sklearn/utils/tests/test_multiclass.py\n+++ b/sklearn/utils/tests/test_multiclass.py\n@@ -4,6 +4,7 @@ from itertools import product\n import pytest\n \n from scipy.sparse import issparse\n+import pandas as pd\n from scipy.sparse import csc_matrix\n from scipy.sparse import csr_matrix\n from scipy.sparse import coo_matrix\n@@ -174,6 +175,14 @@ MULTILABEL_SEQUENCES = [\n ]\n \n \n+def test_unique_labels_pandas_nullable():\n+    # Test pandas nullable dtypes\n+    for dtype in [\"Int64\", \"Float64\", \"boolean\"]:\n+        y_true = pd.Series([1, 0, 0, 1, 0, 1, 1, 0, 1], dtype=dtype)\n+        y_predicted = pd.Series([0, 0, 1, 1, 0, 1, 1, 1, 1], dtype=\"int64\")\n+        result = unique_labels(y_true, y_predicted)\n+        assert_array_equal(result, [0, 1])\n+\n def test_unique_labels():\n     # Empty iterable\n     with pytest.raises(ValueError):\n@@ -455,4 +464,4 @@ def test_ovr_decision_function():\n         for i in range(4)\n     ]\n \n-    assert_allclose(dec_values, dec_values_one, atol=1e-6)\n+    assert_allclose(dec_values, dec_values_one, atol=1e-6)\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}