diff --git a/sklearn/linear_model/ridge.py b/sklearn/linear_model/ridge.py
index 911c74ae3..c64d1ae3f 100644
--- a/sklearn/linear_model/ridge.py
+++ b/sklearn/linear_model/ridge.py
@@ -1333,10 +1333,11 @@ class RidgeClassifierCV(LinearClassifierMixin, _BaseRidgeCV):
     advantage of the multi-variate response support in Ridge.
     """
     def __init__(self, alphas=(0.1, 1.0, 10.0), fit_intercept=True,
-                 normalize=False, scoring=None, cv=None, class_weight=None):
+                 normalize=False, scoring=None, cv=None, class_weight=None,
+                 store_cv_values=False):
         super(RidgeClassifierCV, self).__init__(
             alphas=alphas, fit_intercept=fit_intercept, normalize=normalize,
-            scoring=scoring, cv=cv)
+            scoring=scoring, cv=cv, store_cv_values=store_cv_values)
         self.class_weight = class_weight
 
     def fit(self, X, y, sample_weight=None):
@@ -1378,4 +1379,4 @@ class RidgeClassifierCV(LinearClassifierMixin, _BaseRidgeCV):
 
     @property
     def classes_(self):
-        return self._label_binarizer.classes_
+        return self._label_binarizer.classes_
\ No newline at end of file
diff --git a/sklearn/linear_model/tests/test_ridge.py b/sklearn/linear_model/tests/test_ridge.py
index ee44da5d5..064c722dc 100644
--- a/sklearn/linear_model/tests/test_ridge.py
+++ b/sklearn/linear_model/tests/test_ridge.py
@@ -800,6 +800,14 @@ def test_ridge_classifier_no_support_multilabel():
     X, y = make_multilabel_classification(n_samples=10, random_state=0)
     assert_raises(ValueError, RidgeClassifier().fit, X, y)
 
+def test_ridge_classifier_cv_store_cv_values():
+    # Test store_cv_values on RidgeClassifierCV
+    clf = RidgeClassifierCV(store_cv_values=True, cv=None)
+    clf.fit(X_iris[:100], y_iris[:100])
+    assert_true(hasattr(clf, 'cv_values_'))
+    assert_equal(clf.cv_values_.shape[0], 100)  # n_samples
+    assert_equal(clf.cv_values_.shape[2], len(clf.alphas))  # n_alphas
+
 
 def test_dtype_match():
     rng = np.random.RandomState(0)
@@ -859,4 +867,4 @@ def test_dtype_match_cholesky():
     assert coef_64.dtype == X_64.dtype
     assert ridge_32.predict(X_32).dtype == X_32.dtype
     assert ridge_64.predict(X_64).dtype == X_64.dtype
-    assert_almost_equal(ridge_32.coef_, ridge_64.coef_, decimal=5)
+    assert_almost_equal(ridge_32.coef_, ridge_64.coef_, decimal=5)
\ No newline at end of file
