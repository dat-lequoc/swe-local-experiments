diff --git a/django/core/management/templates.py b/django/core/management/templates.py
index 8dc6068286..155276f12d 100644
--- a/django/core/management/templates.py
+++ b/django/core/management/templates.py
@@ -74,7 +74,7 @@ class TemplateCommand(BaseCommand):
                 raise CommandError(e)
         else:
             if app_or_project == 'app':
-                self.validate_name(os.path.basename(target), 'directory')
+                self.validate_name(os.path.basename(target.rstrip(os.sep)), 'directory')
             top_dir = os.path.abspath(os.path.expanduser(target))
             if not os.path.exists(top_dir):
                 raise CommandError("Destination directory '%s' does not "
@@ -337,4 +337,4 @@ class TemplateCommand(BaseCommand):
         if not os.access(filename, os.W_OK):
             st = os.stat(filename)
             new_permissions = stat.S_IMODE(st.st_mode) | stat.S_IWUSR
-            os.chmod(filename, new_permissions)
+            os.chmod(filename, new_permissions)
\ No newline at end of file
diff --git a/tests/i18n/test_management.py b/tests/i18n/test_management.py
index c464a13295..60eb74df1d 100644
--- a/tests/i18n/test_management.py
+++ b/tests/i18n/test_management.py
@@ -6,6 +6,16 @@ from django.test import SimpleTestCase
 
 class TranslatableFileTests(SimpleTestCase):
 
+    def test_validate_name_with_trailing_slash(self):
+        """
+        Validate that directory names with trailing slashes are handled correctly.
+        """
+        from django.core.management.templates import TemplateCommand
+        command = TemplateCommand()
+        # Should not raise CommandError
+        command.validate_name(os.path.basename('some_dir/'.rstrip(os.sep)), 'directory')
+        command.validate_name(os.path.basename('some_dir//'.rstrip(os.sep)), 'directory')
+
     def test_repr(self):
         dirpath = 'dir'
         file_name = 'example'
@@ -19,4 +29,4 @@ class TranslatableFileTests(SimpleTestCase):
         trans_file_eq = TranslatableFile(dirpath=dirpath, file_name=file_name, locale_dir=None)
         trans_file_not_eq = TranslatableFile(dirpath='tmp', file_name=file_name, locale_dir=None)
         self.assertEqual(trans_file, trans_file_eq)
-        self.assertNotEqual(trans_file, trans_file_not_eq)
+        self.assertNotEqual(trans_file, trans_file_not_eq)
\ No newline at end of file
