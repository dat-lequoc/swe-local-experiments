{
  "instance_id": "sympy__sympy-12419",
  "model_patch": "diff --git a/sympy/matrices/expressions/matexpr.py b/sympy/matrices/expressions/matexpr.py\nindex b4d759836e..f2df68ddbd 100644\n--- a/sympy/matrices/expressions/matexpr.py\n+++ b/sympy/matrices/expressions/matexpr.py\n@@ -484,6 +484,10 @@ def _entry(self, i, j):\n     def _eval_determinant(self):\n         return S.One\n \n+    def _eval_sum_all_elements(self):\n+        \"\"\"Returns the sum of all elements of the identity matrix.\"\"\"\n+        return self.rows\n+\n \n class ZeroMatrix(MatrixExpr):\n     \"\"\"The Matrix Zero 0 - additive identity\n@@ -545,4 +549,4 @@ def matrix_symbols(expr):\n from .matadd import MatAdd\n from .matpow import MatPow\n from .transpose import Transpose\n-from .inverse import Inverse\n+from .inverse import Inverse\n\\ No newline at end of file\ndiff --git a/sympy/matrices/tests/test_matrices.py b/sympy/matrices/tests/test_matrices.py\nindex 33e1220722..e16ff117f6 100644\n--- a/sympy/matrices/tests/test_matrices.py\n+++ b/sympy/matrices/tests/test_matrices.py\n@@ -109,6 +109,16 @@ def test_fancy_index_matrix():\n         [0, 4, 0, 4]])\n \n \n+def test_identity_sum():\n+    from sympy import Identity, Symbol, Sum\n+    n = Symbol('n', integer=True, positive=True)\n+    i, j = symbols('i j', integer=True)\n+    I = Identity(n)\n+    # Test sum of all elements\n+    assert Sum(Sum(I[i,j], (i, 0, n-1)), (j, 0, n-1)).doit() == n\n+    # Test specific size\n+    assert Sum(Sum(Identity(3)[i,j], (i, 0, 2)), (j, 0, 2)).doit() == 3\n+\n def test_multiplication():\n     a = Matrix((\n         (1, 2),\n@@ -2882,4 +2892,4 @@ def test_as_real_imag():\n     for kls in classes:\n         a,b = kls(m3).as_real_imag()\n         assert list(a) == list(m1)\n-        assert list(b) == list(m1)\n+        assert list(b) == list(m1)\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}