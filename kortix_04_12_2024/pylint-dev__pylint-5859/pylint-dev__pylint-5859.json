{
  "instance_id": "pylint-dev__pylint-5859",
  "model_patch": "diff --git a/pylint/checkers/misc.py b/pylint/checkers/misc.py\nindex 69149e61a..a8da49a6e 100644\n--- a/pylint/checkers/misc.py\n+++ b/pylint/checkers/misc.py\n@@ -121,9 +121,9 @@ class EncodingChecker(BaseChecker):\n \n         notes = \"|\".join(re.escape(note) for note in self.config.notes)\n         if self.config.notes_rgx:\n-            regex_string = rf\"#\\s*({notes}|{self.config.notes_rgx})\\b\"\n+            regex_string = rf\"#\\s*({notes}|{self.config.notes_rgx})\"\n         else:\n-            regex_string = rf\"#\\s*({notes})\\b\"\n+            regex_string = rf\"#\\s*({notes})\"\n \n         self._fixme_pattern = re.compile(regex_string, re.I)\n \n@@ -200,4 +200,4 @@ class EncodingChecker(BaseChecker):\n \n def register(linter: \"PyLinter\") -> None:\n     linter.register_checker(EncodingChecker(linter))\n-    linter.register_checker(ByIdManagedMessagesChecker(linter))\n+    linter.register_checker(ByIdManagedMessagesChecker(linter))\n\\ No newline at end of file\ndiff --git a/tests/functional/f/fixme.py b/tests/functional/f/fixme.py\nindex 081d508f4..40931272b 100644\n--- a/tests/functional/f/fixme.py\n+++ b/tests/functional/f/fixme.py\n@@ -31,3 +31,7 @@ def function():\n     #TODO: in fact nothing to do #pylint: disable=fixme\n     #TODO: in fact nothing to do #pylint: disable=line-too-long, fixme\n     # Todoist API mentioned should not result in a message.\n+    # ???: punctuation only tag\n+    # $$$: another punctuation tag\n+    # ???: punctuation only tag\n+    # $$$: another punctuation tag\n\\ No newline at end of file\ndiff --git a/tests/functional/f/fixme.txt b/tests/functional/f/fixme.txt\nindex 53b668020..1cfc489d6 100644\n--- a/tests/functional/f/fixme.txt\n+++ b/tests/functional/f/fixme.txt\n@@ -7,3 +7,7 @@ fixme:20:5:None:None::\"todo: no space after hash\":UNDEFINED\n fixme:23:2:None:None::\"FIXME: this is broken\":UNDEFINED\n fixme:25:5:None:None::\"./TODO: find with notes\":UNDEFINED\n fixme:27:5:None:None::\"TO make something DO: find with regex\":UNDEFINED\n+fixme:29:5:None:None::\"???: punctuation only tag\":UNDEFINED\n+fixme:30:5:None:None::\"$$$: another punctuation tag\":UNDEFINED\n+fixme:31:5:None:None::\"???: punctuation only tag\":UNDEFINED\n+fixme:32:5:None:None::\"$$$: another punctuation tag\":UNDEFINED\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}