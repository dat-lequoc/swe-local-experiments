diff --git a/sklearn/pipeline.py b/sklearn/pipeline.py
index 7eaf9a46f..97a289f90 100644
--- a/sklearn/pipeline.py
+++ b/sklearn/pipeline.py
@@ -160,6 +160,9 @@ class Pipeline(_BaseComposition):
         return self
 
     def _validate_steps(self):
+        if not self.steps:
+            return
+            
         names, estimators = zip(*self.steps)
 
         # validate names
@@ -228,6 +231,10 @@ class Pipeline(_BaseComposition):
         # Use Bunch object to improve autocomplete
         return Bunch(**dict(self.steps))
 
+    def __len__(self):
+        """Returns the length of the Pipeline - the number of steps."""
+        return len(self.steps)
+
     @property
     def _final_estimator(self):
         estimator = self.steps[-1][1]
@@ -928,4 +935,4 @@ def make_union(*transformers, **kwargs):
         # change its type spec in make_union
         raise TypeError('Unknown keyword arguments: "{}"'
                         .format(list(kwargs.keys())[0]))
-    return FeatureUnion(_name_estimators(transformers), n_jobs=n_jobs)
+    return FeatureUnion(_name_estimators(transformers), n_jobs=n_jobs)
\ No newline at end of file
diff --git a/sklearn/tests/test_pipeline.py b/sklearn/tests/test_pipeline.py
index 8d6fe8f70..1764e2186 100644
--- a/sklearn/tests/test_pipeline.py
+++ b/sklearn/tests/test_pipeline.py
@@ -154,6 +154,20 @@ class DummyEstimatorParams(BaseEstimator):
         return self
 
 
+def test_pipeline_len():
+    # Test pipeline length
+    pipe = Pipeline([])
+    assert_equal(len(pipe), 0)
+    
+    pipe = Pipeline([('name', None)])
+    assert_equal(len(pipe), 1)
+    
+    pipe = Pipeline([('t1', Transf()), ('t2', None), ('t3', Transf())])
+    assert_equal(len(pipe), 3)
+    
+    pipe = Pipeline([('t1', 'passthrough'), ('t2', Transf())])
+    assert_equal(len(pipe), 2)
+
 def test_pipeline_init():
     # Test the various init parameters of the pipeline.
     assert_raises(TypeError, Pipeline)
@@ -1070,4 +1084,4 @@ def test_make_pipeline_memory():
     pipeline = make_pipeline(DummyTransf(), SVC())
     assert pipeline.memory is None
 
-    shutil.rmtree(cachedir)
+    shutil.rmtree(cachedir)
\ No newline at end of file
