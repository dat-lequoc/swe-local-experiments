diff --git a/sklearn/linear_model/logistic.py b/sklearn/linear_model/logistic.py
index 1999f1dae..93aae7cce 100644
--- a/sklearn/linear_model/logistic.py
+++ b/sklearn/linear_model/logistic.py
@@ -2174,7 +2174,7 @@ class LogisticRegressionCV(LogisticRegression, BaseEstimator,
                     w = np.mean([coefs_paths[i, best_indices[i], :]
                                  for i in range(len(folds))], axis=0)
                 else:
-                    w = np.mean([coefs_paths[:, i, best_indices[i], :]
+                    w = np.mean([coefs_paths[i, :, best_indices[i], :]
                                  for i in range(len(folds))], axis=0)
 
                 best_indices_C = best_indices % len(self.Cs_)
@@ -2243,4 +2243,4 @@ class LogisticRegressionCV(LogisticRegression, BaseEstimator,
         if isinstance(scoring, str):
             scoring = get_scorer(scoring)
 
-        return scoring(self, X, y, sample_weight=sample_weight)
+        return scoring(self, X, y, sample_weight=sample_weight)
\ No newline at end of file
diff --git a/sklearn/linear_model/tests/test_logistic.py b/sklearn/linear_model/tests/test_logistic.py
index 6ad9a4ec9..61651d4cf 100644
--- a/sklearn/linear_model/tests/test_logistic.py
+++ b/sklearn/linear_model/tests/test_logistic.py
@@ -594,6 +594,16 @@ def test_multinomial_logistic_regression_string_inputs():
     assert_equal(sorted(np.unique(lr_cv_str.predict(X_ref))), ['bar', 'baz'])
 
 
+def test_logistic_cv_refit_false_multinomial():
+    # Test that LogisticRegressionCV works correctly with refit=False
+    X, y = make_classification(n_samples=100, n_features=3,
+                               n_classes=3, n_informative=3, random_state=0)
+    clf = LogisticRegressionCV(cv=5, solver='saga', multi_class='multinomial',
+                               tol=1e-2, refit=False, random_state=0)
+    clf.fit(X, y)
+    assert_equal(clf.coef_.shape[0], 3)  # 3 classes
+    assert_equal(clf.coef_.shape[1], 3)  # 3 features
+
 def test_logistic_cv_sparse():
     X, y = make_classification(n_samples=50, n_features=5,
                                random_state=0)
@@ -1737,4 +1747,4 @@ def test_penalty_none(solver):
         "penalty='none' is not useful and not supported by "
         "LogisticRegressionCV",
         lr.fit, X, y
-    )
+    )
\ No newline at end of file
