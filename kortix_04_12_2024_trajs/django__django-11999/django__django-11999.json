{
  "instance_id": "django__django-11999",
  "model_patch": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex ee45bb941e..5e45ef8c46 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -763,8 +763,11 @@ class Field(RegisterLookupMixin):\n             if not getattr(cls, self.attname, None):\n                 setattr(cls, self.attname, self.descriptor_class(self))\n         if self.choices is not None:\n-            setattr(cls, 'get_%s_display' % self.name,\n-                    partialmethod(cls._get_FIELD_display, field=self))\n+            display_method_name = 'get_%s_display' % self.name\n+            # Only add the display method if it's not already defined\n+            if not hasattr(cls, display_method_name):\n+                setattr(cls, display_method_name,\n+                        partialmethod(cls._get_FIELD_display, field=self))\n \n     def get_filter_kwargs_for_object(self, obj):\n         \"\"\"\n@@ -2418,4 +2421,4 @@ class SmallAutoField(AutoFieldMixin, SmallIntegerField):\n         return 'SmallAutoField'\n \n     def rel_db_type(self, connection):\n-        return SmallIntegerField().db_type(connection=connection)\n+        return SmallIntegerField().db_type(connection=connection)\n\\ No newline at end of file\ndiff --git a/tests/model_fields/tests.py b/tests/model_fields/tests.py\nindex 0d6e930b06..57ada3f461 100644\n--- a/tests/model_fields/tests.py\n+++ b/tests/model_fields/tests.py\n@@ -162,6 +162,20 @@ class GetFieldDisplayTests(SimpleTestCase):\n         self.assertEqual(Whiz(c='').get_c_display(), '')        # Empty value\n         self.assertEqual(WhizDelayed(c=0).get_c_display(), 'Other')  # Delayed choices\n \n+    def test_custom_display_method(self):\n+        \"\"\"\n+        Custom display methods can override the default get_FOO_display() method.\n+        \"\"\"\n+        class CustomDisplayModel(models.Model):\n+            field = models.CharField(choices=[('a', 'A'), ('b', 'B')])\n+            def get_field_display(self):\n+                return 'Custom Display'\n+            class Meta:\n+                app_label = 'model_fields'\n+        \n+        obj = CustomDisplayModel(field='a')\n+        self.assertEqual(obj.get_field_display(), 'Custom Display')\n+\n     def test_get_FIELD_display_translated(self):\n         \"\"\"A translated display value is coerced to str.\"\"\"\n         val = Whiz(c=5).get_c_display()\n@@ -299,4 +313,4 @@ class GetChoicesLimitChoicesToTests(TestCase):\n         self.assertChoicesEqual(\n             field.get_choices(include_blank=False, limit_choices_to={}),\n             [self.bar1, self.bar2],\n-        )\n+        )\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}