diff --git a/lib/mpl_toolkits/mplot3d/axes3d.py b/lib/mpl_toolkits/mplot3d/axes3d.py
index 9db44b7994..015f43fad2 100644
--- a/lib/mpl_toolkits/mplot3d/axes3d.py
+++ b/lib/mpl_toolkits/mplot3d/axes3d.py
@@ -387,6 +387,8 @@ class Axes3D(Axes):
 
     @martist.allow_rasterization
     def draw(self, renderer):
+        if not self.get_visible():
+            return
         self._unstale_viewLim()
 
         # draw the background patch
@@ -3245,4 +3247,4 @@ def get_test_data(delta=0.05):
     X = X * 10
     Y = Y * 10
     Z = Z * 500
-    return X, Y, Z
+    return X, Y, Z
\ No newline at end of file
diff --git a/lib/mpl_toolkits/tests/test_mplot3d.py b/lib/mpl_toolkits/tests/test_mplot3d.py
index 966eb50b21..49281396cb 100644
--- a/lib/mpl_toolkits/tests/test_mplot3d.py
+++ b/lib/mpl_toolkits/tests/test_mplot3d.py
@@ -40,6 +40,16 @@ def test_bar3d():
         ax.bar(xs, ys, zs=z, zdir='y', align='edge', color=cs, alpha=0.8)
 
 
+def test_visibility_3d():
+    """Test that set_visible works correctly for 3D axes."""
+    fig = plt.figure()
+    ax1, ax2 = fig.subplots(1, 2, subplot_kw={'projection': '3d'})
+    ax1.scatter([1], [1], [1])
+    ax2.scatter([1], [1], [1])
+    ax1.set_visible(False)
+    assert not ax1.get_visible()
+    assert ax2.get_visible()
+    
 def test_bar3d_colors():
     fig = plt.figure()
     ax = fig.add_subplot(projection='3d')
@@ -1735,4 +1745,4 @@ def test_view_init_vertical_axis(
         # Assert ticks are correctly aligned:
         tickdir_expected = tickdirs_expected[i]
         tickdir_actual = axis._get_tickdir()
-        np.testing.assert_array_equal(tickdir_expected, tickdir_actual)
+        np.testing.assert_array_equal(tickdir_expected, tickdir_actual)
\ No newline at end of file
