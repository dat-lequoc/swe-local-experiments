diff --git a/sympy/parsing/latex/_parse_latex_antlr.py b/sympy/parsing/latex/_parse_latex_antlr.py
index 2e4a45ad20..f2594faad3 100644
--- a/sympy/parsing/latex/_parse_latex_antlr.py
+++ b/sympy/parsing/latex/_parse_latex_antlr.py
@@ -382,6 +382,9 @@ def convert_frac(frac):
 
     expr_top = convert_expr(frac.upper)
     expr_bot = convert_expr(frac.lower)
+    # Create an explicit group for the denominator to preserve nested fractions
+    if isinstance(expr_bot, sympy.Mul) or isinstance(expr_bot, sympy.Add):
+        expr_bot = sympy.Mul(expr_bot, 1, evaluate=False)
     inverse_denom = sympy.Pow(expr_bot, -1, evaluate=False)
     if expr_top == 1:
         return inverse_denom
@@ -591,4 +594,4 @@ def get_differential_var_str(text):
     text = text[idx:]
     if text[0] == "\\":
         text = text[1:]
-    return text
+    return text
\ No newline at end of file
diff --git a/sympy/parsing/tests/test_latex.py b/sympy/parsing/tests/test_latex.py
index f5c61cde13..ced1cf6146 100644
--- a/sympy/parsing/tests/test_latex.py
+++ b/sympy/parsing/tests/test_latex.py
@@ -243,6 +243,7 @@ def test_import():
     (r"\log_2 x", _log(x, 2)),
     (r"\log_a x", _log(x, a)),
     (r"5^0 - 4^0", _Add(_Pow(5, 0), _Mul(-1, _Pow(4, 0)))),
+    (r"\frac{\frac{a^3+b}{c}}{\frac{1}{c^2}}", _Mul(_Mul(_Add(_Pow(a, 3), b), _Pow(c, -1)), _Pow(_Mul(1, _Pow(c, -2)), -1))),
 ]
 
 
@@ -318,4 +319,4 @@ def test_failing_not_parseable():
     from sympy.parsing.latex import parse_latex, LaTeXParsingError
     for latex_str in FAILING_BAD_STRINGS:
         with raises(LaTeXParsingError):
-            parse_latex(latex_str)
+            parse_latex(latex_str)
\ No newline at end of file
