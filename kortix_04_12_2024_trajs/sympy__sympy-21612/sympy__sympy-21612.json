{
  "instance_id": "sympy__sympy-21612",
  "model_patch": "diff --git a/sympy/parsing/latex/_parse_latex_antlr.py b/sympy/parsing/latex/_parse_latex_antlr.py\nindex 2e4a45ad20..f2594faad3 100644\n--- a/sympy/parsing/latex/_parse_latex_antlr.py\n+++ b/sympy/parsing/latex/_parse_latex_antlr.py\n@@ -382,6 +382,9 @@ def convert_frac(frac):\n \n     expr_top = convert_expr(frac.upper)\n     expr_bot = convert_expr(frac.lower)\n+    # Create an explicit group for the denominator to preserve nested fractions\n+    if isinstance(expr_bot, sympy.Mul) or isinstance(expr_bot, sympy.Add):\n+        expr_bot = sympy.Mul(expr_bot, 1, evaluate=False)\n     inverse_denom = sympy.Pow(expr_bot, -1, evaluate=False)\n     if expr_top == 1:\n         return inverse_denom\n@@ -591,4 +594,4 @@ def get_differential_var_str(text):\n     text = text[idx:]\n     if text[0] == \"\\\\\":\n         text = text[1:]\n-    return text\n+    return text\n\\ No newline at end of file\ndiff --git a/sympy/parsing/tests/test_latex.py b/sympy/parsing/tests/test_latex.py\nindex f5c61cde13..ced1cf6146 100644\n--- a/sympy/parsing/tests/test_latex.py\n+++ b/sympy/parsing/tests/test_latex.py\n@@ -243,6 +243,7 @@ def test_import():\n     (r\"\\log_2 x\", _log(x, 2)),\n     (r\"\\log_a x\", _log(x, a)),\n     (r\"5^0 - 4^0\", _Add(_Pow(5, 0), _Mul(-1, _Pow(4, 0)))),\n+    (r\"\\frac{\\frac{a^3+b}{c}}{\\frac{1}{c^2}}\", _Mul(_Mul(_Add(_Pow(a, 3), b), _Pow(c, -1)), _Pow(_Mul(1, _Pow(c, -2)), -1))),\n ]\n \n \n@@ -318,4 +319,4 @@ def test_failing_not_parseable():\n     from sympy.parsing.latex import parse_latex, LaTeXParsingError\n     for latex_str in FAILING_BAD_STRINGS:\n         with raises(LaTeXParsingError):\n-            parse_latex(latex_str)\n+            parse_latex(latex_str)\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}