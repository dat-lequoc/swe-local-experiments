{
  "instance_id": "scikit-learn__scikit-learn-14983",
  "model_patch": "diff --git a/sklearn/model_selection/_split.py b/sklearn/model_selection/_split.py\nindex c49a3ce6a..5b849c359 100644\n--- a/sklearn/model_selection/_split.py\n+++ b/sklearn/model_selection/_split.py\n@@ -1087,6 +1087,8 @@ class _RepeatedSplits(metaclass=ABCMeta):\n         Constructor parameters for cv. Must not contain random_state\n         and shuffle.\n     \"\"\"\n+    def __repr__(self):\n+        return _build_repr(self)\n     def __init__(self, cv, n_repeats=10, random_state=None, **cvargs):\n         if not isinstance(n_repeats, numbers.Integral):\n             raise ValueError(\"Number of repetitions must be of Integral type.\")\n@@ -2165,4 +2167,4 @@ def _build_repr(self):\n             warnings.filters.pop(0)\n         params[key] = value\n \n-    return '%s(%s)' % (class_name, _pprint(params, offset=len(class_name)))\n+    return '%s(%s)' % (class_name, _pprint(params, offset=len(class_name)))\n\\ No newline at end of file\ndiff --git a/sklearn/model_selection/tests/test_split.py b/sklearn/model_selection/tests/test_split.py\nindex a38fb435c..67208cc50 100644\n--- a/sklearn/model_selection/tests/test_split.py\n+++ b/sklearn/model_selection/tests/test_split.py\n@@ -573,6 +573,18 @@ def test_kfold_can_detect_dependent_samples_on_digits():  # see #2372\n     assert mean_score > 0.80\n \n \n+def test_repeated_cv_repr():\n+    # Test that repr works for repeated cross validators\n+    n_splits = 5\n+    n_repeats = 3\n+    random_state = 42\n+    rkf = RepeatedKFold(n_splits=n_splits, n_repeats=n_repeats, random_state=random_state)\n+    rskf = RepeatedStratifiedKFold(n_splits=n_splits, n_repeats=n_repeats, random_state=random_state)\n+    \n+    # Check the repr strings\n+    assert repr(rkf) == f'RepeatedKFold(n_splits={n_splits}, n_repeats={n_repeats}, random_state={random_state})'\n+    assert repr(rskf) == f'RepeatedStratifiedKFold(n_splits={n_splits}, n_repeats={n_repeats}, random_state={random_state})'\n+\n def test_shuffle_split():\n     ss1 = ShuffleSplit(test_size=0.2, random_state=0).split(X)\n     ss2 = ShuffleSplit(test_size=2, random_state=0).split(X)\n@@ -1570,4 +1582,4 @@ def test_leave_p_out_empty_trainset():\n     with pytest.raises(\n             ValueError,\n             match='p=2 must be strictly less than the number of samples=2'):\n-        next(cv.split(X, y, groups=[1, 2]))\n+        next(cv.split(X, y, groups=[1, 2]))\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}