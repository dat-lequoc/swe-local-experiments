diff --git a/django/contrib/admin/helpers.py b/django/contrib/admin/helpers.py
index dd154f72ee..445b640769 100644
--- a/django/contrib/admin/helpers.py
+++ b/django/contrib/admin/helpers.py
@@ -209,7 +209,11 @@ class AdminReadonlyField:
             remote_field.model._meta.model_name,
         )
         try:
-            url = reverse(url_name, args=[quote(remote_obj.pk)])
+            url = reverse(
+                url_name,
+                args=[quote(remote_obj.pk)],
+                current_app=self.model_admin.admin_site.name if self.model_admin else None
+            )
             return format_html('<a href="{}">{}</a>', url, remote_obj)
         except NoReverseMatch:
             return str(remote_obj)
@@ -438,4 +442,4 @@ class AdminErrorList(forms.utils.ErrorList):
             for inline_formset in inline_formsets:
                 self.extend(inline_formset.non_form_errors())
                 for errors_in_inline_form in inline_formset.errors:
-                    self.extend(errors_in_inline_form.values())
+                    self.extend(errors_in_inline_form.values())
\ No newline at end of file
diff --git a/tests/admin_views/test_readonly.py b/tests/admin_views/test_readonly.py
new file mode 100644
index 0000000000..9ebc3cc1dc
--- /dev/null
+++ b/tests/admin_views/test_readonly.py
@@ -0,0 +1,106 @@
+from django.contrib import admin
+from django.test import TestCase, RequestFactory, override_settings
+from django.urls import reverse, path, include
+from django.contrib.auth.models import User
+from django.test.client import Client
+
+from .models import Article, Section
+from .admin import ArticleAdmin, site as custom_site
+
+urlpatterns = [
+    path('custom_admin/', custom_site.urls),
+]
+
+class CustomAdminSiteReadOnlyTest(TestCase):
+    @classmethod
+    def setUpTestData(cls):
+        cls.section = Section.objects.create(name='Test section')
+        cls.article = Article.objects.create(
+            content='<p>Content</p>',
+            date='2023-01-01',
+            section=cls.section,
+            title='Test Article'
+        )
+        
+    @classmethod
+    def setUpTestData(cls):
+        cls.superuser = User.objects.create_superuser(
+            username='super',
+            password='secret',
+            email='super@example.com'
+        )
+
+    def setUp(self):
+        self.factory = RequestFactory()
+        self.custom_admin = custom_site
+        self.custom_admin.name = 'custom_admin'
+        self.custom_admin._registry[Article] = ArticleAdmin(Article, self.custom_admin)
+        self.client = Client()
+        self.client.force_login(self.superuser)</old_string>
+</replacement>
+<replacement>
+<old_string>    def test_readonly_foreign_key_url(self):
+        """
+        Test that readonly foreign key fields generate correct URLs in custom admin sites.
+        """
+        # Create a custom ArticleAdmin with section as readonly
+        class CustomArticleAdmin(ArticleAdmin):
+            readonly_fields = ('section',)
+        
+        # Register with custom admin site
+        self.custom_admin._registry[Article] = CustomArticleAdmin(Article, self.custom_admin)
+        
+        # Get the change form URL
+        url = reverse('custom_admin:admin_views_article_change', 
+                     args=[self.article.pk])
+        
+        # Create superuser and log in
+        superuser = self._create_superuser('super', 'secret', 'super@example.com')
+        self.client.force_login(superuser)
+        
+        # Get the change form
+        response = self.client.get(url)
+        
+        # Check that the response contains the correct admin URL
+        expected_url = reverse('custom_admin:admin_views_section_change',
+                             args=[self.section.pk])
+        self.assertContains(response, expected_url)
+        self.assertNotContains(response, 
+                             reverse('admin:admin_views_section_change',
+                                   args=[self.section.pk]))</old_string>
+<new_string>    @override_settings(ROOT_URLCONF=__name__)
+    @override_settings(ROOT_URLCONF=__name__)
+    def test_readonly_foreign_key_url(self):
+        """
+        Test that readonly foreign key fields generate correct URLs in custom admin sites.
+        """
+        # Create test data
+        section = Section.objects.create(name='Test section')
+        article = Article.objects.create(
+            content='<p>Content</p>',
+            date='2023-01-01',
+            section=section,
+            title='Test Article'
+        )
+
+        # Create a custom ArticleAdmin with section as readonly
+        class CustomArticleAdmin(ArticleAdmin):
+            readonly_fields = ('section',)
+        
+        # Register with custom admin site
+        self.custom_admin._registry[Article] = CustomArticleAdmin(Article, self.custom_admin)
+        
+        # Get the change form URL
+        url = reverse('custom_admin:admin_views_article_change', 
+                     args=[article.pk])
+        
+        # Get the change form
+        response = self.client.get(url)
+        
+        # Check that the response contains the correct admin URL
+        expected_url = reverse('custom_admin:admin_views_section_change',
+                             args=[section.pk])
+        self.assertContains(response, expected_url)
+        self.assertNotContains(response, 
+                             reverse('admin:admin_views_section_change',
+                                   args=[section.pk]))
\ No newline at end of file
