{
  "instance_id": "django__django-14915",
  "model_patch": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 5dcf923c12..55b3c81c4b 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -1171,6 +1171,9 @@ class ModelChoiceIteratorValue:\n             other = other.value\n         return self.value == other\n \n+    def __hash__(self):\n+        return hash(self.value)\n+\n \n class ModelChoiceIterator:\n     def __init__(self, field):\n@@ -1421,4 +1424,4 @@ def modelform_defines_fields(form_class):\n     return hasattr(form_class, '_meta') and (\n         form_class._meta.fields is not None or\n         form_class._meta.exclude is not None\n-    )\n+    )\n\\ No newline at end of file\ndiff --git a/tests/forms_tests/tests/test_models.py b/tests/forms_tests/tests/test_models.py\nnew file mode 100644\nindex 0000000000..828031b501\n--- /dev/null\n+++ b/tests/forms_tests/tests/test_models.py\n@@ -0,0 +1,17 @@\n+from django.test import SimpleTestCase\n+from django.forms.models import ModelChoiceIteratorValue\n+\n+class ModelChoiceIteratorValueTests(SimpleTestCase):\n+    def test_hashable(self):\n+        # Test with primitive value\n+        value = ModelChoiceIteratorValue(1, None)\n+        d = {value: 'test'}\n+        self.assertEqual(d[value], 'test')\n+        \n+        # Test with equal values\n+        value2 = ModelChoiceIteratorValue(1, None)\n+        self.assertEqual(d[value2], 'test')\n+        \n+        # Test hash consistency with equality\n+        self.assertEqual(hash(value), hash(value2))\n+        self.assertEqual(value, value2)\n",
  "model_name_or_path": "KortixAI"
}