{
  "instance_id": "sympy__sympy-14396",
  "model_patch": "diff --git a/sympy/polys/polyoptions.py b/sympy/polys/polyoptions.py\nindex 6e504a3057..4ee1da8d6d 100644\n--- a/sympy/polys/polyoptions.py\n+++ b/sympy/polys/polyoptions.py\n@@ -405,7 +405,7 @@ class Domain(with_metaclass(OptionType, Option)):\n     _re_realfield = re.compile(r\"^(R|RR)(_(\\d+))?$\")\n     _re_complexfield = re.compile(r\"^(C|CC)(_(\\d+))?$\")\n     _re_finitefield = re.compile(r\"^(FF|GF)\\((\\d+)\\)$\")\n-    _re_polynomial = re.compile(r\"^(Z|ZZ|Q|QQ)\\[(.+)\\]$\")\n+    _re_polynomial = re.compile(r\"^(Z|ZZ|Q|QQ|R|RR)\\[(.+)\\]$\")\n     _re_fraction = re.compile(r\"^(Z|ZZ|Q|QQ)\\((.+)\\)$\")\n     _re_algebraic = re.compile(r\"^(Q|QQ)\\<(.+)\\>$\")\n \n@@ -459,6 +459,8 @@ def preprocess(cls, domain):\n \n                 if ground in ['Z', 'ZZ']:\n                     return sympy.polys.domains.ZZ.poly_ring(*gens)\n+                elif ground in ['R', 'RR']:\n+                    return sympy.polys.domains.RR.poly_ring(*gens)\n                 else:\n                     return sympy.polys.domains.QQ.poly_ring(*gens)\n \n@@ -480,7 +482,7 @@ def preprocess(cls, domain):\n                 gens = list(map(sympify, r.groups()[1].split(',')))\n                 return sympy.polys.domains.QQ.algebraic_field(*gens)\n \n-        raise OptionError('expected a valid domain specification, got %s' % domain)\n+        raise OptionError(\"expected a valid domain specification (e.g. ZZ, QQ, RR, ZZ[x], QQ[x], RR[x]), got %s\" % domain)\n \n     @classmethod\n     def postprocess(cls, options):\n@@ -772,4 +774,4 @@ def set_defaults(options, **defaults):\n \n     return options\n \n-Options._init_dependencies_order()\n+Options._init_dependencies_order()\n\\ No newline at end of file\ndiff --git a/sympy/polys/tests/test_polyoptions.py b/sympy/polys/tests/test_polyoptions.py\nindex cbc9681747..8e4d466999 100644\n--- a/sympy/polys/tests/test_polyoptions.py\n+++ b/sympy/polys/tests/test_polyoptions.py\n@@ -156,6 +156,9 @@ def test_Greedy_postprocess():\n \n def test_Domain_preprocess():\n     assert Domain.preprocess(ZZ) == ZZ\n+    assert Domain.preprocess('RR[x]') == sympy.polys.domains.RR.poly_ring(x)\n+    assert Domain.preprocess('RR[x,y]') == sympy.polys.domains.RR.poly_ring(x,y)\n+    assert Domain.preprocess('RR[x,y,z]') == sympy.polys.domains.RR.poly_ring(x,y,z)\n     assert Domain.preprocess(QQ) == QQ\n     assert Domain.preprocess(EX) == EX\n     assert Domain.preprocess(FF(2)) == FF(2)\n@@ -473,4 +476,4 @@ def test_Method_postprocess():\n     opt = {'method': 'f5b'}\n     Method.postprocess(opt)\n \n-    assert opt == {'method': 'f5b'}\n+    assert opt == {'method': 'f5b'}\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}