{
  "instance_id": "matplotlib__matplotlib-23913",
  "model_patch": "diff --git a/lib/matplotlib/legend.py b/lib/matplotlib/legend.py\nindex 9e5b903d59..ab34409171 100644\n--- a/lib/matplotlib/legend.py\n+++ b/lib/matplotlib/legend.py\n@@ -314,6 +314,7 @@ class Legend(Artist):\n         prop=None,           # properties for the legend texts\n         fontsize=None,       # keyword to set font size directly\n         labelcolor=None,     # keyword to set the text color\n+        draggable=False,     # whether the legend can be dragged\n \n         # spacing & pad defined as a fraction of the font-size\n         borderpad=None,      # whitespace inside the legend border\n@@ -538,6 +539,8 @@ class Legend(Artist):\n \n         self.set_title(title, prop=title_prop_fp)\n         self._draggable = None\n+        if draggable:\n+            self.set_draggable(True)\n \n         # set the text color\n \n@@ -1258,4 +1261,4 @@ def _parse_legend_args(axs, *args, handles=None, labels=None, **kwargs):\n     else:\n         raise TypeError('Invalid arguments to legend.')\n \n-    return handles, labels, extra_args, kwargs\n+    return handles, labels, extra_args, kwargs\n\\ No newline at end of file\ndiff --git a/lib/matplotlib/tests/test_legend.py b/lib/matplotlib/tests/test_legend.py\nindex 16847e0be6..2e6a0a3933 100644\n--- a/lib/matplotlib/tests/test_legend.py\n+++ b/lib/matplotlib/tests/test_legend.py\n@@ -782,6 +782,16 @@ def test_get_set_draggable():\n     legend.set_draggable(False)\n     assert not legend.get_draggable()\n \n+def test_draggable_parameter():\n+    # Test draggable parameter in legend creation\n+    fig, ax = plt.subplots()\n+    ax.plot([1, 2, 3], label='test')\n+    legend = ax.legend(draggable=True)\n+    assert legend.get_draggable()\n+    \n+    legend2 = ax.legend(draggable=False)\n+    assert not legend2.get_draggable()\n+\n \n def test_alpha_handles():\n     x, n, hh = plt.hist([1, 2, 3], alpha=0.25, label='data', color='red')\n@@ -961,4 +971,4 @@ def test_ncol_ncols(fig_test, fig_ref):\n     strings = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]\n     ncols = 3\n     fig_test.legend(strings, ncol=ncols)\n-    fig_ref.legend(strings, ncols=ncols)\n+    fig_ref.legend(strings, ncols=ncols)\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}