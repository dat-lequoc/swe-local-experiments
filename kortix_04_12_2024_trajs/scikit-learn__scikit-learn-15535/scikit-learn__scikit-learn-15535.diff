diff --git a/sklearn/metrics/cluster/_supervised.py b/sklearn/metrics/cluster/_supervised.py
index 4bddae35c..86d1fb8f8 100644
--- a/sklearn/metrics/cluster/_supervised.py
+++ b/sklearn/metrics/cluster/_supervised.py
@@ -43,10 +43,10 @@ def check_clusterings(labels_true, labels_pred):
         The predicted labels.
     """
     labels_true = check_array(
-        labels_true, ensure_2d=False, ensure_min_samples=0
+        labels_true, ensure_2d=False, ensure_min_samples=0, dtype=None
     )
     labels_pred = check_array(
-        labels_pred, ensure_2d=False, ensure_min_samples=0
+        labels_pred, ensure_2d=False, ensure_min_samples=0, dtype=None
     )
 
     # input checks
@@ -966,4 +966,4 @@ def entropy(labels):
     pi_sum = np.sum(pi)
     # log(a / b) should be calculated as log(a) - log(b) for
     # possible loss of precision
-    return -np.sum((pi / pi_sum) * (np.log(pi) - log(pi_sum)))
+    return -np.sum((pi / pi_sum) * (np.log(pi) - log(pi_sum)))
\ No newline at end of file
diff --git a/sklearn/metrics/cluster/tests/test_supervised.py b/sklearn/metrics/cluster/tests/test_supervised.py
index d2d2dd6fa..7988777fc 100644
--- a/sklearn/metrics/cluster/tests/test_supervised.py
+++ b/sklearn/metrics/cluster/tests/test_supervised.py
@@ -256,6 +256,23 @@ def test_contingency_matrix():
     assert_array_almost_equal(C, C2 + .1)
 
 
+def test_mutual_info_score_string_labels():
+    # Test mutual_info_score with string labels, including object arrays
+    x = np.array(['a', 'b', 'a', 'c', 'b', 'c']).astype(object)
+    y = np.array(['a', 'b', 'a', 'c', 'b', 'c']).astype(object)
+    assert_almost_equal(mutual_info_score(x, y), 1.0)
+    
+    # Test with regular string arrays
+    x2 = np.array(['a', 'b', 'a', 'c', 'b', 'c'])
+    y2 = np.array(['a', 'b', 'a', 'c', 'b', 'c'])
+    assert_almost_equal(mutual_info_score(x2, y2), 1.0)
+    
+    # Test with mixed labels
+    x3 = np.array(['a', 'b', 'a', 'c', 'b', 'c'])
+    y3 = np.array([1, 2, 1, 3, 2, 3])
+    score = mutual_info_score(x3, y3)
+    assert_almost_equal(score, 1.0)
+
 def test_contingency_matrix_sparse():
     labels_a = np.array([1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3])
     labels_b = np.array([1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 3, 1, 3, 3, 3, 2, 2])
@@ -336,4 +353,4 @@ def test_fowlkes_mallows_score_properties():
 
     # symmetric and permutation(both together)
     score_both = fowlkes_mallows_score(labels_b, (labels_a + 2) % 3)
-    assert_almost_equal(score_both, expected)
+    assert_almost_equal(score_both, expected)
\ No newline at end of file
