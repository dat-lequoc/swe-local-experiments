{
  "instance_id": "scikit-learn__scikit-learn-14894",
  "model_patch": "diff --git a/sklearn/svm/tests/test_sparse.py b/sklearn/svm/tests/test_sparse.py\nindex 7cf6e8af2..5625f953f 100644\n--- a/sklearn/svm/tests/test_sparse.py\n+++ b/sklearn/svm/tests/test_sparse.py\n@@ -360,3 +360,20 @@ def test_consistent_proba():\n     with ignore_warnings(category=ConvergenceWarning):\n         proba_2 = a.fit(X, Y).predict_proba(X)\n     assert_array_almost_equal(proba_1, proba_2)\n+\n+def test_empty_support_vectors():\n+    # Test handling of empty support vectors in sparse case\n+    X = np.array([[0, 1, 0, 0],\n+                  [0, 0, 0, 1],\n+                  [0, 0, 1, 0],\n+                  [0, 0, 0, 1]])\n+    y = np.array([0.04, 0.04, 0.10, 0.16])\n+    X_sp = sparse.csr_matrix(X)\n+    \n+    # Configure SVR to potentially result in empty support vectors\n+    model = svm.SVR(C=316.227766017, kernel='linear', max_iter=15000)\n+    model.fit(X_sp, y)\n+    \n+    # Verify that dual_coef_ has correct shape and type\n+    assert sparse.issparse(model.dual_coef_)\n+    assert model.dual_coef_.shape[1] == X.shape[1]\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}