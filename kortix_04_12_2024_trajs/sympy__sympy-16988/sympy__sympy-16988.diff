diff --git a/sympy/sets/sets.py b/sympy/sets/sets.py
index 03cf57a30b..2499791348 100644
--- a/sympy/sets/sets.py
+++ b/sympy/sets/sets.py
@@ -1068,6 +1068,9 @@ def __new__(cls, *args, **kwargs):
         # flatten inputs to merge intersections and iterables
         args = _sympify(args)
 
+        # Remove duplicates while preserving order
+        args = list(dict.fromkeys(args))
+
         # Reduce sets using known rules
         if evaluate:
             args = list(cls._new_args_filter(args))
@@ -1262,6 +1265,9 @@ def __new__(cls, *args, **kwargs):
         # flatten inputs to merge intersections and iterables
         args = _sympify(args)
 
+        # Remove duplicates while preserving order
+        args = list(dict.fromkeys(args))
+
         # Reduce sets using known rules
         if evaluate:
             args = list(cls._new_args_filter(args))
@@ -2098,4 +2104,4 @@ def set_pow(x, y):
 
 def set_function(f, x):
     from sympy.sets.handlers.functions import _set_function
-    return _set_function(f, x)
+    return _set_function(f, x)
\ No newline at end of file
diff --git a/sympy/utilities/pytest.py b/sympy/utilities/pytest.py
index aa7db99d2f..0ed480e771 100644
--- a/sympy/utilities/pytest.py
+++ b/sympy/utilities/pytest.py
@@ -197,7 +197,11 @@ def warns(warningcls, **kwargs):
 
 
 else:
-    XFAIL = py.test.mark.xfail
+    try:
+        import pytest
+        XFAIL = pytest.mark.xfail
+    except ImportError:
+        XFAIL = None
     slow = py.test.mark.slow
 
     def SKIP(reason):
@@ -281,4 +285,4 @@ def ignore_warnings(warningcls):
     # Reissue any warnings that we aren't testing for
     for w in warnrec:
         if not issubclass(w.category, warningcls):
-            warnings.warn_explicit(w.message, w.category, w.filename, w.lineno)
+            warnings.warn_explicit(w.message, w.category, w.filename, w.lineno)
\ No newline at end of file
