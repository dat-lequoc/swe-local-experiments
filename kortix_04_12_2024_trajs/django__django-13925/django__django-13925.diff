diff --git a/django/db/models/base.py b/django/db/models/base.py
index 4038859cfa..ff54ddc93e 100644
--- a/django/db/models/base.py
+++ b/django/db/models/base.py
@@ -1299,6 +1299,12 @@ class Model(metaclass=ModelBase):
     def _check_default_pk(cls):
         if (
             cls._meta.pk.auto_created and
+            not cls._meta.abstract and
+            not any(
+                isinstance(field, OneToOneField) and field.parent_link
+                for field in cls._meta.local_fields
+            ) and
+            not cls._meta.parents and
             not settings.is_overridden('DEFAULT_AUTO_FIELD') and
             not cls._meta.app_config._is_default_auto_field_overridden
         ):
@@ -2136,4 +2142,4 @@ def model_unpickle(model_id):
     return model.__new__(model)
 
 
-model_unpickle.__safe_for_unpickle__ = True
+model_unpickle.__safe_for_unpickle__ = True
\ No newline at end of file
diff --git a/tests/model_inheritance/test_pk_inheritance.py b/tests/model_inheritance/test_pk_inheritance.py
new file mode 100644
index 0000000000..659a9e295a
--- /dev/null
+++ b/tests/model_inheritance/test_pk_inheritance.py
@@ -0,0 +1,27 @@
+from django.test import TestCase
+from django.test.utils import override_settings
+from django.core import checks
+
+from .models import Restaurant, ItalianRestaurant, ParkingLot, Place
+
+
+class PKInheritanceTests(TestCase):
+    def test_pk_inheritance_warning(self):
+        """
+        Test that models.W042 is not raised for models inheriting PKs.
+        """
+        with override_settings(DEFAULT_AUTO_FIELD=None):
+            # ItalianRestaurant inherits PK from Restaurant
+            errors = ItalianRestaurant.check()
+            w042_errors = [e for e in errors if e.id == 'models.W042']
+            self.assertEqual(len(w042_errors), 0)
+
+            # ParkingLot has explicit parent_link=True
+            errors = ParkingLot.check()
+            w042_errors = [e for e in errors if e.id == 'models.W042']
+            self.assertEqual(len(w042_errors), 0)
+
+            # Place should still get the warning as it creates its own PK
+            errors = Place.check()
+            w042_errors = [e for e in errors if e.id == 'models.W042']
+            self.assertEqual(len(w042_errors), 1)
