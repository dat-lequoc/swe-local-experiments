{
  "instance_id": "django__django-12708",
  "model_patch": "diff --git a/django/db/backends/base/schema.py b/django/db/backends/base/schema.py\nindex 61f88401ab..8228818e9f 100644\n--- a/django/db/backends/base/schema.py\n+++ b/django/db/backends/base/schema.py\n@@ -403,16 +403,28 @@ class BaseDatabaseSchemaEditor:\n         meta_constraint_names = {constraint.name for constraint in model._meta.constraints}\n         meta_index_names = {constraint.name for constraint in model._meta.indexes}\n         columns = [model._meta.get_field(field).column for field in fields]\n+        \n+        # Try to find index-specific constraint first\n         constraint_names = self._constraint_names(\n             model, columns, exclude=meta_constraint_names | meta_index_names,\n+            type_=Index.suffix if 'index' in constraint_kwargs else None,\n             **constraint_kwargs\n         )\n+        \n+        if not constraint_names:\n+            return  # Index might be covered by a unique constraint\n+            \n+        if len(constraint_names) > 1:\n+            # If multiple found, try to filter by naming pattern\n+            constraint_names = [name for name in constraint_names if name.endswith('_idx')]\n+            \n         if len(constraint_names) != 1:\n-            raise ValueError(\"Found wrong number (%s) of constraints for %s(%s)\" % (\n+            raise ValueError(\"Found wrong number (%s) of indexes for %s(%s)\" % (\n                 len(constraint_names),\n                 model._meta.db_table,\n                 \", \".join(columns),\n             ))\n+        \n         self.execute(self._delete_constraint_sql(sql, model, constraint_names[0]))\n \n     def alter_db_table(self, model, old_db_table, new_db_table):\n@@ -1197,4 +1209,4 @@ class BaseDatabaseSchemaEditor:\n             'procedure': self.quote_name(procedure_name),\n             'param_types': ','.join(param_types),\n         }\n-        self.execute(sql)\n+        self.execute(sql)\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}