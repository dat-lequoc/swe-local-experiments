{
  "instance_id": "matplotlib__matplotlib-24970",
  "model_patch": "diff --git a/lib/matplotlib/colors.py b/lib/matplotlib/colors.py\nindex 2d3072da04..4a2df06ec2 100644\n--- a/lib/matplotlib/colors.py\n+++ b/lib/matplotlib/colors.py\n@@ -727,9 +727,18 @@ class Colormap:\n                 xa = xa.astype(int)\n         # Set the over-range indices before the under-range;\n         # otherwise the under-range values get converted to over-range.\n-        xa[xa > self.N - 1] = self._i_over\n-        xa[xa < 0] = self._i_under\n-        xa[mask_bad] = self._i_bad\n+        if xa.dtype.kind in 'ui':\n+            # Convert special indices to match array dtype\n+            i_over = np.array([self._i_over], dtype=xa.dtype)[0]\n+            i_under = np.array([self._i_under], dtype=xa.dtype)[0]\n+            i_bad = np.array([self._i_bad], dtype=xa.dtype)[0]\n+            xa[xa > self.N - 1] = i_over\n+            xa[xa < 0] = i_under\n+            xa[mask_bad] = i_bad\n+        else:\n+            xa[xa > self.N - 1] = self._i_over\n+            xa[xa < 0] = self._i_under\n+            xa[mask_bad] = self._i_bad\n \n         lut = self._lut\n         if bytes:\n@@ -2661,4 +2670,4 @@ def from_levels_and_colors(levels, colors, extend='neither'):\n     cmap.colorbar_extend = extend\n \n     norm = BoundaryNorm(levels, ncolors=n_data_colors)\n-    return cmap, norm\n+    return cmap, norm\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}