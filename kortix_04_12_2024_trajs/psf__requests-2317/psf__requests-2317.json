{
  "instance_id": "psf__requests-2317",
  "model_patch": "diff --git a/requests/sessions.py b/requests/sessions.py\nindex d701ff2e..be688b99 100644\n--- a/requests/sessions.py\n+++ b/requests/sessions.py\n@@ -375,6 +375,12 @@ class Session(SessionRedirectMixin):\n         )\n         return p\n \n+    def _ensure_str(self, method):\n+        \"\"\"Ensure the HTTP method is a proper string.\"\"\"\n+        if isinstance(method, bytes):\n+            return method.decode('ascii')\n+        return str(method)\n+\n     def request(self, method, url,\n         params=None,\n         data=None,\n@@ -425,7 +431,7 @@ class Session(SessionRedirectMixin):\n             If Tuple, ('cert', 'key') pair.\n         \"\"\"\n \n-        method = builtin_str(method)\n+        method = self._ensure_str(method)\n \n         # Create the Request.\n         req = Request(\n@@ -668,4 +674,4 @@ class Session(SessionRedirectMixin):\n def session():\n     \"\"\"Returns a :class:`Session` for context-management.\"\"\"\n \n-    return Session()\n+    return Session()\n\\ No newline at end of file\ndiff --git a/test_requests.py b/test_requests.py\nindex 467c5bc6..4701216a 100755\n--- a/test_requests.py\n+++ b/test_requests.py\n@@ -1516,5 +1516,23 @@ def test_prepare_unicode_url():\n     )\n     assert_copy(p, p.copy())\n \n+    def test_binary_method_handling(self):\n+        \"\"\"Test that binary string methods are handled correctly.\"\"\"\n+        s = requests.Session()\n+        url = httpbin('get')\n+        r = s.request(b'GET', url)\n+        assert r.status_code == 200\n+        r = s.request('GET', url)\n+        assert r.status_code == 200\n+\n+    def test_binary_method_handling(self):\n+        \"\"\"Test that binary string methods are handled correctly.\"\"\"\n+        s = requests.Session()\n+        url = httpbin('get')\n+        r = s.request(b'GET', url)\n+        assert r.status_code == 200\n+        r = s.request('GET', url)\n+        assert r.status_code == 200\n+\n if __name__ == '__main__':\n-    unittest.main()\n+    unittest.main()\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}