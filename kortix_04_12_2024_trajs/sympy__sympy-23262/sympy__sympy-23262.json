{
  "instance_id": "sympy__sympy-23262",
  "model_patch": "diff --git a/sympy/printing/pycode.py b/sympy/printing/pycode.py\nindex 1877c3f92a..79bfc15c0f 100644\n--- a/sympy/printing/pycode.py\n+++ b/sympy/printing/pycode.py\n@@ -267,6 +267,11 @@ def _print_KroneckerDelta(self, expr):\n             b = self._print(b)\n         )\n \n+    def _print_tuple(self, expr):\n+        if len(expr) == 1:\n+            return \"(%s,)\" % self._print(expr[0])\n+        return \"(%s)\" % \", \".join(self._print(i) for i in expr)\n+\n     def _print_MatrixBase(self, expr):\n         name = expr.__class__.__name__\n         func = self.known_functions.get(name, name)\n@@ -739,4 +744,4 @@ def _print_Function(self, expr):\n                            ', '.join(map(lambda arg: self._print(arg), expr.args)))\n \n     def _print_Pow(self, expr, rational=False):\n-        return self._hprint_Pow(expr, rational=rational, sqrt='sympy.sqrt')\n+        return self._hprint_Pow(expr, rational=rational, sqrt='sympy.sqrt')\n\\ No newline at end of file\ndiff --git a/sympy/printing/tests/test_pycode.py b/sympy/printing/tests/test_pycode.py\nindex f4937a90e0..6f0cd83860 100644\n--- a/sympy/printing/tests/test_pycode.py\n+++ b/sympy/printing/tests/test_pycode.py\n@@ -30,6 +30,11 @@ def test_PythonCodePrinter():\n     prntr = PythonCodePrinter()\n \n     assert not prntr.module_imports\n+    \n+    # Test tuple handling\n+    assert prntr.doprint((1,)) == '(1,)'  # Single element tuple\n+    assert prntr.doprint(()) == '()'      # Empty tuple\n+    assert prntr.doprint((1,2)) == '(1, 2)'  # Multiple elements\n \n     assert prntr.doprint(x**y) == 'x**y'\n     assert prntr.doprint(Mod(x, 2)) == 'x % 2'\n@@ -420,4 +425,4 @@ def test_array_printer():\n     assert prntr.doprint(ArrayDiagonal(A, [2,3,4])) == 'tensorflow.linalg.einsum(\"abccc->abc\", A)'\n     assert prntr.doprint(ArrayDiagonal(A, [0,1], [2,3])) == 'tensorflow.linalg.einsum(\"aabbc->cab\", A)'\n     assert prntr.doprint(ArrayContraction(A, [2], [3])) == 'tensorflow.linalg.einsum(\"abcde->abe\", A)'\n-    assert prntr.doprint(Assignment(I[i,j,k], I[i,j,k])) == 'I = I'\n+    assert prntr.doprint(Assignment(I[i,j,k], I[i,j,k])) == 'I = I'\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}