{
  "instance_id": "pytest-dev__pytest-7168",
  "model_patch": "diff --git a/src/_pytest/_io/saferepr.py b/src/_pytest/_io/saferepr.py\nindex 23af4d0bb..9dfc50e02 100644\n--- a/src/_pytest/_io/saferepr.py\n+++ b/src/_pytest/_io/saferepr.py\n@@ -14,6 +14,8 @@ def _try_repr_or_str(obj):\n \n def _format_repr_exception(exc: BaseException, obj: Any) -> str:\n     try:\n+        if isinstance(exc, RuntimeError) and str(exc) == \"No active exception to reraise\":\n+            return \"<[%s() raised bare 'raise' statement]>\" % obj.__class__.__name__\n         exc_info = _try_repr_or_str(exc)\n     except (KeyboardInterrupt, SystemExit):\n         raise\n@@ -100,4 +102,4 @@ class AlwaysDispatchingPrettyPrinter(pprint.PrettyPrinter):\n def _pformat_dispatch(object, indent=1, width=80, depth=None, *, compact=False):\n     return AlwaysDispatchingPrettyPrinter(\n         indent=indent, width=width, depth=depth, compact=compact\n-    ).pformat(object)\n+    ).pformat(object)\n\\ No newline at end of file\ndiff --git a/testing/io/test_saferepr.py b/testing/io/test_saferepr.py\nindex 06084202e..bae8c7f05 100644\n--- a/testing/io/test_saferepr.py\n+++ b/testing/io/test_saferepr.py\n@@ -149,8 +149,18 @@ def test_unicode():\n     reprval = \"'\u00a3\u20ac'\"\n     assert saferepr(val) == reprval\n \n+def test_bare_raise_in_repr():\n+    class BareRaiseRepr:\n+        def __repr__(self):\n+            raise\n+    \n+    obj = BareRaiseRepr()\n+    result = saferepr(obj)\n+    assert \"bare 'raise' statement\" in result\n+    assert \"BareRaiseRepr\" in result\n+\n \n def test_pformat_dispatch():\n     assert _pformat_dispatch(\"a\") == \"'a'\"\n     assert _pformat_dispatch(\"a\" * 10, width=5) == \"'aaaaaaaaaa'\"\n-    assert _pformat_dispatch(\"foo bar\", width=5) == \"('foo '\\n 'bar')\"\n+    assert _pformat_dispatch(\"foo bar\", width=5) == \"('foo '\\n 'bar')\"\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}