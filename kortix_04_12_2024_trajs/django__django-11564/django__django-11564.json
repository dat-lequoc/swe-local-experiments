{
  "instance_id": "django__django-11564",
  "model_patch": "diff --git a/django/templatetags/static.py b/django/templatetags/static.py\nindex 39712aaba0..b36c0f0a60 100644\n--- a/django/templatetags/static.py\n+++ b/django/templatetags/static.py\n@@ -100,7 +100,15 @@ class StaticNode(template.Node):\n \n     def url(self, context):\n         path = self.path.resolve(context)\n-        return self.handle_simple(path)\n+        url = self.handle_simple(path)\n+        if url is None:\n+            return url\n+        if 'request' in context:\n+            script_name = context['request'].META.get('SCRIPT_NAME', '')\n+            if script_name:\n+                script_name = script_name.rstrip('/')\n+                return f'{script_name}{url}'\n+        return url\n \n     def render(self, context):\n         url = self.url(context)\n@@ -164,4 +172,4 @@ def static(path):\n     Given a relative path to a static asset, return the absolute path to the\n     asset.\n     \"\"\"\n-    return StaticNode.handle_simple(path)\n+    return StaticNode.handle_simple(path)\n\\ No newline at end of file\ndiff --git a/tests/staticfiles_tests/test_templatetags.py b/tests/staticfiles_tests/test_templatetags.py\nindex cd3f7d4bfa..d573e123e8 100644\n--- a/tests/staticfiles_tests/test_templatetags.py\n+++ b/tests/staticfiles_tests/test_templatetags.py\n@@ -1,4 +1,6 @@\n-from django.test import override_settings\n+from django.test import override_settings, RequestFactory\n+from django import template\n+from django.templatetags.static import StaticNode\n \n from .cases import StaticFilesTestCase\n \n@@ -19,3 +21,16 @@ class TestTemplateTag(StaticFilesTestCase):\n         \"\"\"\n         self.assertStaticRenders('a.html', 'a.html?a=b&amp;c=d')\n         self.assertStaticRenders('a.html', 'a.html?a=b&c=d', autoescape=False)\n+\n+    def test_template_tag_with_script_name(self):\n+        \"\"\"\n+        The {% static %} template tag should respect SCRIPT_NAME from request.META\n+        \"\"\"\n+        factory = RequestFactory()\n+        request = factory.get('/')\n+        request.META['SCRIPT_NAME'] = '/prefix'\n+        context = {'request': request}\n+        \n+        node = StaticNode(None, template.Variable('\"test/file.txt\"'))\n+        url = node.url(template.Context(context))\n+        self.assertEqual(url, '/prefix/static/test/file.txt')\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}