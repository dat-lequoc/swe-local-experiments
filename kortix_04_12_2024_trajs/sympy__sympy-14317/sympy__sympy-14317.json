{
  "instance_id": "sympy__sympy-14317",
  "model_patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 737e16cc74..220763a06e 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -1854,7 +1854,47 @@ def _print_PolynomialRingBase(self, expr):\n \n     def _print_Poly(self, poly):\n         cls = poly.__class__.__name__\n-        expr = self._print(poly.as_expr())\n+        terms = []\n+        for monom, coeff in poly.terms():\n+            if coeff == 1 and monom:\n+                # Skip the coefficient if it's 1 and there are variables\n+                s_monom = []\n+                for i, exp in enumerate(monom):\n+                    if exp > 0:\n+                        if exp == 1:\n+                            s_monom.append(self._print(poly.gens[i]))\n+                        else:\n+                            s_monom.append('%s^{%d}' % (self._print(poly.gens[i]), exp))\n+                term = '*'.join(s_monom)\n+            elif coeff == -1 and monom:\n+                # Handle -1 coefficient specially\n+                s_monom = []\n+                for i, exp in enumerate(monom):\n+                    if exp > 0:\n+                        if exp == 1:\n+                            s_monom.append(self._print(poly.gens[i]))\n+                        else:\n+                            s_monom.append('%s^{%d}' % (self._print(poly.gens[i]), exp))\n+                term = '-' + '*'.join(s_monom)\n+            else:\n+                # Regular coefficient handling\n+                s_monom = []\n+                for i, exp in enumerate(monom):\n+                    if exp > 0:\n+                        if exp == 1:\n+                            s_monom.append(self._print(poly.gens[i]))\n+                        else:\n+                            s_monom.append('%s^{%d}' % (self._print(poly.gens[i]), exp))\n+                if not s_monom:\n+                    term = self._print(coeff)\n+                else:\n+                    term = '*'.join([self._print(coeff)] + s_monom)\n+            \n+            if term.startswith('+'):\n+                term = term[1:]\n+            terms.append(term)\n+\n+        expr = ' + '.join(terms) if terms else '0'\n         gens = list(map(self._print, poly.gens))\n         domain = \"domain=%s\" % self._print(poly.get_domain())\n \n@@ -2302,4 +2342,4 @@ def latex(expr, **settings):\n \n def print_latex(expr, **settings):\n     \"\"\"Prints LaTeX representation of the given expression.\"\"\"\n-    print(latex(expr, **settings))\n+    print(latex(expr, **settings))\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}