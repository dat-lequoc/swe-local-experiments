diff --git a/sklearn/preprocessing/_encoders.py b/sklearn/preprocessing/_encoders.py
index 1e05aba59..f97418180 100644
--- a/sklearn/preprocessing/_encoders.py
+++ b/sklearn/preprocessing/_encoders.py
@@ -111,6 +111,9 @@ class _BaseEncoder(BaseEstimator, TransformerMixin):
                     # removed later.
                     X_mask[:, i] = valid_mask
                     Xi = Xi.copy()
+                    # Convert to object dtype if dealing with strings to prevent truncation
+                    if Xi.dtype.kind in ('U', 'S'):
+                        Xi = Xi.astype(object)
                     Xi[~valid_mask] = self.categories_[i][0]
             _, encoded = _encode(Xi, self.categories_[i], encode=True)
             X_int[:, i] = encoded
@@ -839,4 +842,4 @@ class OrdinalEncoder(_BaseEncoder):
             labels = X[:, i].astype('int64')
             X_tr[:, i] = self.categories_[i][labels]
 
-        return X_tr
+        return X_tr
\ No newline at end of file
diff --git a/sklearn/preprocessing/tests/test_encoders.py b/sklearn/preprocessing/tests/test_encoders.py
index d5ac50a25..340f6085c 100644
--- a/sklearn/preprocessing/tests/test_encoders.py
+++ b/sklearn/preprocessing/tests/test_encoders.py
@@ -228,6 +228,17 @@ def test_one_hot_encoder_categorical_features():
 
 def test_one_hot_encoder_handle_unknown():
     X = np.array([[0, 2, 1], [1, 0, 3], [1, 0, 2]])
+
+def test_one_hot_encoder_handle_unknown_strings():
+    # Test that handle_unknown='ignore' works with string dtypes
+    X = np.array(['22', '333', '4444', '11111111']).reshape((-1,1))
+    X_test = np.array(['55555', '22']).reshape((-1,1))
+    enc = OneHotEncoder(dtype=bool, handle_unknown='ignore')
+    enc.fit(X)
+    X_trans = enc.transform(X_test)
+    assert X_trans.shape == (2, 4)  # 4 original categories
+    assert X_trans[1, 0] == True  # '22' is known
+    assert not np.any(X_trans[0])  # '55555' is unknown, all zeros
     X2 = np.array([[4, 1, 1]])
 
     # Test that one hot encoder raises error for unknown features
@@ -658,4 +669,4 @@ def test_encoder_dtypes_pandas():
 def test_one_hot_encoder_warning():
     enc = OneHotEncoder()
     X = [['Male', 1], ['Female', 3]]
-    np.testing.assert_no_warnings(enc.fit_transform, X)
+    np.testing.assert_no_warnings(enc.fit_transform, X)
\ No newline at end of file
