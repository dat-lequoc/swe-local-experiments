diff --git a/django/forms/boundfield.py b/django/forms/boundfield.py
index 2ff8b0ee26..f9726d9acd 100644
--- a/django/forms/boundfield.py
+++ b/django/forms/boundfield.py
@@ -277,8 +277,8 @@ class BoundWidget:
 
     @property
     def id_for_label(self):
-        return 'id_%s_%s' % (self.data['name'], self.data['index'])
+        return self.data['attrs'].get('id') or 'id_%s_%s' % (self.data['name'], self.data['index'])
 
     @property
     def choice_label(self):
-        return self.data['label']
+        return self.data['label']
\ No newline at end of file
diff --git a/tests/forms_tests/widget_tests/test_widget.py b/tests/forms_tests/widget_tests/test_widget.py
index 8cde388b8f..a2a167b5b9 100644
--- a/tests/forms_tests/widget_tests/test_widget.py
+++ b/tests/forms_tests/widget_tests/test_widget.py
@@ -1,5 +1,7 @@
 from django.forms import Widget
+from django.forms import Widget
 from django.forms.widgets import Input
+from django.forms.boundfield import BoundWidget
 
 from .base import WidgetTest
 
@@ -24,3 +26,10 @@ class WidgetTests(WidgetTest):
     def test_attr_false_not_rendered(self):
         html = '<input type="None" name="name" value="value">'
         self.check_html(Input(), 'name', 'value', html=html, attrs={'readonly': False})
+
+    def test_bound_widget_id_for_label(self):
+        """Test that BoundWidget.id_for_label uses attrs['id'] when available."""
+        widget = Input()
+        context = widget.get_context('name', None, {'id': 'custom_id'})
+        bound_widget = BoundWidget(widget, context['widget'], None)
+        self.assertEqual(bound_widget.id_for_label, 'custom_id')
\ No newline at end of file
