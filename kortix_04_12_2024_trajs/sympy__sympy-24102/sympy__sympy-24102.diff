diff --git a/sympy/parsing/mathematica.py b/sympy/parsing/mathematica.py
index 7ea14ce33a..bc5a6a67b2 100644
--- a/sympy/parsing/mathematica.py
+++ b/sympy/parsing/mathematica.py
@@ -586,7 +586,7 @@ def parse(self, s):
         "##": lambda: ["SlotSequence", "1"],
     }
 
-    _literal = r"[A-Za-z][A-Za-z0-9]*"
+    _literal = r"[A-Za-z\u0370-\u03FF\u1F00-\u1FFF][A-Za-z0-9\u0370-\u03FF\u1F00-\u1FFF]*"
     _number = r"(?:[0-9]+(?:\.[0-9]*)?|\.[0-9]+)"
 
     _enclosure_open = ["(", "[", "[[", "{"]
@@ -1076,4 +1076,4 @@ def _from_fullformsympy_to_sympy(self, mform):
         expr = mform
         for mma_form, sympy_node in self._node_conversions.items():
             expr = expr.replace(Function(mma_form), sympy_node)
-        return expr
+        return expr
\ No newline at end of file
diff --git a/sympy/parsing/tests/test_mathematica.py b/sympy/parsing/tests/test_mathematica.py
index f89b532ef1..8b5c894da7 100644
--- a/sympy/parsing/tests/test_mathematica.py
+++ b/sympy/parsing/tests/test_mathematica.py
@@ -7,6 +7,10 @@
 
 def test_mathematica():
     d = {
+        'λ': 'Symbol("λ")',
+        'α': 'Symbol("α")',
+        'β + γ': 'Symbol("β") + Symbol("γ")',
+        'Sin[θ]': 'sin(Symbol("θ"))',
         '- 6x': '-6*x',
         'Sin[x]^2': 'sin(x)**2',
         '2(x-1)': '2*(x-1)',
@@ -272,4 +276,4 @@ def test_parser_mathematica_exp_alt():
 
     assert convert_chain3(full_form1) == sin(x*y)
     assert convert_chain3(full_form2) == x*y + z
-    assert convert_chain3(full_form3) == sin(x*(y + z)*w**n)
+    assert convert_chain3(full_form3) == sin(x*(y + z)*w**n)
\ No newline at end of file
