{
  "instance_id": "django__django-16595",
  "model_patch": "diff --git a/django/db/migrations/operations/fields.py b/django/db/migrations/operations/fields.py\nindex cd3aab43ad..ad033659e6 100644\n--- a/django/db/migrations/operations/fields.py\n+++ b/django/db/migrations/operations/fields.py\n@@ -264,6 +264,17 @@ class AlterField(FieldOperation):\n                     field=self.field,\n                 ),\n             ]\n+        elif isinstance(operation, AlterField) and self.is_same_field_operation(operation):\n+            if self.preserve_default == operation.preserve_default:\n+                return [operation]\n+            return [\n+                AlterField(\n+                    model_name=self.model_name,\n+                    name=self.name,\n+                    field=operation.field,\n+                    preserve_default=operation.preserve_default,\n+                ),\n+            ]\n         return super().reduce(operation, app_label)\n \n \n@@ -354,4 +365,4 @@ class RenameField(FieldOperation):\n         return super(FieldOperation, self).reduce(operation, app_label) or not (\n             operation.references_field(self.model_name, self.old_name, app_label)\n             or operation.references_field(self.model_name, self.new_name, app_label)\n-        )\n+        )\n\\ No newline at end of file\ndiff --git a/tests/migrations/test_optimizer.py b/tests/migrations/test_optimizer.py\nindex 6485009eb4..3c53798020 100644\n--- a/tests/migrations/test_optimizer.py\n+++ b/tests/migrations/test_optimizer.py\n@@ -748,6 +748,41 @@ class OptimizerTests(SimpleTestCase):\n             ],\n         )\n \n+    def test_alter_field_alter_field(self):\n+        \"\"\"\n+        Multiple AlterField should optimize into a single AlterField.\n+        \"\"\"\n+        self.assertOptimizesTo(\n+            [\n+                migrations.AlterField(\"Foo\", \"name\", models.CharField(max_length=255)),\n+                migrations.AlterField(\"Foo\", \"name\", models.CharField(max_length=128)),\n+                migrations.AlterField(\"Foo\", \"name\", models.CharField(max_length=128, help_text=\"help\")),\n+            ],\n+            [\n+                migrations.AlterField(\n+                    \"Foo\",\n+                    \"name\",\n+                    models.CharField(max_length=128, help_text=\"help\"),\n+                ),\n+            ],\n+        )\n+\n+        # Check that preserve_default is handled correctly\n+        self.assertOptimizesTo(\n+            [\n+                migrations.AlterField(\"Foo\", \"name\", models.CharField(max_length=255)),\n+                migrations.AlterField(\"Foo\", \"name\", models.CharField(max_length=128), preserve_default=False),\n+            ],\n+            [\n+                migrations.AlterField(\n+                    \"Foo\",\n+                    \"name\",\n+                    models.CharField(max_length=128),\n+                    preserve_default=False,\n+                ),\n+            ],\n+        )\n+\n     def test_create_model_remove_field(self):\n         \"\"\"\n         RemoveField should optimize into CreateModel.\n@@ -1151,4 +1186,4 @@ class OptimizerTests(SimpleTestCase):\n                     \"Pony\", new_name=\"new_name\", old_fields=(\"weight\", \"pink\")\n                 ),\n             ]\n-        )\n+        )\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}