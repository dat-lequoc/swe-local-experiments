{
  "instance_id": "django__django-14608",
  "model_patch": "diff --git a/django/forms/formsets.py b/django/forms/formsets.py\nindex a89c35599f..43ab3f36d2 100644\n--- a/django/forms/formsets.py\n+++ b/django/forms/formsets.py\n@@ -75,7 +75,7 @@ class BaseFormSet:\n         self.form_kwargs = form_kwargs or {}\n         self.error_class = error_class\n         self._errors = None\n-        self._non_form_errors = None\n+        self._non_form_errors = self.error_class(error_class='errorlist nonform')\n \n         messages = {}\n         for cls in reversed(type(self).__mro__):\n@@ -493,4 +493,4 @@ def formset_factory(form, formset=BaseFormSet, extra=1, can_order=False,\n def all_valid(formsets):\n     \"\"\"Validate every formset and return True if all are valid.\"\"\"\n     # List comprehension ensures is_valid() is called for all formsets.\n-    return all([formset.is_valid() for formset in formsets])\n+    return all([formset.is_valid() for formset in formsets])\n\\ No newline at end of file\ndiff --git a/tests/forms_tests/tests/test_formsets.py b/tests/forms_tests/tests/test_formsets.py\nindex 889560aa74..1d4628ff2a 100644\n--- a/tests/forms_tests/tests/test_formsets.py\n+++ b/tests/forms_tests/tests/test_formsets.py\n@@ -139,6 +139,19 @@ class FormsFormsetTestCase(SimpleTestCase):\n         self.assertTrue(hasattr(formset.empty_form, 'custom_kwarg'))\n         self.assertEqual(formset.empty_form.custom_kwarg, 1)\n \n+    def test_non_form_errors_css_class(self):\n+        \"\"\"\n+        non_form_errors() should have nonform CSS class.\n+        \"\"\"\n+        data = {\n+            'choices-TOTAL_FORMS': '1',\n+            'choices-INITIAL_FORMS': '0',\n+            'choices-MIN_NUM_FORMS': '0',\n+            'choices-MAX_NUM_FORMS': '0',\n+        }\n+        formset = ChoiceFormSet(data, auto_id=False, prefix='choices')\n+        self.assertIn('nonform', formset.non_form_errors().error_class)\n+\n     def test_formset_validation(self):\n         # FormSet instances can also have an error attribute if validation failed for\n         # any of the forms.\n@@ -1481,4 +1494,4 @@ class AllValidTests(SimpleTestCase):\n         self.assertIs(all_valid((formset1, formset2)), False)\n         expected_errors = [{'votes': ['This field is required.']}, {'votes': ['This field is required.']}]\n         self.assertEqual(formset1._errors, expected_errors)\n-        self.assertEqual(formset2._errors, expected_errors)\n+        self.assertEqual(formset2._errors, expected_errors)\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}