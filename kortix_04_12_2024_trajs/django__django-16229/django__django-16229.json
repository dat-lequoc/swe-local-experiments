{
  "instance_id": "django__django-16229",
  "model_patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\nindex 6c6ee8cee7..8b4f395615 100644\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -153,6 +153,9 @@ class BaseModelAdmin(metaclass=forms.MediaDefiningClass):\n \n         If kwargs are given, they're passed to the form Field's constructor.\n         \"\"\"\n+        # For ArrayField, disable hidden initial to prevent validation bypass\n+        if hasattr(db_field, 'base_field') and db_field.__class__.__name__ == 'ArrayField':\n+            kwargs['show_hidden_initial'] = False\n         # If the field specifies choices, we don't need to look for special\n         # admin widgets - we just need to use a select widget of some kind.\n         if db_field.choices:\n@@ -2497,4 +2500,4 @@ class StackedInline(InlineModelAdmin):\n \n \n class TabularInline(InlineModelAdmin):\n-    template = \"admin/edit_inline/tabular.html\"\n+    template = \"admin/edit_inline/tabular.html\"\n\\ No newline at end of file\ndiff --git a/tests/postgres_tests/test_array.py b/tests/postgres_tests/test_array.py\nindex 9e20ab3baf..8b46a2cffb 100644\n--- a/tests/postgres_tests/test_array.py\n+++ b/tests/postgres_tests/test_array.py\n@@ -209,6 +209,27 @@ class TestSaveLoad(PostgreSQLTestCase):\n         self.assertEqual(instance.field_nested, [[None, None], [None, None]])\n \n \n+class TestArrayFormValidation(PostgreSQLTestCase):\n+    def test_array_field_hidden_initial_validation(self):\n+        \"\"\"\n+        Test that ArrayField validation is not bypassed when using hidden initial fields.\n+        \"\"\"\n+        class RelatedForm(forms.ModelForm):\n+            def clean(self):\n+                raise ValidationError(\"Test validation error\")\n+            \n+            class Meta:\n+                model = IntegerArrayModel\n+                fields = ['field']\n+\n+        form = RelatedForm(data={'field': [1, 2]}, initial={'field': [3, 4]})\n+        form.show_hidden_initial = True\n+        self.assertFalse(form.is_valid())\n+        # Submit again with same data\n+        form = RelatedForm(data={'field': [1, 2]}, initial={'field': [3, 4]})\n+        form.show_hidden_initial = True\n+        self.assertFalse(form.is_valid())\n+\n class TestQuerying(PostgreSQLTestCase):\n     @classmethod\n     def setUpTestData(cls):\n@@ -1473,4 +1494,4 @@ class TestAdminUtils(PostgreSQLTestCase):\n             array_field,\n             self.empty_value,\n         )\n-        self.assertEqual(display_value, self.empty_value)\n+        self.assertEqual(display_value, self.empty_value)\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}