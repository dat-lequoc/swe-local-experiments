diff --git a/sympy/simplify/simplify.py b/sympy/simplify/simplify.py
index 1acc00be3a..4868ca1407 100644
--- a/sympy/simplify/simplify.py
+++ b/sympy/simplify/simplify.py
@@ -513,6 +513,18 @@ def simplify(expr, ratio=1.7, measure=count_ops, rational=False):
     """
     expr = sympify(expr)
 
+    # Check for negative base with symbolic exponent
+    def has_negative_base_symbolic_exp(expr):
+        if expr.is_Pow:
+            base, exp = expr.as_base_exp()
+            if (base.could_extract_minus_sign() and not exp.is_Integer and 
+                not exp.is_zero):
+                return True
+        return False
+
+    if has_negative_base_symbolic_exp(expr):
+        return expr
+
     try:
         return expr._eval_simplify(ratio=ratio, measure=measure)
     except AttributeError:
@@ -1444,4 +1456,4 @@ def clear_coefficients(expr, rhs=S.Zero):
     if _coeff_isneg(expr):
         expr = -expr
         rhs = -rhs
-    return expr, rhs
+    return expr, rhs
\ No newline at end of file
diff --git a/sympy/simplify/tests/test_simplify.py b/sympy/simplify/tests/test_simplify.py
index 4bea38bc8f..d2c84b143c 100644
--- a/sympy/simplify/tests/test_simplify.py
+++ b/sympy/simplify/tests/test_simplify.py
@@ -640,6 +640,16 @@ def test_inequality_no_auto_simplify():
     assert simplify(e)
 
 
+def test_negative_base_symbolic_exp():
+    x = Symbol('x')
+    e = (-x/4 - S(1)/12)**x - 1
+    assert simplify(e) == e  # should not change the expression
+    # Test specific value
+    a = S(9)/5
+    orig_val = N(e.subs(x, a))
+    simp_val = N(simplify(e).subs(x, a))
+    assert abs(orig_val - simp_val) < 1e-10
+
 def test_issue_9398():
     from sympy import Number, cancel
     assert cancel(1e-14) != 0
@@ -699,4 +709,4 @@ def test_clear_coefficients():
     assert clear_coefficients(S(3), x) == (0, x - 3)
     assert clear_coefficients(S.Infinity, x) == (S.Infinity, x)
     assert clear_coefficients(-S.Pi, x) == (S.Pi, -x)
-    assert clear_coefficients(2 - S.Pi/3, x) == (pi, -3*x + 6)
+    assert clear_coefficients(2 - S.Pi/3, x) == (pi, -3*x + 6)
\ No newline at end of file
