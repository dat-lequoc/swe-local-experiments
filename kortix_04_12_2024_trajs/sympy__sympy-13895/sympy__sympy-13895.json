{
  "instance_id": "sympy__sympy-13895",
  "model_patch": "diff --git a/sympy/simplify/simplify.py b/sympy/simplify/simplify.py\nindex 1acc00be3a..4868ca1407 100644\n--- a/sympy/simplify/simplify.py\n+++ b/sympy/simplify/simplify.py\n@@ -513,6 +513,18 @@ def simplify(expr, ratio=1.7, measure=count_ops, rational=False):\n     \"\"\"\n     expr = sympify(expr)\n \n+    # Check for negative base with symbolic exponent\n+    def has_negative_base_symbolic_exp(expr):\n+        if expr.is_Pow:\n+            base, exp = expr.as_base_exp()\n+            if (base.could_extract_minus_sign() and not exp.is_Integer and \n+                not exp.is_zero):\n+                return True\n+        return False\n+\n+    if has_negative_base_symbolic_exp(expr):\n+        return expr\n+\n     try:\n         return expr._eval_simplify(ratio=ratio, measure=measure)\n     except AttributeError:\n@@ -1444,4 +1456,4 @@ def clear_coefficients(expr, rhs=S.Zero):\n     if _coeff_isneg(expr):\n         expr = -expr\n         rhs = -rhs\n-    return expr, rhs\n+    return expr, rhs\n\\ No newline at end of file\ndiff --git a/sympy/simplify/tests/test_simplify.py b/sympy/simplify/tests/test_simplify.py\nindex 4bea38bc8f..d2c84b143c 100644\n--- a/sympy/simplify/tests/test_simplify.py\n+++ b/sympy/simplify/tests/test_simplify.py\n@@ -640,6 +640,16 @@ def test_inequality_no_auto_simplify():\n     assert simplify(e)\n \n \n+def test_negative_base_symbolic_exp():\n+    x = Symbol('x')\n+    e = (-x/4 - S(1)/12)**x - 1\n+    assert simplify(e) == e  # should not change the expression\n+    # Test specific value\n+    a = S(9)/5\n+    orig_val = N(e.subs(x, a))\n+    simp_val = N(simplify(e).subs(x, a))\n+    assert abs(orig_val - simp_val) < 1e-10\n+\n def test_issue_9398():\n     from sympy import Number, cancel\n     assert cancel(1e-14) != 0\n@@ -699,4 +709,4 @@ def test_clear_coefficients():\n     assert clear_coefficients(S(3), x) == (0, x - 3)\n     assert clear_coefficients(S.Infinity, x) == (S.Infinity, x)\n     assert clear_coefficients(-S.Pi, x) == (S.Pi, -x)\n-    assert clear_coefficients(2 - S.Pi/3, x) == (pi, -3*x + 6)\n+    assert clear_coefficients(2 - S.Pi/3, x) == (pi, -3*x + 6)\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}