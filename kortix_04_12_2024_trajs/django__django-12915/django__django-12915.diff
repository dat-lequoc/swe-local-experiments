diff --git a/django/contrib/staticfiles/handlers.py b/django/contrib/staticfiles/handlers.py
index 711d8864ad..07067ce67d 100644
--- a/django/contrib/staticfiles/handlers.py
+++ b/django/contrib/staticfiles/handlers.py
@@ -1,6 +1,7 @@
 from urllib.parse import urlparse
 from urllib.request import url2pathname
 
+from asgiref.sync import sync_to_async
 from django.conf import settings
 from django.contrib.staticfiles import utils
 from django.contrib.staticfiles.views import serve
@@ -52,6 +53,12 @@ class StaticFilesHandlerMixin:
         except Http404 as e:
             return response_for_exception(request, e)
 
+    async def get_response_async(self, request):
+        try:
+            return await sync_to_async(self.serve)(request)
+        except Http404 as e:
+            return await sync_to_async(response_for_exception)(request, e)
+
 
 class StaticFilesHandler(StaticFilesHandlerMixin, WSGIHandler):
     """
@@ -85,4 +92,4 @@ class ASGIStaticFilesHandler(StaticFilesHandlerMixin, ASGIHandler):
             # (the one thing super() doesn't do is __call__, apparently)
             return await super().__call__(scope, receive, send)
         # Hand off to the main app
-        return await self.application(scope, receive, send)
+        return await self.application(scope, receive, send)
\ No newline at end of file
diff --git a/tests/staticfiles_tests/test_handlers.py b/tests/staticfiles_tests/test_handlers.py
new file mode 100644
index 0000000000..fecc41663e
--- /dev/null
+++ b/tests/staticfiles_tests/test_handlers.py
@@ -0,0 +1,36 @@
+import asyncio
+from unittest import mock
+
+from django.contrib.staticfiles.handlers import ASGIStaticFilesHandler
+from django.core.handlers.asgi import ASGIHandler
+from django.http import Http404
+from django.test import SimpleTestCase, override_settings
+
+from .cases import StaticFilesTestCase
+
+
+class TestASGIStaticFilesHandler(StaticFilesTestCase):
+    @override_settings(MIDDLEWARE=[])
+    async def test_get_response_async(self):
+        """
+        ASGIStaticFilesHandler.get_response_async() works correctly.
+        """
+        handler = ASGIStaticFilesHandler(ASGIHandler())
+        request = mock.Mock()
+        request.path = '/static/test.txt'
+        request.COOKIES = {}
+        request.META = {'CSRF_COOKIE': 'test-token'}
+        
+        # Test successful response
+        with mock.patch.object(handler, 'serve') as serve_mock:
+            serve_mock.return_value = mock.Mock(status_code=200)
+            response = await handler.get_response_async(request)
+            self.assertEqual(response.status_code, 200)
+            serve_mock.assert_called_once_with(request)
+
+        # Test 404 response
+        with mock.patch.object(handler, 'serve') as serve_mock:
+            serve_mock.side_effect = Http404()
+            response = await handler.get_response_async(request)
+            self.assertEqual(response.status_code, 404)
+            serve_mock.assert_called_once_with(request)
\ No newline at end of file
