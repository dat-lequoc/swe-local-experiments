{
  "instance_id": "scikit-learn__scikit-learn-14092",
  "model_patch": "diff --git a/sklearn/utils/validation.py b/sklearn/utils/validation.py\nindex 8747844e5..9ad21d63a 100644\n--- a/sklearn/utils/validation.py\n+++ b/sklearn/utils/validation.py\n@@ -972,7 +972,16 @@ def check_scalar(x, name, target_type, min_val=None, max_val=None):\n         If the parameter's value violates the given bounds.\n     \"\"\"\n \n-    if not isinstance(x, target_type):\n+    if isinstance(target_type, tuple):\n+        valid_types = target_type\n+    else:\n+        valid_types = (target_type,)\n+        \n+    if numbers.Number in valid_types:\n+        import numpy as np\n+        valid_types = valid_types + (np.number,)\n+        \n+    if not isinstance(x, valid_types):\n         raise TypeError('`{}` must be an instance of {}, not {}.'\n                         .format(name, target_type, type(x)))\n \n@@ -980,4 +989,4 @@ def check_scalar(x, name, target_type, min_val=None, max_val=None):\n         raise ValueError('`{}`= {}, must be >= {}.'.format(name, x, min_val))\n \n     if max_val is not None and x > max_val:\n-        raise ValueError('`{}`= {}, must be <= {}.'.format(name, x, max_val))\n+        raise ValueError('`{}`= {}, must be <= {}.'.format(name, x, max_val))\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}