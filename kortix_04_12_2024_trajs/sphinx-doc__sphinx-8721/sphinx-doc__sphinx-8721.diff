diff --git a/setup.py b/setup.py
index 8d40de1a8..03f325278 100644
--- a/setup.py
+++ b/setup.py
@@ -15,22 +15,22 @@ if sys.version_info < (3, 5):
     sys.exit(1)
 
 install_requires = [
-    'sphinxcontrib-applehelp',
-    'sphinxcontrib-devhelp',
+    'sphinxcontrib-applehelp<=1.0.7',
+    'sphinxcontrib-devhelp<=1.0.5',
     'sphinxcontrib-jsmath',
-    'sphinxcontrib-htmlhelp',
-    'sphinxcontrib-serializinghtml',
-    'sphinxcontrib-qthelp',
-    'Jinja2>=2.3',
+    'sphinxcontrib-htmlhelp<=2.0.4',
+    'sphinxcontrib-serializinghtml<=1.1.9',
+    'sphinxcontrib-qthelp<=1.0.6',
+    'Jinja2<3.0',
     'Pygments>=2.0',
     'docutils>=0.12',
     'snowballstemmer>=1.1',
     'babel>=1.3',
-    'alabaster>=0.7,<0.8',
+    'alabaster>=0.7,<0.7.12',
     'imagesize',
     'requests>=2.5.0',
     'setuptools',
-    'packaging',
+    'packaging', 'markupsafe<=2.0.1',
 ]
 
 extras_require = {
diff --git a/sphinx/ext/viewcode.py b/sphinx/ext/viewcode.py
index a7d52a91c..48135259c 100644
--- a/sphinx/ext/viewcode.py
+++ b/sphinx/ext/viewcode.py
@@ -182,6 +182,11 @@ def collect_pages(app: Sphinx) -> Generator[Tuple[str, Dict[str, Any], str], Non
     env = app.builder.env
     if not hasattr(env, '_viewcode_modules'):
         return
+    
+    # Skip page generation for epub when disabled
+    if app.builder.name.startswith("epub") and not env.config.viewcode_enable_epub:
+        return
+    
     highlighter = app.builder.highlighter  # type: ignore
     urito = app.builder.get_relative_uri
 
@@ -292,4 +297,4 @@ def setup(app: Sphinx) -> Dict[str, Any]:
         'version': sphinx.__display_version__,
         'env_version': 1,
         'parallel_read_safe': True
-    }
+    }
\ No newline at end of file
diff --git a/tests/test_ext_viewcode.py b/tests/test_ext_viewcode.py
index 79864095b..f2ede3907 100644
--- a/tests/test_ext_viewcode.py
+++ b/tests/test_ext_viewcode.py
@@ -62,6 +62,14 @@ def test_linkcode(app, status, warning):
 
 
 @pytest.mark.sphinx(testroot='ext-viewcode-find')
+@pytest.mark.sphinx('epub', testroot='ext-viewcode')
+def test_viewcode_disable_epub(app, status, warning):
+    app.builder.env.config.viewcode_enable_epub = False
+    app.builder.build_all()
+    
+    # Check that no module pages were generated
+    assert not (app.outdir / '_modules').exists()
+
 def test_local_source_files(app, status, warning):
     def find_source(app, modname):
         if modname == 'not_a_package':
@@ -101,4 +109,4 @@ def test_local_source_files(app, status, warning):
     assert result.count('href="_modules/not_a_package/submodule.html#not_a_package.submodule.Class1"') == 1
 
     assert result.count('href="_modules/not_a_package/submodule.html#not_a_package.submodule.Class3.class_attr"') == 1
-    assert result.count('This is the class attribute class_attr') == 1
+    assert result.count('This is the class attribute class_attr') == 1
\ No newline at end of file
diff --git a/tox.ini b/tox.ini
index 21a0faec3..be1a9127e 100644
--- a/tox.ini
+++ b/tox.ini
@@ -28,7 +28,7 @@ setenv =
     PYTHONWARNINGS = all,ignore::ImportWarning:importlib._bootstrap_external,ignore::DeprecationWarning:site,ignore::DeprecationWarning:distutils,ignore::DeprecationWarning:pip._vendor.packaging.version
     PYTEST_ADDOPTS = {env:PYTEST_ADDOPTS:} --color yes
 commands=
-    python -X dev -m pytest --durations 25 {posargs}
+    python -X dev -m pytest -rA --durations 25 {posargs}
 
 [testenv:flake8]
 basepython = python3
