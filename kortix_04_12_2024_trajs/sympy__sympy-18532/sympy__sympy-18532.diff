diff --git a/sympy/core/basic.py b/sympy/core/basic.py
index 6866648d4e..7314221872 100644
--- a/sympy/core/basic.py
+++ b/sympy/core/basic.py
@@ -434,10 +434,9 @@ def _repr_latex_(self):
     def atoms(self, *types):
         """Returns the atoms that form the current object.
 
-        By default, only objects that are truly atomic and can't
-        be divided into smaller pieces are returned: symbols, numbers,
-        and number symbols like I and pi. It is possible to request
-        atoms of any type, however, as demonstrated below.
+        By default, only objects that have no args (leaf nodes) are returned.
+        It is possible to request specific types of atoms as well, as
+        demonstrated below.
 
         Examples
         ========
@@ -503,13 +502,17 @@ def atoms(self, *types):
         if types:
             types = tuple(
                 [t if isinstance(t, type) else type(t) for t in types])
+            result = set()
+            for expr in preorder_traversal(self):
+                if isinstance(expr, types):
+                    result.add(expr)
+            return result
         else:
-            types = (Atom,)
-        result = set()
-        for expr in preorder_traversal(self):
-            if isinstance(expr, types):
-                result.add(expr)
-        return result
+            result = set()
+            for expr in preorder_traversal(self):
+                if not hasattr(expr, 'args') or not expr.args:
+                    result.add(expr)
+            return result
 
     @property
     def free_symbols(self):
@@ -2066,4 +2069,4 @@ def _make_find_query(query):
         return lambda expr: isinstance(expr, query)
     elif isinstance(query, Basic):
         return lambda expr: expr.match(query) is not None
-    return query
+    return query
\ No newline at end of file
