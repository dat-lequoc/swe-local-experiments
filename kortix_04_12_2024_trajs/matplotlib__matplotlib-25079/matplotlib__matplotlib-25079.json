{
  "instance_id": "matplotlib__matplotlib-25079",
  "model_patch": "diff --git a/lib/matplotlib/collections.py b/lib/matplotlib/collections.py\nindex bf88dd2b68..05b8233571 100644\n--- a/lib/matplotlib/collections.py\n+++ b/lib/matplotlib/collections.py\n@@ -884,7 +884,20 @@ class Collection(artist.Artist, cm.ScalarMappable):\n                         'array is dropped.')\n                 # pcolormesh, scatter, maybe others flatten their _A\n                 self._alpha = self._alpha.reshape(self._A.shape)\n-            self._mapped_colors = self.to_rgba(self._A, self._alpha)\n+            \n+            # Ensure norm is properly initialized before use\n+            if not self.norm.scaled():\n+                self.norm.autoscale_None(self._A)\n+            \n+            try:\n+                self._mapped_colors = self.to_rgba(self._A, self._alpha)\n+            except ValueError as e:\n+                if \"Invalid vmin or vmax\" in str(e):\n+                    # Force norm to autoscale if validation fails\n+                    self.norm.autoscale(self._A)\n+                    self._mapped_colors = self.to_rgba(self._A, self._alpha)\n+                else:\n+                    raise\n \n         if self._face_is_mapped:\n             self._facecolors = self._mapped_colors\n@@ -2110,4 +2123,4 @@ class QuadMesh(Collection):\n         contained, info = self.contains(event)\n         if contained and self.get_array() is not None:\n             return self.get_array().ravel()[info[\"ind\"]]\n-        return None\n+        return None\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}