{
  "instance_id": "sympy__sympy-20154",
  "model_patch": "diff --git a/sympy/utilities/iterables.py b/sympy/utilities/iterables.py\nindex dd36dea304..aff8034e99 100644\n--- a/sympy/utilities/iterables.py\n+++ b/sympy/utilities/iterables.py\n@@ -1842,9 +1842,9 @@ def partitions(n, m=None, k=None, size=False):\n             break\n         room -= need\n         if size:\n-            yield sum(ms.values()), ms\n+            yield sum(ms.values()), ms.copy()\n         else:\n-            yield ms\n+            yield ms.copy()\n \n \n def ordered_partitions(n, m=None, sort=True):\n@@ -2728,4 +2728,4 @@ def roundrobin(*iterables):\n                 yield next()\n         except StopIteration:\n             pending -= 1\n-            nexts = itertools.cycle(itertools.islice(nexts, pending))\n+            nexts = itertools.cycle(itertools.islice(nexts, pending))\n\\ No newline at end of file\ndiff --git a/sympy/utilities/tests/test_iterables.py b/sympy/utilities/tests/test_iterables.py\nindex f3ebd270dc..04ec77edd1 100644\n--- a/sympy/utilities/tests/test_iterables.py\n+++ b/sympy/utilities/tests/test_iterables.py\n@@ -472,6 +472,13 @@ def test():\n \n \n def test_partitions():\n+    # Test dictionary independence\n+    p = list(partitions(5, k=3))\n+    p1 = p[0]\n+    p2 = p[1]\n+    p1[3] = 100  # Modify first partition\n+    assert p2 != p1  # Verify second partition is independent\n+    \n     ans = [[{}], [(0, {})]]\n     for i in range(2):\n         assert list(partitions(0, size=i)) == ans[i]\n@@ -833,4 +840,4 @@ def test_ibin():\n     assert list(ibin(2, 'all')) == [(0, 0), (0, 1), (1, 0), (1, 1)]\n     assert list(ibin(2, '', str=True)) == ['00', '01', '10', '11']\n     raises(ValueError, lambda: ibin(-.5))\n-    raises(ValueError, lambda: ibin(2, 1))\n+    raises(ValueError, lambda: ibin(2, 1))\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}