diff --git a/sympy/utilities/iterables.py b/sympy/utilities/iterables.py
index d96e76263b..1db37fce31 100644
--- a/sympy/utilities/iterables.py
+++ b/sympy/utilities/iterables.py
@@ -2106,10 +2106,20 @@ def uniq(seq, result=None):
     >>> list(uniq([[1], [2, 1], [1]]))
     [[1], [2, 1]]
     """
+    try:
+        # Try to get initial length
+        initial_len = len(seq)
+        has_len = True
+    except TypeError:
+        has_len = False
+    
     try:
         seen = set()
         result = result or []
         for i, s in enumerate(seq):
+            # Check for modification
+            if has_len and len(seq) != initial_len:
+                raise RuntimeError("sequence changed size during iteration")
             if not (s in seen or seen.add(s)):
                 yield s
     except TypeError:
@@ -2712,4 +2722,4 @@ def roundrobin(*iterables):
                 yield next()
         except StopIteration:
             pending -= 1
-            nexts = itertools.cycle(itertools.islice(nexts, pending))
+            nexts = itertools.cycle(itertools.islice(nexts, pending))
\ No newline at end of file
diff --git a/sympy/utilities/tests/test_iterables.py b/sympy/utilities/tests/test_iterables.py
index 030db33239..d021ffabd1 100644
--- a/sympy/utilities/tests/test_iterables.py
+++ b/sympy/utilities/tests/test_iterables.py
@@ -701,6 +701,10 @@ def test_uniq():
     assert list(uniq([[1], [2, 1], [1]])) == [[1], [2, 1]]
     assert list(uniq(permutations(i for i in [[1], 2, 2]))) == \
         [([1], 2, 2), (2, [1], 2), (2, 2, [1])]
+    
+    # Test sequence modification detection
+    lst = [1, 2, 3, 2, 1]
+    raises(RuntimeError, lambda: list(uniq(lst)) and lst.pop())
     assert list(uniq([2, 3, 2, 4, [2], [1], [2], [3], [1]])) == \
         [2, 3, 4, [2], [1], [3]]
 
@@ -823,4 +827,4 @@ def test_ibin():
     assert ibin(3, str=True) == '11'
     assert ibin(3, 3, str=True) == '011'
     assert list(ibin(2, 'all')) == [(0, 0), (0, 1), (1, 0), (1, 1)]
-    assert list(ibin(2, 'all', str=True)) == ['00', '01', '10', '11']
+    assert list(ibin(2, 'all', str=True)) == ['00', '01', '10', '11']
\ No newline at end of file
