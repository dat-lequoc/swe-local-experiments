{
  "instance_id": "sphinx-doc__sphinx-8273",
  "model_patch": "diff --git a/setup.py b/setup.py\nindex a404f1fa5..2c6848797 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -15,22 +15,22 @@ if sys.version_info < (3, 5):\n     sys.exit(1)\n \n install_requires = [\n-    'sphinxcontrib-applehelp',\n-    'sphinxcontrib-devhelp',\n+    'sphinxcontrib-applehelp<=1.0.7',\n+    'sphinxcontrib-devhelp<=1.0.5',\n     'sphinxcontrib-jsmath',\n-    'sphinxcontrib-htmlhelp',\n-    'sphinxcontrib-serializinghtml',\n-    'sphinxcontrib-qthelp',\n-    'Jinja2>=2.3',\n+    'sphinxcontrib-htmlhelp<=2.0.4',\n+    'sphinxcontrib-serializinghtml<=1.1.9',\n+    'sphinxcontrib-qthelp<=1.0.6',\n+    'Jinja2<3.0',\n     'Pygments>=2.0',\n     'docutils>=0.12',\n     'snowballstemmer>=1.1',\n     'babel>=1.3',\n-    'alabaster>=0.7,<0.8',\n+    'alabaster>=0.7,<0.7.12',\n     'imagesize',\n     'requests>=2.5.0',\n     'setuptools',\n-    'packaging',\n+    'packaging', 'markupsafe<=2.0.1',\n ]\n \n extras_require = {\ndiff --git a/sphinx/builders/manpage.py b/sphinx/builders/manpage.py\nindex 4166dece9..be08d7bd2 100644\n--- a/sphinx/builders/manpage.py\n+++ b/sphinx/builders/manpage.py\n@@ -8,6 +8,7 @@\n     :license: BSD, see LICENSE for details.\n \"\"\"\n \n+import os\n from os import path\n from typing import Any, Dict, List, Set, Tuple, Union\n \n@@ -46,6 +47,8 @@ class ManualPageBuilder(Builder):\n         if not self.config.man_pages:\n             logger.warning(__('no \"man_pages\" config value found; no manual pages '\n                               'will be written'))\n+        if not hasattr(self.config, 'man_make_section_directory'):\n+            self.config.man_make_section_directory = True\n \n     def get_outdated_docs(self) -> Union[str, List[str]]:\n         return 'all manpages'  # for now\n@@ -82,8 +85,17 @@ class ManualPageBuilder(Builder):\n \n             targetname = '%s.%s' % (name, section)\n             logger.info(darkgreen(targetname) + ' { ', nonl=True)\n+            \n+            if self.config.man_make_section_directory:\n+                section_dir = path.join(self.outdir, 'man%s' % section)\n+                if not path.exists(section_dir):\n+                    os.makedirs(section_dir)\n+                destination_path = path.join(section_dir, targetname)\n+            else:\n+                destination_path = path.join(self.outdir, targetname)\n+                \n             destination = FileOutput(\n-                destination_path=path.join(self.outdir, targetname),\n+                destination_path=destination_path,\n                 encoding='utf-8')\n \n             tree = self.env.get_doctree(docname)\n@@ -115,9 +127,10 @@ def setup(app: Sphinx) -> Dict[str, Any]:\n \n     app.add_config_value('man_pages', default_man_pages, None)\n     app.add_config_value('man_show_urls', False, None)\n+    app.add_config_value('man_make_section_directory', True, None)\n \n     return {\n         'version': 'builtin',\n         'parallel_read_safe': True,\n         'parallel_write_safe': True,\n-    }\n+    }\n\\ No newline at end of file\ndiff --git a/tests/test_build_manpage.py b/tests/test_build_manpage.py\nindex c3c41a2ae..c9f8b475b 100644\n--- a/tests/test_build_manpage.py\n+++ b/tests/test_build_manpage.py\n@@ -17,7 +17,7 @@ from sphinx.config import Config\n @pytest.mark.sphinx('man')\n def test_all(app, status, warning):\n     app.builder.build_all()\n-    assert (app.outdir / 'sphinxtests.1').exists()\n+    assert (app.outdir / 'man1' / 'sphinxtests.1').exists()\n \n     content = (app.outdir / 'sphinxtests.1').read_text()\n     assert r'\\fBprint \\fP\\fIi\\fP\\fB\\en\\fP' in content\n@@ -33,7 +33,7 @@ def test_all(app, status, warning):\n @pytest.mark.sphinx('man', testroot='directive-code')\n def test_captioned_code_block(app, status, warning):\n     app.builder.build_all()\n-    content = (app.outdir / 'python.1').read_text()\n+    content = (app.outdir / 'man1' / 'python.1').read_text()\n \n     assert ('.sp\\n'\n             'caption \\\\fItest\\\\fP rb\\n'\n@@ -64,5 +64,5 @@ def test_default_man_pages():\n @pytest.mark.sphinx('man', testroot='markup-rubric')\n def test_rubric(app, status, warning):\n     app.build()\n-    content = (app.outdir / 'python.1').read_text()\n-    assert 'This is a rubric\\n' in content\n+    content = (app.outdir / 'man1' / 'python.1').read_text()\n+    assert 'This is a rubric\\n' in content\n\\ No newline at end of file\ndiff --git a/tox.ini b/tox.ini\nindex a61299979..e2baccc07 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -28,7 +28,7 @@ setenv =\n     PYTHONWARNINGS = all,ignore::ImportWarning:importlib._bootstrap_external,ignore::DeprecationWarning:site,ignore::DeprecationWarning:distutils\n     PYTEST_ADDOPTS = --color yes\n commands=\n-    pytest --durations 25 {posargs}\n+    pytest -rA --durations 25 {posargs}\n \n [testenv:flake8]\n basepython = python3\n",
  "model_name_or_path": "KortixAI"
}