{
  "instance_id": "pytest-dev__pytest-5692",
  "model_patch": "diff --git a/src/_pytest/junitxml.py b/src/_pytest/junitxml.py\nindex 15c630b1d..b75b67f06 100644\n--- a/src/_pytest/junitxml.py\n+++ b/src/_pytest/junitxml.py\n@@ -13,6 +13,8 @@ import os\n import re\n import sys\n import time\n+import socket\n+from datetime import datetime\n \n import py\n \n@@ -482,6 +484,7 @@ class LogXML:\n         self.log_passing_tests = log_passing_tests\n         self.report_duration = report_duration\n         self.family = family\n+        self.hostname = socket.gethostname()\n         self.stats = dict.fromkeys([\"error\", \"passed\", \"failure\", \"skipped\"], 0)\n         self.node_reporters = {}  # nodeid -> _NodeReporter\n         self.node_reporters_ordered = []\n@@ -639,6 +642,7 @@ class LogXML:\n \n     def pytest_sessionstart(self):\n         self.suite_start_time = time.time()\n+        self.suite_start_datetime = datetime.utcnow()\n \n     def pytest_sessionfinish(self):\n         dirname = os.path.dirname(os.path.abspath(self.logfile))\n@@ -666,6 +670,8 @@ class LogXML:\n             skipped=self.stats[\"skipped\"],\n             tests=numtests,\n             time=\"%.3f\" % suite_time_delta,\n+            hostname=bin_xml_escape(self.hostname),\n+            timestamp=self.suite_start_datetime.isoformat().split(\".\")[0],\n         )\n         logfile.write(Junit.testsuites([suite_node]).unicode(indent=0))\n         logfile.close()\n@@ -688,4 +694,4 @@ class LogXML:\n                     for name, value in self.global_properties\n                 ]\n             )\n-        return \"\"\n+        return \"\"\n\\ No newline at end of file\ndiff --git a/testing/test_junitxml.py b/testing/test_junitxml.py\nindex 3196f0ebd..af48bf609 100644\n--- a/testing/test_junitxml.py\n+++ b/testing/test_junitxml.py\n@@ -112,6 +112,11 @@ class TestPython:\n         assert result.ret\n         node = dom.find_first_by_tag(\"testsuite\")\n         node.assert_attr(name=\"pytest\", errors=0, failures=1, skipped=2, tests=5)\n+        assert node[\"hostname\"] is not None\n+        assert node[\"timestamp\"] is not None\n+        # Verify timestamp format\n+        import re\n+        assert re.match(r\"\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\", node[\"timestamp\"])\n \n     def test_summing_simple_with_errors(self, testdir):\n         testdir.makepyfile(\n@@ -1375,4 +1380,4 @@ def test_logging_passing_tests_disabled_does_not_log_test_output(testdir):\n     assert result.ret == 0\n     node = dom.find_first_by_tag(\"testcase\")\n     assert len(node.find_by_tag(\"system-err\")) == 0\n-    assert len(node.find_by_tag(\"system-out\")) == 0\n+    assert len(node.find_by_tag(\"system-out\")) == 0\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}