{
  "instance_id": "sympy__sympy-13437",
  "model_patch": "diff --git a/sympy/functions/combinatorial/numbers.py b/sympy/functions/combinatorial/numbers.py\nindex 896729ac87..832fd3fc07 100644\n--- a/sympy/functions/combinatorial/numbers.py\n+++ b/sympy/functions/combinatorial/numbers.py\n@@ -434,6 +434,8 @@ def _bell_incomplete_poly(n, k, symbols):\n \n     @classmethod\n     def eval(cls, n, k_sym=None, symbols=None):\n+        if n is S.Infinity:\n+            return S.Infinity\n         if n.is_Integer and n.is_nonnegative:\n             if k_sym is None:\n                 return Integer(cls._bell(int(n)))\n@@ -1648,4 +1650,4 @@ def nT(n, k=None):\n     tot = 0\n     for discard in m.enum_range(n[_M], k-1, k):\n         tot += 1\n-    return tot\n+    return tot\n\\ No newline at end of file\ndiff --git a/sympy/functions/combinatorial/tests/test_comb_numbers.py b/sympy/functions/combinatorial/tests/test_comb_numbers.py\nindex ad0fd4fe85..62ad926204 100644\n--- a/sympy/functions/combinatorial/tests/test_comb_numbers.py\n+++ b/sympy/functions/combinatorial/tests/test_comb_numbers.py\n@@ -79,6 +79,10 @@ def test_fibonacci():\n \n def test_bell():\n     assert [bell(n) for n in range(8)] == [1, 1, 2, 5, 15, 52, 203, 877]\n+    \n+    # Test limit behavior\n+    n = Symbol('n')\n+    assert limit(bell(n), n, oo) == oo\n \n     assert bell(0, x) == 1\n     assert bell(1, x) == x\n@@ -556,4 +560,4 @@ def test_issue_8601():\n     c1 = catalan(-5.6).evalf()\n     assert str(c1) == '6.93334070531408e-5'\n     c2 = catalan(-35.4).evalf()\n-    assert str(c2) == '-4.14189164517449e-24'\n+    assert str(c2) == '-4.14189164517449e-24'\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}