{
  "instance_id": "django__django-16910",
  "model_patch": "diff --git a/tests/select_related/tests.py b/tests/select_related/tests.py\nindex 68fe7a906f..b4a6478f3f 100644\n--- a/tests/select_related/tests.py\n+++ b/tests/select_related/tests.py\n@@ -194,6 +194,30 @@ class SelectRelatedTests(TestCase):\n         with self.assertNumQueries(1):\n             self.assertEqual(species.genus.species_set.first().name, \"melanogaster\")\n \n+    def test_only_with_reverse_one_to_one(self):\n+        \"\"\"\n+        Test that only() works correctly with select_related() on reverse one-to-one relations.\n+        \"\"\"\n+        # Create a hybrid species with a parent\n+        parent_1, parent_2 = Species.objects.all()[:2]\n+        hybrid = HybridSpecies.objects.create(\n+            name=\"hybrid\", parent_1=parent_1, parent_2=parent_2\n+        )\n+        \n+        # Query using only() with select_related() on the reverse relation\n+        qs = Species.objects.filter(pk=parent_1.pk).select_related(\n+            \"child_1\"\n+        ).only(\"name\", \"child_1__name\")\n+        \n+        # Check that the query returns the correct object\n+        obj = qs.get()\n+        self.assertEqual(obj.name, parent_1.name)\n+        self.assertEqual(obj.child_1.name, \"hybrid\")\n+        \n+        # Verify that other fields are deferred\n+        self.assertIs(obj.child_1.__class__, HybridSpecies)\n+        self.assertIs(type(obj.child_1.parent_2_id), int)  # Should be deferred but FK still accessible\n+\n     def test_select_related_after_values(self):\n         \"\"\"\n         Running select_related() after calling values() raises a TypeError\n@@ -281,4 +305,4 @@ class SelectRelatedValidationTests(SimpleTestCase):\n         with self.assertRaisesMessage(\n             FieldError, self.invalid_error % (\"content_object\", \"content_type\")\n         ):\n-            list(TaggedItem.objects.select_related(\"content_object\"))\n+            list(TaggedItem.objects.select_related(\"content_object\"))\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}