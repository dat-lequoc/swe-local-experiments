diff --git a/sympy/utilities/lambdify.py b/sympy/utilities/lambdify.py
index f71bea25f5..663fe3285e 100644
--- a/sympy/utilities/lambdify.py
+++ b/sympy/utilities/lambdify.py
@@ -707,7 +707,7 @@ def _preprocess(self, args, expr):
 
         Returns string form of args, and updated expr.
         """
-        from sympy import Dummy, Symbol, Function, flatten
+        from sympy import Dummy, Symbol, Function, flatten, MatrixSymbol
         from sympy.matrices import DeferredVector
 
         dummify = self._dummify
@@ -725,11 +725,12 @@ def _preprocess(self, args, expr):
                 argstrs.append(nested_argstrs)
             elif isinstance(arg, DeferredVector):
                 argstrs.append(str(arg))
-            elif isinstance(arg, Symbol):
+            elif isinstance(arg, (Symbol, MatrixSymbol)):
                 argrep = self._argrepr(arg)
 
                 if dummify or not self._is_safe_ident(argrep):
-                    dummy = Dummy()
+                    dummy = Dummy() if isinstance(arg, Symbol) else \
+                           MatrixSymbol(Dummy().name, *arg.shape)
                     argstrs.append(self._argrepr(dummy))
                     expr = self._subexpr(expr, {arg: dummy})
                 else:
@@ -930,4 +931,4 @@ def implemented_function(symfunc, implementation):
     elif not isinstance(symfunc, UndefinedFunction):
         raise ValueError('symfunc should be either a string or'
                          ' an UndefinedFunction instance.')
-    return symfunc
+    return symfunc
\ No newline at end of file
diff --git a/sympy/utilities/tests/test_lambdify.py b/sympy/utilities/tests/test_lambdify.py
index 149a7e3136..34a1330c50 100644
--- a/sympy/utilities/tests/test_lambdify.py
+++ b/sympy/utilities/tests/test_lambdify.py
@@ -884,6 +884,12 @@ def test_lambdify_inspect():
     # details
     assert 'x**2' in inspect.getsource(f)
 
+def test_matrix_symbol_special_name():
+    from sympy import MatrixSymbol
+    curlyv = MatrixSymbol("{v}", 2, 1)
+    f = lambdify(curlyv, curlyv, dummify=True)
+    assert isinstance(f, type(lambda: None))
+
 def test_issue_14941():
     x, y = Dummy(), Dummy()
 
@@ -897,4 +903,4 @@ def test_issue_14941():
 
     # test list
     f3 = lambdify([x, y], [y, x], 'sympy')
-    assert f3(2, 3) == [3, 2]
+    assert f3(2, 3) == [3, 2]
\ No newline at end of file
