{
  "instance_id": "django__django-14997",
  "model_patch": "diff --git a/django/db/backends/sqlite3/schema.py b/django/db/backends/sqlite3/schema.py\nindex f0c81c123b..93be26472a 100644\n--- a/django/db/backends/sqlite3/schema.py\n+++ b/django/db/backends/sqlite3/schema.py\n@@ -6,7 +6,7 @@ from django.db import NotSupportedError\n from django.db.backends.base.schema import BaseDatabaseSchemaEditor\n from django.db.backends.ddl_references import Statement\n from django.db.backends.utils import strip_quotes\n-from django.db.models import UniqueConstraint\n+from django.db.models import UniqueConstraint, F\n from django.db.transaction import atomic\n \n \n@@ -236,7 +236,24 @@ class DatabaseSchemaEditor(BaseDatabaseSchemaEditor):\n                 if delete_field.name not in index.fields\n             ]\n \n-        constraints = list(model._meta.constraints)\n+        constraints = []\n+        for constraint in model._meta.constraints:\n+            if isinstance(constraint, UniqueConstraint):\n+                # Handle F() expressions in unique constraints for SQLite\n+                fields = []\n+                for field in constraint.fields:\n+                    if isinstance(field, F):\n+                        # Convert F() expression to column name\n+                        fields.append(field.name)\n+                    else:\n+                        fields.append(field)\n+                constraint = UniqueConstraint(\n+                    *fields,\n+                    name=constraint.name,\n+                    condition=constraint.condition,\n+                    deferrable=constraint.deferrable,\n+                )\n+            constraints.append(constraint)\n \n         # Provide isolated instances of the fields to the new model body so\n         # that the existing model's internals aren't interfered with when\n@@ -441,4 +458,4 @@ class DatabaseSchemaEditor(BaseDatabaseSchemaEditor):\n             self._remake_table(model)\n \n     def _collate_sql(self, collation):\n-        return 'COLLATE ' + collation\n+        return 'COLLATE ' + collation\n\\ No newline at end of file\n",
  "model_name_or_path": "KortixAI"
}