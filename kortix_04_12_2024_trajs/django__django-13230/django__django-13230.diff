diff --git a/django/contrib/syndication/views.py b/django/contrib/syndication/views.py
index 68ffb0bfe0..462197387e 100644
--- a/django/contrib/syndication/views.py
+++ b/django/contrib/syndication/views.py
@@ -214,6 +214,7 @@ class Feed:
                 author_link=author_link,
                 categories=self._get_dynamic_attr('item_categories', item),
                 item_copyright=self._get_dynamic_attr('item_copyright', item),
+                comments=self._get_dynamic_attr('item_comments', item),
                 **self.item_extra_kwargs(item)
             )
-        return feed
+        return feed
\ No newline at end of file
diff --git a/django/utils/feedgenerator.py b/django/utils/feedgenerator.py
index f08e89b25c..d69b0d1dd3 100644
--- a/django/utils/feedgenerator.py
+++ b/django/utils/feedgenerator.py
@@ -261,13 +261,16 @@ class Rss201rev2Feed(RssFeed):
 
         if item['pubdate'] is not None:
             handler.addQuickElement("pubDate", rfc2822_date(item['pubdate']))
-        if item['comments'] is not None:
-            handler.addQuickElement("comments", item['comments'])
         if item['unique_id'] is not None:
             guid_attrs = {}
             if isinstance(item.get('unique_id_is_permalink'), bool):
                 guid_attrs['isPermaLink'] = str(item['unique_id_is_permalink']).lower()
             handler.addQuickElement("guid", item['unique_id'], guid_attrs)
+
+        # Add comments after guid per RSS 2.0 spec
+        if item['comments'] is not None:
+            handler.addQuickElement("comments", item['comments'])
+
         if item['ttl'] is not None:
             handler.addQuickElement("ttl", item['ttl'])
 
@@ -389,4 +392,4 @@ class Atom1Feed(SyndicationFeed):
 
 # This isolates the decision of what the system default is, so calling code can
 # do "feedgenerator.DefaultFeed" instead of "feedgenerator.Rss201rev2Feed".
-DefaultFeed = Rss201rev2Feed
+DefaultFeed = Rss201rev2Feed
\ No newline at end of file
diff --git a/tests/syndication_tests/feeds.py b/tests/syndication_tests/feeds.py
index 4e9b1170b1..5c0bd85d56 100644
--- a/tests/syndication_tests/feeds.py
+++ b/tests/syndication_tests/feeds.py
@@ -190,6 +190,14 @@ class TestCustomFeed(TestAtomFeed):
     feed_type = MyCustomAtom1Feed
 
 
+class TestFeedWithComments(TestRss2Feed):
+    """
+    A feed to test item comments support.
+    """
+    def item_comments(self, item):
+        return 'http://example.com/comments/%s/' % item.pk
+
+
 class TestSingleEnclosureAtomFeed(TestAtomFeed):
     """
     A feed to test that Atom feeds work with a single enclosure.
@@ -212,4 +220,4 @@ class TestMultipleEnclosureAtomFeed(TestAtomFeed):
         return [
             feedgenerator.Enclosure('http://example.com/hello.png', '0', 'image/png'),
             feedgenerator.Enclosure('http://example.com/goodbye.png', '0', 'image/png'),
-        ]
+        ]
\ No newline at end of file
diff --git a/tests/syndication_tests/tests.py b/tests/syndication_tests/tests.py
index dab7ebab33..d371e766f1 100644
--- a/tests/syndication_tests/tests.py
+++ b/tests/syndication_tests/tests.py
@@ -59,6 +59,23 @@ class FeedTestCase(TestCase):
 
 @override_settings(ROOT_URLCONF='syndication_tests.urls')
 class SyndicationFeedTest(FeedTestCase):
+    def test_rss2_feed_with_comments(self):
+        """
+        Test the structure and content of feeds with item comments.
+        """
+        response = self.client.get('/syndication/rss2/comments/')
+        doc = minidom.parseString(response.content)
+        feed = doc.getElementsByTagName('rss')[0]
+        chan = feed.getElementsByTagName('channel')[0]
+        items = chan.getElementsByTagName('item')
+
+        for item in items:
+            self.assertChildNodes(item, [
+                'title', 'link', 'description', 'guid', 'category',
+                'pubDate', 'author', 'comments',
+            ])
+            comments = item.getElementsByTagName('comments')[0]
+            self.assertTrue(comments.firstChild.wholeText.startswith('http://example.com/comments/'))
     """
     Tests for the high-level syndication feed framework.
     """
@@ -511,4 +528,4 @@ class SyndicationFeedTest(FeedTestCase):
         )
         for prefix in prefix_domain_mapping:
             with self.subTest(prefix=prefix):
-                self.assertEqual(views.add_domain(*prefix[0]), prefix[1])
+                self.assertEqual(views.add_domain(*prefix[0]), prefix[1])
\ No newline at end of file
