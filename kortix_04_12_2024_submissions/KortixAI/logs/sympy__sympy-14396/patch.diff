diff --git a/sympy/polys/polyoptions.py b/sympy/polys/polyoptions.py
index 6e504a3057..4ee1da8d6d 100644
--- a/sympy/polys/polyoptions.py
+++ b/sympy/polys/polyoptions.py
@@ -405,7 +405,7 @@ class Domain(with_metaclass(OptionType, Option)):
     _re_realfield = re.compile(r"^(R|RR)(_(\d+))?$")
     _re_complexfield = re.compile(r"^(C|CC)(_(\d+))?$")
     _re_finitefield = re.compile(r"^(FF|GF)\((\d+)\)$")
-    _re_polynomial = re.compile(r"^(Z|ZZ|Q|QQ)\[(.+)\]$")
+    _re_polynomial = re.compile(r"^(Z|ZZ|Q|QQ|R|RR)\[(.+)\]$")
     _re_fraction = re.compile(r"^(Z|ZZ|Q|QQ)\((.+)\)$")
     _re_algebraic = re.compile(r"^(Q|QQ)\<(.+)\>$")
 
@@ -459,6 +459,8 @@ def preprocess(cls, domain):
 
                 if ground in ['Z', 'ZZ']:
                     return sympy.polys.domains.ZZ.poly_ring(*gens)
+                elif ground in ['R', 'RR']:
+                    return sympy.polys.domains.RR.poly_ring(*gens)
                 else:
                     return sympy.polys.domains.QQ.poly_ring(*gens)
 
@@ -480,7 +482,7 @@ def preprocess(cls, domain):
                 gens = list(map(sympify, r.groups()[1].split(',')))
                 return sympy.polys.domains.QQ.algebraic_field(*gens)
 
-        raise OptionError('expected a valid domain specification, got %s' % domain)
+        raise OptionError("expected a valid domain specification (e.g. ZZ, QQ, RR, ZZ[x], QQ[x], RR[x]), got %s" % domain)
 
     @classmethod
     def postprocess(cls, options):
@@ -772,4 +774,4 @@ def set_defaults(options, **defaults):
 
     return options
 
-Options._init_dependencies_order()
+Options._init_dependencies_order()
\ No newline at end of file
diff --git a/sympy/polys/tests/test_polyoptions.py b/sympy/polys/tests/test_polyoptions.py
index cbc9681747..8e4d466999 100644
--- a/sympy/polys/tests/test_polyoptions.py
+++ b/sympy/polys/tests/test_polyoptions.py
@@ -156,6 +156,9 @@ def test_Greedy_postprocess():
 
 def test_Domain_preprocess():
     assert Domain.preprocess(ZZ) == ZZ
+    assert Domain.preprocess('RR[x]') == sympy.polys.domains.RR.poly_ring(x)
+    assert Domain.preprocess('RR[x,y]') == sympy.polys.domains.RR.poly_ring(x,y)
+    assert Domain.preprocess('RR[x,y,z]') == sympy.polys.domains.RR.poly_ring(x,y,z)
     assert Domain.preprocess(QQ) == QQ
     assert Domain.preprocess(EX) == EX
     assert Domain.preprocess(FF(2)) == FF(2)
@@ -473,4 +476,4 @@ def test_Method_postprocess():
     opt = {'method': 'f5b'}
     Method.postprocess(opt)
 
-    assert opt == {'method': 'f5b'}
+    assert opt == {'method': 'f5b'}
\ No newline at end of file
