diff --git a/tests/urlpatterns/edge_cases.py b/tests/urlpatterns/edge_cases.py
new file mode 100644
index 0000000000..b88ed47fd3
--- /dev/null
+++ b/tests/urlpatterns/edge_cases.py
@@ -0,0 +1,38 @@
+from django.test import SimpleTestCase
+from django.test.utils import override_settings
+from django.urls import re_path, resolve, Resolver404
+from django.http import HttpResponse
+
+def test_view(request, format='html'):
+    return HttpResponse(format)
+
+urlpatterns = [
+    # Using non-capturing group for optional parameter
+    re_path(r'^module/?(?:(?P<format>html|json|xml)/?)?$', test_view, name='test_view'),
+]
+
+@override_settings(ROOT_URLCONF='urlpatterns.edge_cases')
+class OptionalURLParamsEdgeCasesTests(SimpleTestCase):
+    def test_optional_param_edge_cases(self):
+        # Test with valid format parameter
+        match = resolve('/module/json/')
+        response = match.func(request=None, **match.kwargs)
+        self.assertEqual(response.content.decode(), 'json')
+
+        # Test without format parameter (should use default)
+        match = resolve('/module/')
+        response = match.func(request=None, **match.kwargs)
+        self.assertEqual(response.content.decode(), 'html')
+
+        # Test with trailing slash variations
+        match = resolve('/module')
+        response = match.func(request=None, **match.kwargs)
+        self.assertEqual(response.content.decode(), 'html')
+
+        # Test with invalid format parameter
+        with self.assertRaises(Resolver404):
+            resolve('/module/invalid/')
+
+        # Test with empty format parameter
+        with self.assertRaises(Resolver404):
+            resolve('/module//')
\ No newline at end of file
diff --git a/tests/urlpatterns/test_optional_params.py b/tests/urlpatterns/test_optional_params.py
new file mode 100644
index 0000000000..567622540d
--- /dev/null
+++ b/tests/urlpatterns/test_optional_params.py
@@ -0,0 +1,24 @@
+from django.test import SimpleTestCase
+from django.test.utils import override_settings
+from django.urls import re_path, resolve
+from django.http import HttpResponse
+
+def test_view(request, format='html'):
+    return HttpResponse(format)
+
+urlpatterns = [
+    re_path(r'^module/(?P<format>(html|json|xml))?/?$', test_view, name='test_view'),
+]
+
+@override_settings(ROOT_URLCONF='urlpatterns.test_optional_params')
+class OptionalURLParamsTests(SimpleTestCase):
+    def test_optional_param_with_default(self):
+        # Test with format parameter
+        match = resolve('/module/json/')
+        response = match.func(request=match.args[0] if match.args else None, **match.kwargs)
+        self.assertEqual(response.content.decode(), 'json')
+
+        # Test without format parameter (should use default)
+        match = resolve('/module/')
+        response = match.func(request=None, **match.kwargs)
+        self.assertEqual(response.content.decode(), 'html')
\ No newline at end of file
