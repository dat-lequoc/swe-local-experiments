diff --git a/sympy/integrals/intpoly.py b/sympy/integrals/intpoly.py
index fc72bd206f..527b8dbcd5 100644
--- a/sympy/integrals/intpoly.py
+++ b/sympy/integrals/intpoly.py
@@ -593,7 +593,23 @@ def decompose(expr, separate=False):
         poly_dict[0] = expr
 
     if separate:
-        return list(poly_dict.values())
+        # Sort by total degree and then lexicographically
+        def sort_key(term):
+            if term.is_number:
+                return (0, str(term))
+            if term.is_Symbol:
+                return (1, str(term))
+            if term.is_Mul:
+                degree = sum(exp for base, exp in term.as_powers_dict().items() if not base.is_number)
+                return (degree, str(term))
+            if term.is_Pow:
+                base, exp = term.args
+                if base.is_Symbol:
+                    return (exp, str(term))
+                return (sum(exp for b, exp in base.as_powers_dict().items() if not b.is_number), str(term))
+            return (sum(exp for base, exp in term.as_powers_dict().items() if not base.is_number), str(term))
+            
+        return sorted(poly_dict.values(), key=sort_key)
     return poly_dict
 
 
@@ -778,4 +794,4 @@ def plot_polynomial(expr):
     if len(gens) == 2:
         plot3d(expr)
     else:
-        plot(expr)
+        plot(expr)
\ No newline at end of file
diff --git a/sympy/integrals/tests/test_intpoly.py b/sympy/integrals/tests/test_intpoly.py
index 1e0cc29731..2b39d11623 100644
--- a/sympy/integrals/tests/test_intpoly.py
+++ b/sympy/integrals/tests/test_intpoly.py
@@ -26,6 +26,7 @@ def test_decompose():
     assert decompose(9*x**2 + y + 4*x + x**3 + y**2*x + 3) ==\
         {0: 3, 1: 4*x + y, 2: 9*x**2, 3: x**3 + x*y**2}
 
+    # Test ordered decomposition with separate=True
     assert decompose(x, True) == [x]
     assert decompose(x ** 2, True) == [x ** 2]
     assert decompose(x * y, True) == [x * y]
@@ -34,7 +35,11 @@ def test_decompose():
     assert decompose(8 * x ** 2 + 4 * y + 7, True) == [7, 4*y, 8*x**2]
     assert decompose(x ** 2 + 3 * y * x, True) == [x ** 2, 3 * x * y]
     assert decompose(9 * x ** 2 + y + 4 * x + x ** 3 + y ** 2 * x + 3, True) == \
-           [3, y, x**3, 4*x, 9*x**2, x*y**2]
+           [3, y, 4*x, 9*x**2, x**3, x*y**2]
+           
+    # Additional tests for consistent ordering
+    assert decompose(y**2 + x + 1, True) == [1, x, y**2]
+    assert decompose(x**2*y + x*y**2 + x + y, True) == [x, y, x**2*y, x*y**2]
 
 
 def test_best_origin():
@@ -165,4 +170,4 @@ def test_polytopes_intersecting_sides():
                    Point(-1.605, -2.308), Point(4.516, -0.771),
                    Point(4.203, 0.478))
     assert polytope_integrate(fig6, x**2 + x*y + y**2) ==\
-        S(88161333955921)/(3*10**12)
+        S(88161333955921)/(3*10**12)
\ No newline at end of file
