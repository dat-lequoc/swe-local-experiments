diff --git a/lib/matplotlib/legend.py b/lib/matplotlib/legend.py
index 9e5b903d59..ab34409171 100644
--- a/lib/matplotlib/legend.py
+++ b/lib/matplotlib/legend.py
@@ -314,6 +314,7 @@ class Legend(Artist):
         prop=None,           # properties for the legend texts
         fontsize=None,       # keyword to set font size directly
         labelcolor=None,     # keyword to set the text color
+        draggable=False,     # whether the legend can be dragged
 
         # spacing & pad defined as a fraction of the font-size
         borderpad=None,      # whitespace inside the legend border
@@ -538,6 +539,8 @@ class Legend(Artist):
 
         self.set_title(title, prop=title_prop_fp)
         self._draggable = None
+        if draggable:
+            self.set_draggable(True)
 
         # set the text color
 
@@ -1258,4 +1261,4 @@ def _parse_legend_args(axs, *args, handles=None, labels=None, **kwargs):
     else:
         raise TypeError('Invalid arguments to legend.')
 
-    return handles, labels, extra_args, kwargs
+    return handles, labels, extra_args, kwargs
\ No newline at end of file
diff --git a/lib/matplotlib/tests/test_legend.py b/lib/matplotlib/tests/test_legend.py
index 16847e0be6..2e6a0a3933 100644
--- a/lib/matplotlib/tests/test_legend.py
+++ b/lib/matplotlib/tests/test_legend.py
@@ -782,6 +782,16 @@ def test_get_set_draggable():
     legend.set_draggable(False)
     assert not legend.get_draggable()
 
+def test_draggable_parameter():
+    # Test draggable parameter in legend creation
+    fig, ax = plt.subplots()
+    ax.plot([1, 2, 3], label='test')
+    legend = ax.legend(draggable=True)
+    assert legend.get_draggable()
+    
+    legend2 = ax.legend(draggable=False)
+    assert not legend2.get_draggable()
+
 
 def test_alpha_handles():
     x, n, hh = plt.hist([1, 2, 3], alpha=0.25, label='data', color='red')
@@ -961,4 +971,4 @@ def test_ncol_ncols(fig_test, fig_ref):
     strings = ["a", "b", "c", "d", "e", "f"]
     ncols = 3
     fig_test.legend(strings, ncol=ncols)
-    fig_ref.legend(strings, ncols=ncols)
+    fig_ref.legend(strings, ncols=ncols)
\ No newline at end of file
