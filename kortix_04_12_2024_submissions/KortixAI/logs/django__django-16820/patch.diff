diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py
index b89b6b511b..a1a161b0bc 100644
--- a/django/db/migrations/operations/models.py
+++ b/django/db/migrations/operations/models.py
@@ -647,6 +647,27 @@ class AlterIndexTogether(AlterTogetherOptionOperation):
     def __init__(self, name, index_together):
         super().__init__(name, index_together)
 
+    def reduce(self, operation, app_label):
+        # Handle consecutive AlterIndexTogether operations
+        if isinstance(operation, AlterIndexTogether) and self.name_lower == operation.name_lower:
+            return [operation]
+        
+        # Convert index_together to AddIndex operations
+        if self.option_value:
+            indexes = []
+            for fields in self.option_value:
+                index_name = f"{self.name_lower}_{'_'.join(fields)}_idx"
+                indexes.append(
+                    AddIndex(
+                        self.name,
+                        models.Index(fields=list(fields), name=index_name)
+                    )
+                )
+            return indexes
+        
+        # Let parent handle other cases
+        return super().reduce(operation, app_label)
+
 
 class AlterOrderWithRespectTo(ModelOptionOperation):
     """Represent a change with the order_with_respect_to option."""
@@ -1139,4 +1160,4 @@ class RemoveConstraint(IndexOperation):
 
     @property
     def migration_name_fragment(self):
-        return "remove_%s_%s" % (self.model_name_lower, self.name.lower())
+        return "remove_%s_%s" % (self.model_name_lower, self.name.lower())
\ No newline at end of file
diff --git a/tests/migrations/test_optimizer.py b/tests/migrations/test_optimizer.py
index 2f6616ad5b..9992ef9e91 100644
--- a/tests/migrations/test_optimizer.py
+++ b/tests/migrations/test_optimizer.py
@@ -254,6 +254,32 @@ class OptimizerTests(SimpleTestCase):
             migrations.AlterIndexTogether("Foo", [["a", "c"]]),
         )
 
+    def test_index_together_to_indexes_conversion(self):
+        """
+        AlterIndexTogether should be converted to AddIndex operations during optimization.
+        """
+        self.assertOptimizesTo(
+            [
+                migrations.AlterIndexTogether("Foo", [["a", "b"], ["c", "d"]]),
+            ],
+            [
+                migrations.AddIndex(
+                    "Foo",
+                    models.Index(fields=["a", "b"], name="foo_a_b_idx"),
+                ),
+                migrations.AddIndex(
+                    "Foo",
+                    models.Index(fields=["c", "d"], name="foo_c_d_idx"),
+                ),
+            ],
+        )
+
+        # Empty index_together should optimize to empty list
+        self.assertOptimizesTo(
+            [migrations.AlterIndexTogether("Foo", set())],
+            [],
+        )
+
     def test_alter_alter_owrt_model(self):
         self._test_alter_alter(
             migrations.AlterOrderWithRespectTo("Foo", "a"),
@@ -1171,4 +1197,4 @@ class OptimizerTests(SimpleTestCase):
                 migrations.RemoveIndex("Pony", "idx_pony_weight_pink"),
             ],
             [],
-        )
+        )
\ No newline at end of file
diff --git a/tests/migrations/test_settings.py b/tests/migrations/test_settings.py
new file mode 100644
index 0000000000..43f6913ffa
--- /dev/null
+++ b/tests/migrations/test_settings.py
@@ -0,0 +1,14 @@
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': ':memory:',
+    }
+}
+
+INSTALLED_APPS = [
+    'django.contrib.contenttypes',
+    'django.contrib.auth',
+    'tests',
+]
+
+SECRET_KEY = 'dummy'
diff --git a/tests/test_settings.py b/tests/test_settings.py
new file mode 100644
index 0000000000..43f6913ffa
--- /dev/null
+++ b/tests/test_settings.py
@@ -0,0 +1,14 @@
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': ':memory:',
+    }
+}
+
+INSTALLED_APPS = [
+    'django.contrib.contenttypes',
+    'django.contrib.auth',
+    'tests',
+]
+
+SECRET_KEY = 'dummy'
