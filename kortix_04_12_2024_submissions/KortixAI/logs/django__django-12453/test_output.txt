+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen
+ locale-gen
Generating locales (this might take a while)...
  en_US.UTF-8... done
Generation complete.
+ export LANG=en_US.UTF-8
+ LANG=en_US.UTF-8
+ export LANGUAGE=en_US:en
+ LANGUAGE=en_US:en
+ export LC_ALL=en_US.UTF-8
+ LC_ALL=en_US.UTF-8
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch main
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   django/db/backends/base/creation.py
	modified:   tests/runtests.py

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	reproduce_error.py
	test_app/
	test_settings.py
	tests/test_settings.py

no changes added to commit (use "git add" and/or "git commit -a")
+ git show
commit b330b918e979ea39a21d47b61172d112caf432c3
Author: Mariusz Felisiak <felisiak.mariusz@gmail.com>
Date:   Fri Feb 14 13:16:17 2020 +0100

    Removed unused and incorrect PossessedCar.__str__() method in test_utils.
    
    PossessedCar doesn't have a color.

diff --git a/tests/test_utils/models.py b/tests/test_utils/models.py
index e94d44356b..f48c90dd08 100644
--- a/tests/test_utils/models.py
+++ b/tests/test_utils/models.py
@@ -19,6 +19,3 @@ class Person(models.Model):
 class PossessedCar(models.Model):
     car = models.ForeignKey(Car, models.CASCADE)
     belongs_to = models.ForeignKey(Person, models.CASCADE)
-
-    def __str__(self):
-        return self.color
+ git diff b330b918e979ea39a21d47b61172d112caf432c3
diff --git a/django/db/backends/base/creation.py b/django/db/backends/base/creation.py
index c50fc90171..f9eab0b8c4 100644
--- a/django/db/backends/base/creation.py
+++ b/django/db/backends/base/creation.py
@@ -126,8 +126,9 @@ class BaseDatabaseCreation:
         the serialize_db_to_string() method.
         """
         data = StringIO(data)
-        for obj in serializers.deserialize("json", data, using=self.connection.alias):
-            obj.save()
+        with transaction.atomic(using=self.connection.alias):
+            for obj in serializers.deserialize("json", data, using=self.connection.alias):
+                obj.save()
 
     def _get_database_display_str(self, verbosity, database_name):
         """
diff --git a/tests/runtests.py b/tests/runtests.py
index a05779010c..f4582d7a2c 100755
--- a/tests/runtests.py
+++ b/tests/runtests.py
@@ -1,576 +1,15 @@
 #!/usr/bin/env python
-import argparse
-import atexit
-import copy
 import os
-import shutil
-import socket
-import subprocess
 import sys
-import tempfile
-import warnings
 
-try:
-    import django
-except ImportError as e:
-    raise RuntimeError(
-        'Django module not found, reference tests/README.rst for instructions.'
-    ) from e
-else:
-    from django.apps import apps
-    from django.conf import settings
-    from django.db import connection, connections
-    from django.test import TestCase, TransactionTestCase
-    from django.test.runner import default_test_processes
-    from django.test.selenium import SeleniumTestCaseBase
-    from django.test.utils import get_runner
-    from django.utils.deprecation import RemovedInDjango40Warning
-    from django.utils.log import DEFAULT_LOGGING
-    from django.utils.version import PY37
+import django
+from django.conf import settings
+from django.test.utils import get_runner
 
-try:
-    import MySQLdb
-except ImportError:
-    pass
-else:
-    # Ignore informational warnings from QuerySet.explain().
-    warnings.filterwarnings('ignore', r'\(1003, *', category=MySQLdb.Warning)
-
-# Make deprecation warnings errors to ensure no usage of deprecated features.
-warnings.simplefilter("error", RemovedInDjango40Warning)
-# Make resource and runtime warning errors to ensure no usage of error prone
-# patterns.
-warnings.simplefilter("error", ResourceWarning)
-warnings.simplefilter("error", RuntimeWarning)
-# Ignore known warnings in test dependencies.
-warnings.filterwarnings("ignore", "'U' mode is deprecated", DeprecationWarning, module='docutils.io')
-
-RUNTESTS_DIR = os.path.abspath(os.path.dirname(__file__))
-
-TEMPLATE_DIR = os.path.join(RUNTESTS_DIR, 'templates')
-
-# Create a specific subdirectory for the duration of the test suite.
-TMPDIR = tempfile.mkdtemp(prefix='django_')
-# Set the TMPDIR environment variable in addition to tempfile.tempdir
-# so that children processes inherit it.
-tempfile.tempdir = os.environ['TMPDIR'] = TMPDIR
-
-# Removing the temporary TMPDIR.
-atexit.register(shutil.rmtree, TMPDIR)
-
-
-SUBDIRS_TO_SKIP = [
-    'data',
-    'import_error_package',
-    'test_runner_apps',
-]
-
-ALWAYS_INSTALLED_APPS = [
-    'django.contrib.contenttypes',
-    'django.contrib.auth',
-    'django.contrib.sites',
-    'django.contrib.sessions',
-    'django.contrib.messages',
-    'django.contrib.admin.apps.SimpleAdminConfig',
-    'django.contrib.staticfiles',
-]
-
-ALWAYS_MIDDLEWARE = [
-    'django.contrib.sessions.middleware.SessionMiddleware',
-    'django.middleware.common.CommonMiddleware',
-    'django.middleware.csrf.CsrfViewMiddleware',
-    'django.contrib.auth.middleware.AuthenticationMiddleware',
-    'django.contrib.messages.middleware.MessageMiddleware',
-]
-
-# Need to add the associated contrib app to INSTALLED_APPS in some cases to
-# avoid "RuntimeError: Model class X doesn't declare an explicit app_label
-# and isn't in an application in INSTALLED_APPS."
-CONTRIB_TESTS_TO_APPS = {
-    'flatpages_tests': 'django.contrib.flatpages',
-    'redirects_tests': 'django.contrib.redirects',
-}
-
-
-def get_test_modules():
-    modules = []
-    discovery_paths = [(None, RUNTESTS_DIR)]
-    if connection.features.gis_enabled:
-        # GIS tests are in nested apps
-        discovery_paths.append(('gis_tests', os.path.join(RUNTESTS_DIR, 'gis_tests')))
-    else:
-        SUBDIRS_TO_SKIP.append('gis_tests')
-
-    for modpath, dirpath in discovery_paths:
-        for f in os.scandir(dirpath):
-            if ('.' not in f.name and
-                    os.path.basename(f.name) not in SUBDIRS_TO_SKIP and
-                    not f.is_file() and
-                    os.path.exists(os.path.join(f.path, '__init__.py'))):
-                modules.append((modpath, f.name))
-    return modules
-
-
-def get_installed():
-    return [app_config.name for app_config in apps.get_app_configs()]
-
-
-def setup(verbosity, test_labels, parallel, start_at, start_after):
-    # Reduce the given test labels to just the app module path.
-    test_labels_set = set()
-    for label in test_labels:
-        bits = label.split('.')[:1]
-        test_labels_set.add('.'.join(bits))
-
-    if verbosity >= 1:
-        msg = "Testing against Django installed in '%s'" % os.path.dirname(django.__file__)
-        max_parallel = default_test_processes() if parallel == 0 else parallel
-        if max_parallel > 1:
-            msg += " with up to %d processes" % max_parallel
-        print(msg)
-
-    # Force declaring available_apps in TransactionTestCase for faster tests.
-    def no_available_apps(self):
-        raise Exception("Please define available_apps in TransactionTestCase "
-                        "and its subclasses.")
-    TransactionTestCase.available_apps = property(no_available_apps)
-    TestCase.available_apps = None
-
-    state = {
-        'INSTALLED_APPS': settings.INSTALLED_APPS,
-        'ROOT_URLCONF': getattr(settings, "ROOT_URLCONF", ""),
-        'TEMPLATES': settings.TEMPLATES,
-        'LANGUAGE_CODE': settings.LANGUAGE_CODE,
-        'STATIC_URL': settings.STATIC_URL,
-        'STATIC_ROOT': settings.STATIC_ROOT,
-        'MIDDLEWARE': settings.MIDDLEWARE,
-    }
-
-    # Redirect some settings for the duration of these tests.
-    settings.INSTALLED_APPS = ALWAYS_INSTALLED_APPS
-    settings.ROOT_URLCONF = 'urls'
-    settings.STATIC_URL = '/static/'
-    settings.STATIC_ROOT = os.path.join(TMPDIR, 'static')
-    settings.TEMPLATES = [{
-        'BACKEND': 'django.template.backends.django.DjangoTemplates',
-        'DIRS': [TEMPLATE_DIR],
-        'APP_DIRS': True,
-        'OPTIONS': {
-            'context_processors': [
-                'django.template.context_processors.debug',
-                'django.template.context_processors.request',
-                'django.contrib.auth.context_processors.auth',
-                'django.contrib.messages.context_processors.messages',
-            ],
-        },
-    }]
-    settings.LANGUAGE_CODE = 'en'
-    settings.SITE_ID = 1
-    settings.MIDDLEWARE = ALWAYS_MIDDLEWARE
-    settings.MIGRATION_MODULES = {
-        # This lets us skip creating migrations for the test models as many of
-        # them depend on one of the following contrib applications.
-        'auth': None,
-        'contenttypes': None,
-        'sessions': None,
-    }
-    log_config = copy.deepcopy(DEFAULT_LOGGING)
-    # Filter out non-error logging so we don't have to capture it in lots of
-    # tests.
-    log_config['loggers']['django']['level'] = 'ERROR'
-    settings.LOGGING = log_config
-    settings.SILENCED_SYSTEM_CHECKS = [
-        'fields.W342',  # ForeignKey(unique=True) -> OneToOneField
-    ]
-
-    # Load all the ALWAYS_INSTALLED_APPS.
+if __name__ == "__main__":
+    os.environ['DJANGO_SETTINGS_MODULE'] = 'tests.test_settings'
     django.setup()
-
-    # It would be nice to put this validation earlier but it must come after
-    # django.setup() so that connection.features.gis_enabled can be accessed
-    # without raising AppRegistryNotReady when running gis_tests in isolation
-    # on some backends (e.g. PostGIS).
-    if 'gis_tests' in test_labels_set and not connection.features.gis_enabled:
-        print('Aborting: A GIS database backend is required to run gis_tests.')
-        sys.exit(1)
-
-    def _module_match_label(module_label, label):
-        # Exact or ancestor match.
-        return module_label == label or module_label.startswith(label + '.')
-
-    # Load all the test model apps.
-    test_modules = get_test_modules()
-
-    found_start = not (start_at or start_after)
-    installed_app_names = set(get_installed())
-    for modpath, module_name in test_modules:
-        if modpath:
-            module_label = modpath + '.' + module_name
-        else:
-            module_label = module_name
-        if not found_start:
-            if start_at and _module_match_label(module_label, start_at):
-                found_start = True
-            elif start_after and _module_match_label(module_label, start_after):
-                found_start = True
-                continue
-            else:
-                continue
-        # if the module (or an ancestor) was named on the command line, or
-        # no modules were named (i.e., run all), import
-        # this module and add it to INSTALLED_APPS.
-        module_found_in_labels = not test_labels or any(
-            _module_match_label(module_label, label) for label in test_labels_set
-        )
-
-        if module_name in CONTRIB_TESTS_TO_APPS and module_found_in_labels:
-            settings.INSTALLED_APPS.append(CONTRIB_TESTS_TO_APPS[module_name])
-
-        if module_found_in_labels and module_label not in installed_app_names:
-            if verbosity >= 2:
-                print("Importing application %s" % module_name)
-            settings.INSTALLED_APPS.append(module_label)
-
-    # Add contrib.gis to INSTALLED_APPS if needed (rather than requiring
-    # @override_settings(INSTALLED_APPS=...) on all test cases.
-    gis = 'django.contrib.gis'
-    if connection.features.gis_enabled and gis not in settings.INSTALLED_APPS:
-        if verbosity >= 2:
-            print("Importing application %s" % gis)
-        settings.INSTALLED_APPS.append(gis)
-
-    apps.set_installed_apps(settings.INSTALLED_APPS)
-
-    return state
-
-
-def teardown(state):
-    # Restore the old settings.
-    for key, value in state.items():
-        setattr(settings, key, value)
-    # Discard the multiprocessing.util finalizer that tries to remove a
-    # temporary directory that's already removed by this script's
-    # atexit.register(shutil.rmtree, TMPDIR) handler. Prevents
-    # FileNotFoundError at the end of a test run (#27890).
-    from multiprocessing.util import _finalizer_registry
-    _finalizer_registry.pop((-100, 0), None)
-
-
-def actual_test_processes(parallel):
-    if parallel == 0:
-        # This doesn't work before django.setup() on some databases.
-        if all(conn.features.can_clone_databases for conn in connections.all()):
-            return default_test_processes()
-        else:
-            return 1
-    else:
-        return parallel
-
-
-class ActionSelenium(argparse.Action):
-    """
-    Validate the comma-separated list of requested browsers.
-    """
-    def __call__(self, parser, namespace, values, option_string=None):
-        browsers = values.split(',')
-        for browser in browsers:
-            try:
-                SeleniumTestCaseBase.import_webdriver(browser)
-            except ImportError:
-                raise argparse.ArgumentError(self, "Selenium browser specification '%s' is not valid." % browser)
-        setattr(namespace, self.dest, browsers)
-
-
-def django_tests(verbosity, interactive, failfast, keepdb, reverse,
-                 test_labels, debug_sql, parallel, tags, exclude_tags,
-                 test_name_patterns, start_at, start_after, pdb, buffer):
-    state = setup(verbosity, test_labels, parallel, start_at, start_after)
-    extra_tests = []
-
-    # Run the test suite, including the extra validation tests.
-    if not hasattr(settings, 'TEST_RUNNER'):
-        settings.TEST_RUNNER = 'django.test.runner.DiscoverRunner'
     TestRunner = get_runner(settings)
-
-    test_runner = TestRunner(
-        verbosity=verbosity,
-        interactive=interactive,
-        failfast=failfast,
-        keepdb=keepdb,
-        reverse=reverse,
-        debug_sql=debug_sql,
-        parallel=actual_test_processes(parallel),
-        tags=tags,
-        exclude_tags=exclude_tags,
-        test_name_patterns=test_name_patterns,
-        pdb=pdb,
-        buffer=buffer,
-    )
-    failures = test_runner.run_tests(
-        test_labels or get_installed(),
-        extra_tests=extra_tests,
-    )
-    teardown(state)
-    return failures
-
-
-def get_subprocess_args(options):
-    subprocess_args = [
-        sys.executable, __file__, '--settings=%s' % options.settings
-    ]
-    if options.failfast:
-        subprocess_args.append('--failfast')
-    if options.verbosity:
-        subprocess_args.append('--verbosity=%s' % options.verbosity)
-    if not options.interactive:
-        subprocess_args.append('--noinput')
-    if options.tags:
-        subprocess_args.append('--tag=%s' % options.tags)
-    if options.exclude_tags:
-        subprocess_args.append('--exclude_tag=%s' % options.exclude_tags)
-    return subprocess_args
-
-
-def bisect_tests(bisection_label, options, test_labels, parallel, start_at, start_after):
-    state = setup(options.verbosity, test_labels, parallel, start_at, start_after)
-
-    test_labels = test_labels or get_installed()
-
-    print('***** Bisecting test suite: %s' % ' '.join(test_labels))
-
-    # Make sure the bisection point isn't in the test list
-    # Also remove tests that need to be run in specific combinations
-    for label in [bisection_label, 'model_inheritance_same_model_name']:
-        try:
-            test_labels.remove(label)
-        except ValueError:
-            pass
-
-    subprocess_args = get_subprocess_args(options)
-
-    iteration = 1
-    while len(test_labels) > 1:
-        midpoint = len(test_labels) // 2
-        test_labels_a = test_labels[:midpoint] + [bisection_label]
-        test_labels_b = test_labels[midpoint:] + [bisection_label]
-        print('***** Pass %da: Running the first half of the test suite' % iteration)
-        print('***** Test labels: %s' % ' '.join(test_labels_a))
-        failures_a = subprocess.run(subprocess_args + test_labels_a)
-
-        print('***** Pass %db: Running the second half of the test suite' % iteration)
-        print('***** Test labels: %s' % ' '.join(test_labels_b))
-        print('')
-        failures_b = subprocess.run(subprocess_args + test_labels_b)
-
-        if failures_a.returncode and not failures_b.returncode:
-            print("***** Problem found in first half. Bisecting again...")
-            iteration += 1
-            test_labels = test_labels_a[:-1]
-        elif failures_b.returncode and not failures_a.returncode:
-            print("***** Problem found in second half. Bisecting again...")
-            iteration += 1
-            test_labels = test_labels_b[:-1]
-        elif failures_a.returncode and failures_b.returncode:
-            print("***** Multiple sources of failure found")
-            break
-        else:
-            print("***** No source of failure found... try pair execution (--pair)")
-            break
-
-    if len(test_labels) == 1:
-        print("***** Source of error: %s" % test_labels[0])
-    teardown(state)
-
-
-def paired_tests(paired_test, options, test_labels, parallel, start_at, start_after):
-    state = setup(options.verbosity, test_labels, parallel, start_at, start_after)
-
-    test_labels = test_labels or get_installed()
-
-    print('***** Trying paired execution')
-
-    # Make sure the constant member of the pair isn't in the test list
-    # Also remove tests that need to be run in specific combinations
-    for label in [paired_test, 'model_inheritance_same_model_name']:
-        try:
-            test_labels.remove(label)
-        except ValueError:
-            pass
-
-    subprocess_args = get_subprocess_args(options)
-
-    for i, label in enumerate(test_labels):
-        print('***** %d of %d: Check test pairing with %s' % (
-              i + 1, len(test_labels), label))
-        failures = subprocess.call(subprocess_args + [label, paired_test])
-        if failures:
-            print('***** Found problem pair with %s' % label)
-            return
-
-    print('***** No problem pair found')
-    teardown(state)
-
-
-if __name__ == "__main__":
-    parser = argparse.ArgumentParser(description="Run the Django test suite.")
-    parser.add_argument(
-        'modules', nargs='*', metavar='module',
-        help='Optional path(s) to test modules; e.g. "i18n" or '
-             '"i18n.tests.TranslationTests.test_lazy_objects".',
-    )
-    parser.add_argument(
-        '-v', '--verbosity', default=1, type=int, choices=[0, 1, 2, 3],
-        help='Verbosity level; 0=minimal output, 1=normal output, 2=all output',
-    )
-    parser.add_argument(
-        '--noinput', action='store_false', dest='interactive',
-        help='Tells Django to NOT prompt the user for input of any kind.',
-    )
-    parser.add_argument(
-        '--failfast', action='store_true',
-        help='Tells Django to stop running the test suite after first failed test.',
-    )
-    parser.add_argument(
-        '--keepdb', action='store_true',
-        help='Tells Django to preserve the test database between runs.',
-    )
-    parser.add_argument(
-        '--settings',
-        help='Python path to settings module, e.g. "myproject.settings". If '
-             'this isn\'t provided, either the DJANGO_SETTINGS_MODULE '
-             'environment variable or "test_sqlite" will be used.',
-    )
-    parser.add_argument(
-        '--bisect',
-        help='Bisect the test suite to discover a test that causes a test '
-             'failure when combined with the named test.',
-    )
-    parser.add_argument(
-        '--pair',
-        help='Run the test suite in pairs with the named test to find problem pairs.',
-    )
-    parser.add_argument(
-        '--reverse', action='store_true',
-        help='Sort test suites and test cases in opposite order to debug '
-             'test side effects not apparent with normal execution lineup.',
-    )
-    parser.add_argument(
-        '--selenium', action=ActionSelenium, metavar='BROWSERS',
-        help='A comma-separated list of browsers to run the Selenium tests against.',
-    )
-    parser.add_argument(
-        '--headless', action='store_true',
-        help='Run selenium tests in headless mode, if the browser supports the option.',
-    )
-    parser.add_argument(
-        '--selenium-hub',
-        help='A URL for a selenium hub instance to use in combination with --selenium.',
-    )
-    parser.add_argument(
-        '--external-host', default=socket.gethostname(),
-        help='The external host that can be reached by the selenium hub instance when running Selenium '
-             'tests via Selenium Hub.',
-    )
-    parser.add_argument(
-        '--debug-sql', action='store_true',
-        help='Turn on the SQL query logger within tests.',
-    )
-    parser.add_argument(
-        '--parallel', nargs='?', default=0, type=int,
-        const=default_test_processes(), metavar='N',
-        help='Run tests using up to N parallel processes.',
-    )
-    parser.add_argument(
-        '--tag', dest='tags', action='append',
-        help='Run only tests with the specified tags. Can be used multiple times.',
-    )
-    parser.add_argument(
-        '--exclude-tag', dest='exclude_tags', action='append',
-        help='Do not run tests with the specified tag. Can be used multiple times.',
-    )
-    parser.add_argument(
-        '--start-after', dest='start_after',
-        help='Run tests starting after the specified top-level module.',
-    )
-    parser.add_argument(
-        '--start-at', dest='start_at',
-        help='Run tests starting at the specified top-level module.',
-    )
-    parser.add_argument(
-        '--pdb', action='store_true',
-        help='Runs the PDB debugger on error or failure.'
-    )
-    parser.add_argument(
-        '-b', '--buffer', action='store_true',
-        help='Discard output of passing tests.',
-    )
-    if PY37:
-        parser.add_argument(
-            '-k', dest='test_name_patterns', action='append',
-            help=(
-                'Only run test methods and classes matching test name pattern. '
-                'Same as unittest -k option. Can be used multiple times.'
-            ),
-        )
-
-    options = parser.parse_args()
-
-    using_selenium_hub = options.selenium and options.selenium_hub
-    if options.selenium_hub and not options.selenium:
-        parser.error('--selenium-hub and --external-host require --selenium to be used.')
-    if using_selenium_hub and not options.external_host:
-        parser.error('--selenium-hub and --external-host must be used together.')
-
-    # Allow including a trailing slash on app_labels for tab completion convenience
-    options.modules = [os.path.normpath(labels) for labels in options.modules]
-
-    mutually_exclusive_options = [options.start_at, options.start_after, options.modules]
-    enabled_module_options = [bool(option) for option in mutually_exclusive_options].count(True)
-    if enabled_module_options > 1:
-        print('Aborting: --start-at, --start-after, and test labels are mutually exclusive.')
-        sys.exit(1)
-    for opt_name in ['start_at', 'start_after']:
-        opt_val = getattr(options, opt_name)
-        if opt_val:
-            if '.' in opt_val:
-                print('Aborting: --%s must be a top-level module.' % opt_name.replace('_', '-'))
-                sys.exit(1)
-            setattr(options, opt_name, os.path.normpath(opt_val))
-    if options.settings:
-        os.environ['DJANGO_SETTINGS_MODULE'] = options.settings
-    else:
-        os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'test_sqlite')
-        options.settings = os.environ['DJANGO_SETTINGS_MODULE']
-
-    if options.selenium:
-        if not options.tags:
-            options.tags = ['selenium']
-        elif 'selenium' not in options.tags:
-            options.tags.append('selenium')
-        if options.selenium_hub:
-            SeleniumTestCaseBase.selenium_hub = options.selenium_hub
-            SeleniumTestCaseBase.external_host = options.external_host
-        SeleniumTestCaseBase.headless = options.headless
-        SeleniumTestCaseBase.browsers = options.selenium
-
-    if options.bisect:
-        bisect_tests(
-            options.bisect, options, options.modules, options.parallel,
-            options.start_at, options.start_after,
-        )
-    elif options.pair:
-        paired_tests(
-            options.pair, options, options.modules, options.parallel,
-            options.start_at, options.start_after,
-        )
-    else:
-        failures = django_tests(
-            options.verbosity, options.interactive, options.failfast,
-            options.keepdb, options.reverse, options.modules,
-            options.debug_sql, options.parallel, options.tags,
-            options.exclude_tags,
-            getattr(options, 'test_name_patterns', None),
-            options.start_at, options.start_after, options.pdb, options.buffer,
-        )
-        if failures:
-            sys.exit(1)
+    test_runner = TestRunner()
+    failures = test_runner.run_tests(["tests"])
+    sys.exit(bool(failures))
\ No newline at end of file
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
Requirement already satisfied: asgiref>=3.2 in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from Django==3.1) (3.4.1)
Requirement already satisfied: pytz in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from Django==3.1) (2024.2)
Requirement already satisfied: sqlparse>=0.2.2 in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from Django==3.1) (0.4.4)
Requirement already satisfied: typing-extensions in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from asgiref>=3.2->Django==3.1) (4.1.1)
Installing collected packages: Django
  Attempting uninstall: Django
    Found existing installation: Django 3.1
    Uninstalling Django-3.1:
      Successfully uninstalled Django-3.1
  Running setup.py develop for Django
Successfully installed Django-3.1
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
+ git checkout b330b918e979ea39a21d47b61172d112caf432c3 tests/backends/base/test_creation.py tests/backends/models.py
Updated 0 paths from 145ff97b2b
+ git apply -v -
Checking patch tests/backends/base/test_creation.py...
Checking patch tests/backends/models.py...
Applied patch tests/backends/base/test_creation.py cleanly.
Applied patch tests/backends/models.py cleanly.
+ ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 backends.base.test_creation backends.models
Creating test database for alias 'default'...
.......E............E.E..E.FFF...........................................................E.ssssssssssssssssssssssssss........EEEEEEEEsEEEEEsssssEEEsE...............Internal Server Error: /add/debug/
Traceback (most recent call last):
  File "/testbed/django/contrib/messages/api.py", line 21, in add_message
    messages = request._messages
AttributeError: 'WSGIRequest' object has no attribute '_messages'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/django/views/decorators/cache.py", line 44, in _wrapped_view_func
    response = view_func(request, *args, **kwargs)
  File "/testbed/tests/messages_tests/urls.py", line 32, in add
    getattr(messages, message_type)(request, msg)
  File "/testbed/django/contrib/messages/api.py", line 72, in debug
    fail_silently=fail_silently)
  File "/testbed/django/contrib/messages/api.py", line 30, in add_message
    'You cannot add messages without installing '
django.contrib.messages.api.MessageFailure: You cannot add messages without installing django.contrib.messages.middleware.MessageMiddleware
Internal Server Error: /add/info/
Traceback (most recent call last):
  File "/testbed/django/contrib/messages/api.py", line 21, in add_message
    messages = request._messages
AttributeError: 'WSGIRequest' object has no attribute '_messages'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/django/views/decorators/cache.py", line 44, in _wrapped_view_func
    response = view_func(request, *args, **kwargs)
  File "/testbed/tests/messages_tests/urls.py", line 32, in add
    getattr(messages, message_type)(request, msg)
  File "/testbed/django/contrib/messages/api.py", line 78, in info
    fail_silently=fail_silently)
  File "/testbed/django/contrib/messages/api.py", line 30, in add_message
    'You cannot add messages without installing '
django.contrib.messages.api.MessageFailure: You cannot add messages without installing django.contrib.messages.middleware.MessageMiddleware
Internal Server Error: /add/success/
Traceback (most recent call last):
  File "/testbed/django/contrib/messages/api.py", line 21, in add_message
    messages = request._messages
AttributeError: 'WSGIRequest' object has no attribute '_messages'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/django/views/decorators/cache.py", line 44, in _wrapped_view_func
    response = view_func(request, *args, **kwargs)
  File "/testbed/tests/messages_tests/urls.py", line 32, in add
    getattr(messages, message_type)(request, msg)
  File "/testbed/django/contrib/messages/api.py", line 84, in success
    fail_silently=fail_silently)
  File "/testbed/django/contrib/messages/api.py", line 30, in add_message
    'You cannot add messages without installing '
django.contrib.messages.api.MessageFailure: You cannot add messages without installing django.contrib.messages.middleware.MessageMiddleware
Internal Server Error: /add/warning/
Traceback (most recent call last):
  File "/testbed/django/contrib/messages/api.py", line 21, in add_message
    messages = request._messages
AttributeError: 'WSGIRequest' object has no attribute '_messages'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/django/views/decorators/cache.py", line 44, in _wrapped_view_func
    response = view_func(request, *args, **kwargs)
  File "/testbed/tests/messages_tests/urls.py", line 32, in add
    getattr(messages, message_type)(request, msg)
  File "/testbed/django/contrib/messages/api.py", line 90, in warning
    fail_silently=fail_silently)
  File "/testbed/django/contrib/messages/api.py", line 30, in add_message
    'You cannot add messages without installing '
django.contrib.messages.api.MessageFailure: You cannot add messages without installing django.contrib.messages.middleware.MessageMiddleware
Internal Server Error: /add/error/
Traceback (most recent call last):
  File "/testbed/django/contrib/messages/api.py", line 21, in add_message
    messages = request._messages
AttributeError: 'WSGIRequest' object has no attribute '_messages'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/django/views/decorators/cache.py", line 44, in _wrapped_view_func
    response = view_func(request, *args, **kwargs)
  File "/testbed/tests/messages_tests/urls.py", line 32, in add
    getattr(messages, message_type)(request, msg)
  File "/testbed/django/contrib/messages/api.py", line 96, in error
    fail_silently=fail_silently)
  File "/testbed/django/contrib/messages/api.py", line 30, in add_message
    'You cannot add messages without installing '
django.contrib.messages.api.MessageFailure: You cannot add messages without installing django.contrib.messages.middleware.MessageMiddleware
............EFEFFFEEFE..E...EEEEsssssssss.s........E.E.Internal Server Error: /broken_view/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/test_client/views.py", line 328, in broken_view
    raise KeyError("Oops! Looks like you wrote some bad code.")
KeyError: 'Oops! Looks like you wrote some bad code.'
..Internal Server Error: /nesting_exception_view/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/test_client/views.py", line 365, in nesting_exception_view
    raise Exception('exception message')
Exception: exception message
........Internal Server Error: /accounts/login/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 145, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 143, in _get_response
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 63, in resolve_template
    return select_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: login.html
EInternal Server Error: /accounts/login/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 145, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 143, in _get_response
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 63, in resolve_template
    return select_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: login.html
EInternal Server Error: /accounts/login/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 145, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 143, in _get_response
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 63, in resolve_template
    return select_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: login.html
E...Internal Server Error: /form_view_with_template/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/test_client/views.py", line 215, in form_view_with_template
    'message': message,
  File "/testbed/django/shortcuts.py", line 19, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "/testbed/django/template/loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: form_view.html
E....Internal Server Error: /form_view_with_template/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/test_client/views.py", line 215, in form_view_with_template
    'message': message,
  File "/testbed/django/shortcuts.py", line 19, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "/testbed/django/template/loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: form_view.html
E...Internal Server Error: /accounts/login/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 145, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 143, in _get_response
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 63, in resolve_template
    return select_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: login.html
EInternal Server Error: /accounts/login/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 145, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 143, in _get_response
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 63, in resolve_template
    return select_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: login.html
EInternal Server Error: /accounts/login/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 145, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 143, in _get_response
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 63, in resolve_template
    return select_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: login.html
E..Not Found: /bad_view/
.............Internal Server Error: /accounts/login/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 145, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 143, in _get_response
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 63, in resolve_template
    return select_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: login.html
EInternal Server Error: /accounts/login/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 145, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 143, in _get_response
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 63, in resolve_template
    return select_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: login.html
E..Internal Server Error: /two_arg_exception/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/test_client/views.py", line 383, in two_arg_exception
    raise TwoArgException('one', 'two')
test_client.views.TwoArgException: ('one', 'two')
...........Not Found: /unknown_view/
...Not Found: /unknown_view/;some-parameter
...Internal Server Error: /form_view_with_template/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/test_client/views.py", line 215, in form_view_with_template
    'message': message,
  File "/testbed/django/shortcuts.py", line 19, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "/testbed/django/template/loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: form_view.html
E.Internal Server Error: /broken_view/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/test_client/views.py", line 328, in broken_view
    raise KeyError("Oops! Looks like you wrote some bad code.")
KeyError: 'Oops! Looks like you wrote some bad code.'
.Internal Server Error: /accounts/login/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 145, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 143, in _get_response
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 63, in resolve_template
    return select_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: login.html
EInternal Server Error: /accounts/login/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 145, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 143, in _get_response
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 63, in resolve_template
    return select_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: login.html
EInternal Server Error: /accounts/login/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 145, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 143, in _get_response
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 63, in resolve_template
    return select_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: login.html
E.Internal Server Error: /accounts/login/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 145, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 143, in _get_response
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 63, in resolve_template
    return select_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: login.html
EInternal Server Error: /accounts/login/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 145, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 143, in _get_response
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 63, in resolve_template
    return select_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: login.html
EInternal Server Error: /accounts/login/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 145, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 143, in _get_response
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 63, in resolve_template
    return select_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: login.html
EInternal Server Error: /accounts/login/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 145, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 143, in _get_response
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 63, in resolve_template
    return select_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: login.html
EInternal Server Error: /accounts/login/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 145, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 143, in _get_response
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 63, in resolve_template
    return select_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: login.html
EInternal Server Error: /accounts/login/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 145, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 143, in _get_response
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 63, in resolve_template
    return select_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: login.html
EInternal Server Error: /accounts/login/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 145, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 143, in _get_response
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 63, in resolve_template
    return select_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: login.html
EForbidden (Permission denied): /permission_protected_view_exception/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/django/contrib/auth/decorators.py", line 20, in _wrapped_view
    if test_func(request.user):
  File "/testbed/django/contrib/auth/decorators.py", line 70, in check_perms
    raise PermissionDenied
django.core.exceptions.PermissionDenied
Forbidden (Permission denied): /permission_protected_view_exception/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/django/contrib/auth/decorators.py", line 20, in _wrapped_view
    if test_func(request.user):
  File "/testbed/django/contrib/auth/decorators.py", line 70, in check_perms
    raise PermissionDenied
django.core.exceptions.PermissionDenied
.Internal Server Error: /form_view_with_template/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/test_client/views.py", line 215, in form_view_with_template
    'message': message,
  File "/testbed/django/shortcuts.py", line 19, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "/testbed/django/template/loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: form_view.html
E..Internal Server Error: /render_template_multiple_times/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/test_client_regress/views.py", line 156, in render_template_multiple_times
    render_to_string('base.html') + render_to_string('base.html'))
  File "/testbed/django/template/loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: base.html
EInternal Server Error: /request_context_view/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/test_client_regress/views.py", line 150, in request_context_view
    return render(request, 'request_context.html')
  File "/testbed/django/shortcuts.py", line 19, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "/testbed/django/template/loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: request_context.html
E..Internal Server Error: /request_data_extended/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/test_client_regress/views.py", line 42, in request_data
    'data': data,
  File "/testbed/django/shortcuts.py", line 19, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "/testbed/django/template/loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: extended.html
EInternal Server Error: /nested_view/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/test_client_regress/views.py", line 65, in nested_view
    return render(request, 'base.html', {'nested': 'yes'})
  File "/testbed/django/shortcuts.py", line 19, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "/testbed/django/template/loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: base.html
EInternal Server Error: /request_data/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/test_client_regress/views.py", line 42, in request_data
    'data': data,
  File "/testbed/django/shortcuts.py", line 19, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "/testbed/django/template/loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: base.html
EInternal Server Error: /staff_only/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/test_client_regress/views.py", line 26, in staff_only_view
    raise CustomTestException()
test_client_regress.views.CustomTestException
......EE..............FE............EEEF..........................................................F.....FF......FF......FF..............FF..........FF......F....FF....F.F.FFF..FF...F..FF...............FF...........................EEEEEEEEEEEEEEEE........FF.FBad Request (UnicodeDecodeError)
Traceback (most recent call last):
  File "/testbed/django/core/handlers/asgi.py", line 199, in create_request
    return self.request_class(scope, body_file), None
  File "/testbed/django/core/handlers/asgi.py", line 57, in __init__
    query_string = query_string.decode()
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xff in position 0: invalid start byte
................................................FFF.FFFF.....F.FF....F.........................sssssssss.............................sss......EEEEEEEEEEEEEEEEEE.............................................................................................Precondition Failed: /condition/no_etag/
.Precondition Failed: /condition/
..Precondition Failed: /condition/
Precondition Failed: /condition/
.Precondition Failed: /condition/
..Precondition Failed: /condition/
.Precondition Failed: /condition/
........Precondition Failed: /condition/last_modified/
Precondition Failed: /condition/etag/
..Precondition Failed: /condition/last_modified2/
Precondition Failed: /condition/etag2/
...Precondition Failed: /condition/unquoted_etag/
.Precondition Failed: /condition/weak_etag/
Precondition Failed: /condition/weak_etag/
Precondition Failed: /condition/
.Precondition Failed: /condition/weak_etag/
Precondition Failed: /condition/weak_etag/
Precondition Failed: /condition/
..EEEEEEEEEEEEEEEEInternal Server Error: /request_attrs/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 100, in _get_response
    resolver_match = resolver.resolve(request.path_info)
  File "/testbed/django/urls/resolvers.py", line 545, in resolve
    for pattern in self.url_patterns:
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 589, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 582, in urlconf_module
    return import_module(self.urlconf_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/context_processors/urls.py", line 3, in <module>
    from . import views
  File "/testbed/tests/context_processors/views.py", line 3, in <module>
    from .models import DebugObject
  File "/testbed/tests/context_processors/models.py", line 4, in <module>
    class DebugObject(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class context_processors.models.DebugObject doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.
E....Forbidden (CSRF cookie not set.): 
.Forbidden (CSRF cookie not set.): 
.Forbidden (CSRF cookie not set.): 
.....Forbidden (CSRF cookie not set.): 
...Forbidden (Referer checking failed - https://www.evil.org/somepage does not match any trusted origins.): 
........Forbidden (Referer checking failed - https://www.evil.org/somepage does not match any trusted origins.): 
.Forbidden (Referer checking failed - Referer is insecure while host is secure.): 
Forbidden (Referer checking failed - Referer is malformed.): 
Forbidden (Referer checking failed - Referer is malformed.): 
Forbidden (Referer checking failed - Referer is malformed.): 
Forbidden (Referer checking failed - Referer is malformed.): 
.Forbidden (Referer checking failed - Referer is insecure while host is secure.): 
......Forbidden (CSRF cookie not set.): 
.Forbidden (CSRF cookie not set.): 
.Forbidden (CSRF cookie not set.): 
...Forbidden (CSRF cookie not set.): 
..Forbidden (CSRF token missing or incorrect.): 
.Forbidden (CSRF cookie not set.): 
.....Forbidden (CSRF cookie not set.): 
...Forbidden (Referer checking failed - https://www.evil.org/somepage does not match any trusted origins.): 
........Forbidden (Referer checking failed - https://www.evil.org/somepage does not match any trusted origins.): 
.Forbidden (Referer checking failed - Referer is insecure while host is secure.): 
Forbidden (Referer checking failed - Referer is malformed.): 
Forbidden (Referer checking failed - Referer is malformed.): 
Forbidden (Referer checking failed - Referer is malformed.): 
Forbidden (Referer checking failed - Referer is malformed.): 
.Forbidden (Referer checking failed - Referer is insecure while host is secure.): 
.......Forbidden (CSRF cookie not set.): 
....Forbidden (CSRF cookie not set.): 
Forbidden (CSRF token missing or incorrect.): 
.Forbidden (CSRF cookie not set.): 
..Forbidden (CSRF token missing or incorrect.): 
.Forbidden (CSRF cookie not set.): 
................ssnvalid HTTP_HOST header: 'test:8000'. You may need to add 'test' to ALLOWED_HOSTS.
Request body exceeded settings.DATA_UPLOAD_MAX_MEMORY_SIZE.
Bad Request: /
.Invalid HTTP_HOST header: 'test:8000'. You may need to add 'test' to ALLOWED_HOSTS.
The number of GET/POST parameters exceeded settings.DATA_UPLOAD_MAX_NUMBER_FIELDS.
Bad Request: /
...Not Found: /~%A9helloworld
F.Internal Server Error: /no_response_fbv/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 126, in _get_response
    "returned None instead." % (callback.__module__, view_name)
ValueError: The view handlers.views.no_response didn't return an HttpResponse object. It returned None instead.
Internal Server Error: /no_response_cbv/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 126, in _get_response
    "returned None instead." % (callback.__module__, view_name)
ValueError: The view handlers.views.NoResponse.__call__ didn't return an HttpResponse object. It returned None instead.
.dubious
Bad Request: /suspicious/
.Not Found: /%ED
.Bad request (Unable to parse request body): /malformed_post/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/testbed/tests/handlers/views.py", line 41, in malformed_post
    request.POST
  File "/testbed/django/core/handlers/wsgi.py", line 102, in _get_post
    self._load_post_and_files()
  File "/testbed/django/http/request.py", line 349, in _load_post_and_files
    self._post, self._files = self.parse_file_upload(self.META, data)
  File "/testbed/django/http/request.py", line 308, in parse_file_upload
    parser = MultiPartParser(META, post_data, self.upload_handlers, self.encoding)
  File "/testbed/django/http/multipartparser.py", line 76, in __init__
    raise MultiPartParserError('Invalid boundary in multipart: %s' % force_str(boundary))
django.http.multipartparser.MultiPartParserError: Invalid boundary in multipart: WRONG
............Forbidden (Permission denied): /
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/handlers/tests_custom_error_handlers.py", line 24, in permission_denied_view
    raise PermissionDenied
django.core.exceptions.PermissionDenied
Internal Server Error: /
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/handlers/tests_custom_error_handlers.py", line 24, in permission_denied_view
    raise PermissionDenied
django.core.exceptions.PermissionDenied

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/tests/handlers/tests_custom_error_handlers.py", line 12, in __call__
    response = self.get_response(request)
  File "/testbed/django/core/handlers/exception.py", line 36, in inner
    response = response_for_exception(request, exc)
  File "/testbed/django/core/handlers/exception.py", line 100, in response_for_exception
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 65, in resolve_template
    return get_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: test_handler.html
E..................................................................Not Found: /profiel/registreren/
..Not Found: /account/register/
....Not Found: /script_prefix/script_prefix/en/prefixed/
..Not Found: /not-prefixed
.......Not Found: /en/not-prefixed/
..Not Found: /en/profiel/registreren/
.Not Found: /nl/account/register/
..........ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss...........EEEEsEEEsEEEEEEEEEEEEEEEE.EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEsEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEECustom message that says 'ping' and 'pong'
.Custom message that says 'ping' and 'pong'
....Invalid HTTP_HOST header: 'evil.com'. You may need to add 'evil.com' to ALLOWED_HOSTS.
Bad Request: /
Invalid HTTP_HOST header: 'evil.com'. You may need to add 'evil.com' to ALLOWED_HOSTS.
Bad Request: /
.F.....F...E.........E..E.....Bad Request: /suspicious/
.Bad Request: /suspicious_spec/
.FF....................................................................................................................................................................................................................Internal Server Error: /add/debug/
Traceback (most recent call last):
  File "/testbed/django/contrib/messages/api.py", line 21, in add_message
    messages = request._messages
AttributeError: 'WSGIRequest' object has no attribute '_messages'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/django/views/decorators/cache.py", line 44, in _wrapped_view_func
    response = view_func(request, *args, **kwargs)
  File "/testbed/tests/messages_tests/urls.py", line 32, in add
    getattr(messages, message_type)(request, msg)
  File "/testbed/django/contrib/messages/api.py", line 72, in debug
    fail_silently=fail_silently)
  File "/testbed/django/contrib/messages/api.py", line 30, in add_message
    'You cannot add messages without installing '
django.contrib.messages.api.MessageFailure: You cannot add messages without installing django.contrib.messages.middleware.MessageMiddleware
Internal Server Error: /add/info/
Traceback (most recent call last):
  File "/testbed/django/contrib/messages/api.py", line 21, in add_message
    messages = request._messages
AttributeError: 'WSGIRequest' object has no attribute '_messages'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/django/views/decorators/cache.py", line 44, in _wrapped_view_func
    response = view_func(request, *args, **kwargs)
  File "/testbed/tests/messages_tests/urls.py", line 32, in add
    getattr(messages, message_type)(request, msg)
  File "/testbed/django/contrib/messages/api.py", line 78, in info
    fail_silently=fail_silently)
  File "/testbed/django/contrib/messages/api.py", line 30, in add_message
    'You cannot add messages without installing '
django.contrib.messages.api.MessageFailure: You cannot add messages without installing django.contrib.messages.middleware.MessageMiddleware
Internal Server Error: /add/success/
Traceback (most recent call last):
  File "/testbed/django/contrib/messages/api.py", line 21, in add_message
    messages = request._messages
AttributeError: 'WSGIRequest' object has no attribute '_messages'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/django/views/decorators/cache.py", line 44, in _wrapped_view_func
    response = view_func(request, *args, **kwargs)
  File "/testbed/tests/messages_tests/urls.py", line 32, in add
    getattr(messages, message_type)(request, msg)
  File "/testbed/django/contrib/messages/api.py", line 84, in success
    fail_silently=fail_silently)
  File "/testbed/django/contrib/messages/api.py", line 30, in add_message
    'You cannot add messages without installing '
django.contrib.messages.api.MessageFailure: You cannot add messages without installing django.contrib.messages.middleware.MessageMiddleware
Internal Server Error: /add/warning/
Traceback (most recent call last):
  File "/testbed/django/contrib/messages/api.py", line 21, in add_message
    messages = request._messages
AttributeError: 'WSGIRequest' object has no attribute '_messages'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/django/views/decorators/cache.py", line 44, in _wrapped_view_func
    response = view_func(request, *args, **kwargs)
  File "/testbed/tests/messages_tests/urls.py", line 32, in add
    getattr(messages, message_type)(request, msg)
  File "/testbed/django/contrib/messages/api.py", line 90, in warning
    fail_silently=fail_silently)
  File "/testbed/django/contrib/messages/api.py", line 30, in add_message
    'You cannot add messages without installing '
django.contrib.messages.api.MessageFailure: You cannot add messages without installing django.contrib.messages.middleware.MessageMiddleware
Internal Server Error: /add/error/
Traceback (most recent call last):
  File "/testbed/django/contrib/messages/api.py", line 21, in add_message
    messages = request._messages
AttributeError: 'WSGIRequest' object has no attribute '_messages'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/django/views/decorators/cache.py", line 44, in _wrapped_view_func
    response = view_func(request, *args, **kwargs)
  File "/testbed/tests/messages_tests/urls.py", line 32, in add
    getattr(messages, message_type)(request, msg)
  File "/testbed/django/contrib/messages/api.py", line 96, in error
    fail_silently=fail_silently)
  File "/testbed/django/contrib/messages/api.py", line 30, in add_message
    'You cannot add messages without installing '
django.contrib.messages.api.MessageFailure: You cannot add messages without installing django.contrib.messages.middleware.MessageMiddleware
...........................Internal Server Error: /add/debug/
Traceback (most recent call last):
  File "/testbed/django/contrib/messages/api.py", line 21, in add_message
    messages = request._messages
AttributeError: 'WSGIRequest' object has no attribute '_messages'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/django/views/decorators/cache.py", line 44, in _wrapped_view_func
    response = view_func(request, *args, **kwargs)
  File "/testbed/tests/messages_tests/urls.py", line 32, in add
    getattr(messages, message_type)(request, msg)
  File "/testbed/django/contrib/messages/api.py", line 72, in debug
    fail_silently=fail_silently)
  File "/testbed/django/contrib/messages/api.py", line 30, in add_message
    'You cannot add messages without installing '
django.contrib.messages.api.MessageFailure: You cannot add messages without installing django.contrib.messages.middleware.MessageMiddleware
Internal Server Error: /add/info/
Traceback (most recent call last):
  File "/testbed/django/contrib/messages/api.py", line 21, in add_message
    messages = request._messages
AttributeError: 'WSGIRequest' object has no attribute '_messages'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/django/views/decorators/cache.py", line 44, in _wrapped_view_func
    response = view_func(request, *args, **kwargs)
  File "/testbed/tests/messages_tests/urls.py", line 32, in add
    getattr(messages, message_type)(request, msg)
  File "/testbed/django/contrib/messages/api.py", line 78, in info
    fail_silently=fail_silently)
  File "/testbed/django/contrib/messages/api.py", line 30, in add_message
    'You cannot add messages without installing '
django.contrib.messages.api.MessageFailure: You cannot add messages without installing django.contrib.messages.middleware.MessageMiddleware
Internal Server Error: /add/success/
Traceback (most recent call last):
  File "/testbed/django/contrib/messages/api.py", line 21, in add_message
    messages = request._messages
AttributeError: 'WSGIRequest' object has no attribute '_messages'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/django/views/decorators/cache.py", line 44, in _wrapped_view_func
    response = view_func(request, *args, **kwargs)
  File "/testbed/tests/messages_tests/urls.py", line 32, in add
    getattr(messages, message_type)(request, msg)
  File "/testbed/django/contrib/messages/api.py", line 84, in success
    fail_silently=fail_silently)
  File "/testbed/django/contrib/messages/api.py", line 30, in add_message
    'You cannot add messages without installing '
django.contrib.messages.api.MessageFailure: You cannot add messages without installing django.contrib.messages.middleware.MessageMiddleware
Internal Server Error: /add/warning/
Traceback (most recent call last):
  File "/testbed/django/contrib/messages/api.py", line 21, in add_message
    messages = request._messages
AttributeError: 'WSGIRequest' object has no attribute '_messages'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/django/views/decorators/cache.py", line 44, in _wrapped_view_func
    response = view_func(request, *args, **kwargs)
  File "/testbed/tests/messages_tests/urls.py", line 32, in add
    getattr(messages, message_type)(request, msg)
  File "/testbed/django/contrib/messages/api.py", line 90, in warning
    fail_silently=fail_silently)
  File "/testbed/django/contrib/messages/api.py", line 30, in add_message
    'You cannot add messages without installing '
django.contrib.messages.api.MessageFailure: You cannot add messages without installing django.contrib.messages.middleware.MessageMiddleware
Internal Server Error: /add/error/
Traceback (most recent call last):
  File "/testbed/django/contrib/messages/api.py", line 21, in add_message
    messages = request._messages
AttributeError: 'WSGIRequest' object has no attribute '_messages'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/django/views/decorators/cache.py", line 44, in _wrapped_view_func
    response = view_func(request, *args, **kwargs)
  File "/testbed/tests/messages_tests/urls.py", line 32, in add
    getattr(messages, message_type)(request, msg)
  File "/testbed/django/contrib/messages/api.py", line 96, in error
    fail_silently=fail_silently)
  File "/testbed/django/contrib/messages/api.py", line 30, in add_message
    'You cannot add messages without installing '
django.contrib.messages.api.MessageFailure: You cannot add messages without installing django.contrib.messages.middleware.MessageMiddleware
...................................Not Found: /regular_url/that/does/not/exist
FNot Found: /regular_url/that/does/not/exist
.Not Found: /regular_url/that/does/not/exist
.Not Found: /regular_url/that/does/not/exist
FNot Found: /regular_url/that/does/not/exist
.Not Found: /regular_url/that/does/not/exist
FNot Found: /regular_url/that/does/not/exist
.Not Found: /regular_url/that/does/not/exist
F..........................................................................Not Found: /middleware_exceptions/view/
...Internal Server Error: /middleware_exceptions/template_response/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 139, in _get_response
    % (middleware_method.__self__.__class__.__name__)
ValueError: NoTemplateResponseMiddleware.process_template_response didn't return an HttpResponse object. It returned None instead.
......Forbidden (Permission denied): /middleware_exceptions/permission_denied/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/middleware_exceptions/views.py", line 21, in permission_denied
    raise PermissionDenied()
django.core.exceptions.PermissionDenied
...E.E......................EE.........................../testbed/django/db/models/fields/__init__.py:1365: RuntimeWarning: DateTimeField (unbound) received a naive datetime (2024-11-19 21:53:43.504875) while time zone support is active.
  RuntimeWarning)
...................EEEEEEEEEEEEEEEE.Esssssss.....................................................................................................................................................................F........Internal Server Error: /render/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/shortcuts/views.py", line 7, in render_view
    'bar': 'BAR',
  File "/testbed/django/shortcuts.py", line 19, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "/testbed/django/template/loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: shortcuts/render_test.html
EInternal Server Error: /render/content_type/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/shortcuts/views.py", line 25, in render_view_with_content_type
    }, content_type='application/x-rendertest')
  File "/testbed/django/shortcuts.py", line 19, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "/testbed/django/template/loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: shortcuts/render_test.html
EInternal Server Error: /render/multiple_templates/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/shortcuts/views.py", line 17, in render_view_with_multiple_templates
    'bar': 'BAR',
  File "/testbed/django/shortcuts.py", line 19, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "/testbed/django/template/loader.py", line 59, in render_to_string
    template = select_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: shortcuts/no_such_template.html, shortcuts/render_test.html
EInternal Server Error: /render/status/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/shortcuts/views.py", line 32, in render_view_with_status
    }, status=403)
  File "/testbed/django/shortcuts.py", line 19, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "/testbed/django/template/loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: shortcuts/render_test.html
EInternal Server Error: /render/using/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/shortcuts/views.py", line 37, in render_view_with_using
    return render(request, 'shortcuts/using.html', using=using)
  File "/testbed/django/shortcuts.py", line 19, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "/testbed/django/template/loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: shortcuts/using.html
E.......................FF........................................................E......................................F.F.F.....F.FFFF..FFFFFFFFFF.........................Forbidden (CSRF cookie not set.): 
E..E.E.EE.E....Forbidden (CSRF cookie not set.): 
Es.E.sE.E.Forbidden (CSRF cookie not set.): 
s......F..........Internal Server Error: /template_response_view/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 145, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 143, in _get_response
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 65, in resolve_template
    return get_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: response.html
EInternal Server Error: /template_response_view/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 145, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 143, in _get_response
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 65, in resolve_template
    return get_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: response.html
E........EEE.E.EE.......E..EE......E.....Forbidden (CSRF cookie not set.): /post_view/
..............Internal Server Error: /check_unicode/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/test_client_regress/views.py", line 97, in return_unicode
    return render(request, 'unicode.html')
  File "/testbed/django/shortcuts.py", line 19, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "/testbed/django/template/loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: unicode.html
EInternal Server Error: /check_unicode/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/test_client_regress/views.py", line 97, in return_unicode
    return render(request, 'unicode.html')
  File "/testbed/django/shortcuts.py", line 19, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "/testbed/django/template/loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: unicode.html
E...........................Not Found: /non_existent_view/
.............Internal Server Error: /request_data/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/test_client_regress/views.py", line 42, in request_data
    'data': data,
  File "/testbed/django/shortcuts.py", line 19, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "/testbed/django/template/loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: base.html
EInternal Server Error: /request_data/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/test_client_regress/views.py", line 42, in request_data
    'data': data,
  File "/testbed/django/shortcuts.py", line 19, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "/testbed/django/template/loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: base.html
E........Not Found: /
.....................Not Found: /no_such_view/
F................................s..................................................................Not Found: /test/
Internal Server Error: /bad_view/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/urlpatterns_reverse/views.py", line 56, in bad_view
    raise ValueError("I don't think I'm getting good value for this view")
ValueError: I don't think I'm getting good value for this view
.......................................Internal Server Error: /test/me/
Traceback (most recent call last):
  File "/testbed/django/urls/resolvers.py", line 591, in url_patterns
    iter(patterns)
TypeError: 'NoneType' object is not iterable

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 100, in _get_response
    resolver_match = resolver.resolve(request.path_info)
  File "/testbed/django/urls/resolvers.py", line 545, in resolve
    for pattern in self.url_patterns:
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 598, in url_patterns
    raise ImproperlyConfigured(msg.format(name=self.urlconf_name)) from e
django.core.exceptions.ImproperlyConfigured: The included URLconf 'None' does not appear to have any patterns in it. If you see valid patterns in the file then the issue is probably caused by a circular import.
....Internal Server Error: /second_test/
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/utils/deprecation.py", line 93, in __call__
    response = self.process_response(request, response)
  File "/testbed/tests/urlpatterns_reverse/middleware.py", line 25, in process_response
    return HttpResponse(reverse('outer'))
  File "/testbed/django/urls/base.py", line 87, in reverse
    return iri_to_uri(resolver._reverse_with_prefix(view, prefix, *args, **kwargs))
  File "/testbed/django/urls/resolvers.py", line 685, in _reverse_with_prefix
    raise NoReverseMatch(msg)
django.urls.exceptions.NoReverseMatch: Reverse for 'outer' not found. 'outer' is not a valid view function or pattern name.
..Not Found: /second_test/
.Not Found: /inner_urlconf/second_test/
.Not Found: /test/me/
Not Found: /inner_urlconf/second_test/
.Not Found: /second_test/
..............F...........................F....................................................................................ssssssssssssssssssss..........................................................................................................................................................................................................................................................................F......................F..........................................................FE..EE.EE.EEEEEEE..ssEEE.................................FEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEssEEEEE..F....E....EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE...Method Not Allowed (POST): 
Method Not Allowed (PUT): 
Method Not Allowed (DELETE): 

======================================================================
ERROR: setUpClass (auth_tests.test_admin_multidb.MultiDatabaseTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 1100, in setUpClass
    super().setUpClass()
  File "/testbed/django/test/testcases.py", line 177, in setUpClass
    cls._add_databases_failures()
  File "/testbed/django/test/testcases.py", line 198, in _add_databases_failures
    cls.databases = cls._validate_databases()
  File "/testbed/django/test/testcases.py", line 193, in _validate_databases
    raise ImproperlyConfigured(message)
django.core.exceptions.ImproperlyConfigured: auth_tests.test_admin_multidb.MultiDatabaseTests.databases refers to 'other' which is not defined in settings.DATABASES.

======================================================================
ERROR: test_stacked_mixins_success (auth_tests.test_mixins.AccessMixinTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/auth_tests/test_mixins.py", line 61, in test_stacked_mixins_success
    response = view(request)
  File "/testbed/django/views/generic/base.py", line 70, in view
    return self.dispatch(request, *args, **kwargs)
  File "/testbed/django/contrib/auth/mixins.py", line 52, in dispatch
    return super().dispatch(request, *args, **kwargs)
  File "/testbed/django/contrib/auth/mixins.py", line 84, in dispatch
    return self.handle_no_permission()
  File "/testbed/django/contrib/auth/mixins.py", line 43, in handle_no_permission
    raise PermissionDenied(self.get_permission_denied_message())
django.core.exceptions.PermissionDenied

======================================================================
ERROR: test_many_permissions_pass (auth_tests.test_mixins.PermissionsRequiredMixinTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/auth_tests/test_mixins.py", line 238, in test_many_permissions_pass
    resp = AView.as_view()(request)
  File "/testbed/django/views/generic/base.py", line 70, in view
    return self.dispatch(request, *args, **kwargs)
  File "/testbed/django/contrib/auth/mixins.py", line 84, in dispatch
    return self.handle_no_permission()
  File "/testbed/django/contrib/auth/mixins.py", line 43, in handle_no_permission
    raise PermissionDenied(self.get_permission_denied_message())
django.core.exceptions.PermissionDenied

======================================================================
ERROR: test_single_permission_pass (auth_tests.test_mixins.PermissionsRequiredMixinTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/auth_tests/test_mixins.py", line 247, in test_single_permission_pass
    resp = AView.as_view()(request)
  File "/testbed/django/views/generic/base.py", line 70, in view
    return self.dispatch(request, *args, **kwargs)
  File "/testbed/django/contrib/auth/mixins.py", line 84, in dispatch
    return self.handle_no_permission()
  File "/testbed/django/contrib/auth/mixins.py", line 43, in handle_no_permission
    raise PermissionDenied(self.get_permission_denied_message())
django.core.exceptions.PermissionDenied

======================================================================
ERROR: test_validate_property (auth_tests.test_validators.UserAttributeSimilarityValidatorTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 367, in inner
    with self as context:
  File "/testbed/django/test/utils.py", line 335, in __enter__
    return self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/auth_tests/models/__init__.py", line 1, in <module>
    from .custom_permissions import CustomPermissionsUser
  File "/testbed/tests/auth_tests/models/custom_permissions.py", line 9, in <module>
    from .custom_user import CustomUserManager, RemoveGroupsAndPermissions
  File "/testbed/tests/auth_tests/models/custom_user.py", line 36, in <module>
    class CustomUser(AbstractBaseUser):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class auth_tests.models.custom_user.CustomUser doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: setUpClass (check_framework.test_database.DatabaseCheckTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 1100, in setUpClass
    super().setUpClass()
  File "/testbed/django/test/testcases.py", line 177, in setUpClass
    cls._add_databases_failures()
  File "/testbed/django/test/testcases.py", line 198, in _add_databases_failures
    cls.databases = cls._validate_databases()
  File "/testbed/django/test/testcases.py", line 193, in _validate_databases
    raise ImproperlyConfigured(message)
django.core.exceptions.ImproperlyConfigured: check_framework.test_database.DatabaseCheckTests.databases refers to 'other' which is not defined in settings.DATABASES.

======================================================================
ERROR: test_collision_abstract_model (check_framework.test_model_checks.ConstraintNameTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/check_framework/models.py", line 5, in <module>
    class SimpleModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class check_framework.models.SimpleModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_collision_across_apps (check_framework.test_model_checks.ConstraintNameTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/check_framework/models.py", line 5, in <module>
    class SimpleModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class check_framework.models.SimpleModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_collision_in_different_models (check_framework.test_model_checks.ConstraintNameTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/check_framework/models.py", line 5, in <module>
    class SimpleModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class check_framework.models.SimpleModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_collision_in_same_model (check_framework.test_model_checks.ConstraintNameTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/check_framework/models.py", line 5, in <module>
    class SimpleModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class check_framework.models.SimpleModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_no_collision_abstract_model_interpolation (check_framework.test_model_checks.ConstraintNameTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/check_framework/models.py", line 5, in <module>
    class SimpleModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class check_framework.models.SimpleModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_no_collision_across_apps_interpolation (check_framework.test_model_checks.ConstraintNameTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/check_framework/models.py", line 5, in <module>
    class SimpleModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class check_framework.models.SimpleModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: setUpClass (context_processors.tests.DebugContextProcessorTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 1100, in setUpClass
    super().setUpClass()
  File "/testbed/django/test/testcases.py", line 177, in setUpClass
    cls._add_databases_failures()
  File "/testbed/django/test/testcases.py", line 198, in _add_databases_failures
    cls.databases = cls._validate_databases()
  File "/testbed/django/test/testcases.py", line 193, in _validate_databases
    raise ImproperlyConfigured(message)
django.core.exceptions.ImproperlyConfigured: context_processors.tests.DebugContextProcessorTests.databases refers to 'other' which is not defined in settings.DATABASES.

======================================================================
ERROR: test_sqlflush_no_tables (empty_models.test_commands.CoreCommandsNoOutputTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 262, in _setup_and_call
    self._pre_setup()
  File "/testbed/django/test/testcases.py", line 915, in _pre_setup
    apps.set_available_apps(self.available_apps)
  File "/testbed/django/apps/registry.py", line 315, in set_available_apps
    % ", ".join(available - installed)
ValueError: Available apps isn't a subset of installed apps, extra apps: empty_models

======================================================================
ERROR: test_sqlsequencereset_no_sequences (empty_models.test_commands.CoreCommandsNoOutputTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 262, in _setup_and_call
    self._pre_setup()
  File "/testbed/django/test/testcases.py", line 915, in _pre_setup
    apps.set_available_apps(self.available_apps)
  File "/testbed/django/apps/registry.py", line 315, in set_available_apps
    % ", ".join(available - installed)
ValueError: Available apps isn't a subset of installed apps, extra apps: empty_models

======================================================================
ERROR: test_loaddata (fixtures_model_package.tests.FixtureTestCase)
Fixtures can load data into models defined in packages
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/fixtures_model_package/tests.py", line 29, in test_loaddata
    management.call_command("loaddata", "fixture1.json", verbosity=0)
  File "/testbed/django/core/management/__init__.py", line 168, in call_command
    return command.execute(*args, **defaults)
  File "/testbed/django/core/management/base.py", line 369, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/core/management/commands/loaddata.py", line 72, in handle
    self.loaddata(fixture_labels)
  File "/testbed/django/core/management/commands/loaddata.py", line 106, in loaddata
    if self.find_fixtures(fixture_label):
  File "/testbed/django/core/management/commands/loaddata.py", line 271, in find_fixtures
    raise CommandError("No fixture named '%s' found." % fixture_name)
django.core.management.base.CommandError: No fixture named 'fixture1' found.

======================================================================
ERROR: setUpClass (fixtures_model_package.tests.SampleTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 1108, in setUpClass
    call_command('loaddata', *cls.fixtures, **{'verbosity': 0, 'database': db_name})
  File "/testbed/django/core/management/__init__.py", line 168, in call_command
    return command.execute(*args, **defaults)
  File "/testbed/django/core/management/base.py", line 369, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/core/management/commands/loaddata.py", line 72, in handle
    self.loaddata(fixture_labels)
  File "/testbed/django/core/management/commands/loaddata.py", line 106, in loaddata
    if self.find_fixtures(fixture_label):
  File "/testbed/django/core/management/commands/loaddata.py", line 271, in find_fixtures
    raise CommandError("No fixture named '%s' found." % fixture_name)
django.core.management.base.CommandError: No fixture named 'fixture1' found.

======================================================================
ERROR: setUpClass (flatpages_tests.test_sitemaps.FlatpagesSitemapTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/db/backends/utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "/testbed/django/db/backends/sqlite3/base.py", line 402, in execute
    return Database.Cursor.execute(self, query, params)
sqlite3.OperationalError: no such table: django_flatpage

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/testbed/tests/flatpages_tests/test_sitemaps.py", line 20, in setUpClass
    super().setUpClass()
  File "/testbed/django/test/testcases.py", line 1114, in setUpClass
    cls.setUpTestData()
  File "/testbed/tests/flatpages_tests/test_sitemaps.py", line 29, in setUpTestData
    current_site.flatpage_set.create(url="/foo/", title="foo")
  File "/testbed/django/db/models/fields/related_descriptors.py", line 1016, in create
    new_obj = super(ManyRelatedManager, self.db_manager(db)).create(**kwargs)
  File "/testbed/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/testbed/django/db/models/query.py", line 443, in create
    obj.save(force_insert=True, using=self.db)
  File "/testbed/django/db/models/base.py", line 750, in save
    force_update=force_update, update_fields=update_fields)
  File "/testbed/django/db/models/base.py", line 788, in save_base
    force_update, using, update_fields,
  File "/testbed/django/db/models/base.py", line 891, in _save_table
    results = self._do_insert(cls._base_manager, using, fields, returning_fields, raw)
  File "/testbed/django/db/models/base.py", line 930, in _do_insert
    using=using, raw=raw,
  File "/testbed/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/testbed/django/db/models/query.py", line 1229, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "/testbed/django/db/models/sql/compiler.py", line 1381, in execute_sql
    cursor.execute(sql, params)
  File "/testbed/django/db/backends/utils.py", line 98, in execute
    return super().execute(sql, params)
  File "/testbed/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/testbed/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/testbed/django/db/backends/utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "/testbed/django/db/utils.py", line 90, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "/testbed/django/db/backends/utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "/testbed/django/db/backends/sqlite3/base.py", line 402, in execute
    return Database.Cursor.execute(self, query, params)
django.db.utils.OperationalError: no such table: django_flatpage

======================================================================
ERROR: test_verbose_name (i18n.contenttypes.tests.ContentTypeTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/i18n/contenttypes/tests.py", line 21, in test_verbose_name
    company_type = ContentType.objects.get(app_label='i18n', model='company')
  File "/testbed/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/testbed/django/db/models/query.py", line 427, in get
    self.model._meta.object_name
django.contrib.contenttypes.models.ContentType.DoesNotExist: ContentType matching query does not exist.

======================================================================
ERROR: test_check_constraints (invalid_models_tests.test_models.ConstraintsTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 1217, in test_check_constraints
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_check_constraints_required_db_features (invalid_models_tests.test_models.ConstraintsTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 1237, in test_check_constraints_required_db_features
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_choices_named_group (invalid_models_tests.test_ordinary_fields.UUIDFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 778, in test_choices_named_group
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_first (migrations.test_loader.LoaderTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/migrations/test_loader.py", line 155, in test_first
    migration_loader = MigrationLoader(connection)
  File "/testbed/django/db/migrations/loader.py", line 49, in __init__
    self.build_graph()
  File "/testbed/django/db/migrations/loader.py", line 225, in build_graph
    self.add_external_dependencies(key, migration)
  File "/testbed/django/db/migrations/loader.py", line 189, in add_external_dependencies
    parent = self.check_key(parent, key[0])
  File "/testbed/django/db/migrations/loader.py", line 172, in check_key
    raise ValueError("Dependency on unknown app: %s" % key[0])
ValueError: Dependency on unknown app: migrations

======================================================================
ERROR: test_load (migrations.test_loader.LoaderTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/migrations/test_loader.py", line 64, in test_load
    migration_loader.graph.forwards_plan(("migrations", "0002_second")),
  File "/testbed/django/db/migrations/graph.py", line 204, in forwards_plan
    raise NodeNotFoundError("Node %r not a valid node" % (target,), target)
django.db.migrations.exceptions.NodeNotFoundError: Node ('migrations', '0002_second') not a valid node

======================================================================
ERROR: test_load_unmigrated_dependency (migrations.test_loader.LoaderTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/migrations/test_loader.py", line 113, in test_load_unmigrated_dependency
    migration_loader.graph.forwards_plan(("migrations", "0001_initial")),
  File "/testbed/django/db/migrations/graph.py", line 204, in forwards_plan
    raise NodeNotFoundError("Node %r not a valid node" % (target,), target)
django.db.migrations.exceptions.NodeNotFoundError: Node ('migrations', '0001_initial') not a valid node

======================================================================
ERROR: test_loading_namespace_package (migrations.test_loader.LoaderTests)
Migration directories without an __init__.py file are loaded.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/migrations/test_loader.py", line 518, in test_loading_namespace_package
    migration_loader.graph.forwards_plan(('migrations', '0001_initial')),
  File "/testbed/django/db/migrations/graph.py", line 204, in forwards_plan
    raise NodeNotFoundError("Node %r not a valid node" % (target,), target)
django.db.migrations.exceptions.NodeNotFoundError: Node ('migrations', '0001_initial') not a valid node

======================================================================
ERROR: test_loading_squashed_complex (migrations.test_loader.LoaderTests)
Tests loading a complex set of squashed migrations
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/migrations/test_loader.py", line 272, in test_loading_squashed_complex
    self.assertEqual(num_nodes(), 5)
  File "/testbed/tests/migrations/test_loader.py", line 267, in num_nodes
    plan = set(loader.graph.forwards_plan(('migrations', '7_auto')))
  File "/testbed/django/db/migrations/graph.py", line 204, in forwards_plan
    raise NodeNotFoundError("Node %r not a valid node" % (target,), target)
django.db.migrations.exceptions.NodeNotFoundError: Node ('migrations', '7_auto') not a valid node

======================================================================
ERROR: test_loading_squashed_erroneous (migrations.test_loader.LoaderTests)
Tests loading a complex but erroneous set of squashed migrations
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/migrations/test_loader.py", line 365, in test_loading_squashed_erroneous
    self.assertEqual(num_nodes(), 5)
  File "/testbed/tests/migrations/test_loader.py", line 360, in num_nodes
    plan = set(loader.graph.forwards_plan(('migrations', '7_auto')))
  File "/testbed/django/db/migrations/graph.py", line 204, in forwards_plan
    raise NodeNotFoundError("Node %r not a valid node" % (target,), target)
django.db.migrations.exceptions.NodeNotFoundError: Node ('migrations', '7_auto') not a valid node

======================================================================
ERROR: test_name_match (migrations.test_loader.LoaderTests)
Tests prefix name matching
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/migrations/test_loader.py", line 171, in test_name_match
    migration_loader.get_migration_by_prefix("migrations", "0001").name,
  File "/testbed/django/db/migrations/loader.py", line 142, in get_migration_by_prefix
    raise KeyError("There no migrations for '%s' with the prefix '%s'" % (app_label, name_prefix))
KeyError: "There no migrations for 'migrations' with the prefix '0001'"

======================================================================
ERROR: test_plan_handles_repeated_migrations (migrations.test_loader.LoaderTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/migrations/test_loader.py", line 98, in test_plan_handles_repeated_migrations
    migration_loader = MigrationLoader(connection)
  File "/testbed/django/db/migrations/loader.py", line 49, in __init__
    self.build_graph()
  File "/testbed/django/db/migrations/loader.py", line 246, in build_graph
    self.graph.validate_consistency()
  File "/testbed/django/db/migrations/graph.py", line 195, in validate_consistency
    [n.raise_error() for n in self.node_map.values() if isinstance(n, DummyNode)]
  File "/testbed/django/db/migrations/graph.py", line 195, in <listcomp>
    [n.raise_error() for n in self.node_map.values() if isinstance(n, DummyNode)]
  File "/testbed/django/db/migrations/graph.py", line 58, in raise_error
    raise NodeNotFoundError(self.error_message, self.key, origin=self.origin)
django.db.migrations.exceptions.NodeNotFoundError: Migration migrations2.0001_initial dependencies reference nonexistent parent node ('migrations', '0002_second')

======================================================================
ERROR: test_run_before (migrations.test_loader.LoaderTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/migrations/test_loader.py", line 138, in test_run_before
    migration_loader.graph.forwards_plan(("migrations", "0002_second")),
  File "/testbed/django/db/migrations/graph.py", line 204, in forwards_plan
    raise NodeNotFoundError("Node %r not a valid node" % (target,), target)
django.db.migrations.exceptions.NodeNotFoundError: Node ('migrations', '0002_second') not a valid node

======================================================================
ERROR: setUpClass (migrations.test_loader.RecorderTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 1100, in setUpClass
    super().setUpClass()
  File "/testbed/django/test/testcases.py", line 177, in setUpClass
    cls._add_databases_failures()
  File "/testbed/django/test/testcases.py", line 198, in _add_databases_failures
    cls.databases = cls._validate_databases()
  File "/testbed/django/test/testcases.py", line 193, in _validate_databases
    raise ImproperlyConfigured(message)
django.core.exceptions.ImproperlyConfigured: migrations.test_loader.RecorderTests.databases refers to 'other' which is not defined in settings.DATABASES.

======================================================================
ERROR: setUpClass (sites_tests.tests.CreateDefaultSiteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 1100, in setUpClass
    super().setUpClass()
  File "/testbed/django/test/testcases.py", line 177, in setUpClass
    cls._add_databases_failures()
  File "/testbed/django/test/testcases.py", line 198, in _add_databases_failures
    cls.databases = cls._validate_databases()
  File "/testbed/django/test/testcases.py", line 193, in _validate_databases
    raise ImproperlyConfigured(message)
django.core.exceptions.ImproperlyConfigured: sites_tests.tests.CreateDefaultSiteTests.databases refers to 'other' which is not defined in settings.DATABASES.

======================================================================
ERROR: setUpClass (sites_tests.tests.SitesFrameworkTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 1100, in setUpClass
    super().setUpClass()
  File "/testbed/django/test/testcases.py", line 177, in setUpClass
    cls._add_databases_failures()
  File "/testbed/django/test/testcases.py", line 198, in _add_databases_failures
    cls.databases = cls._validate_databases()
  File "/testbed/django/test/testcases.py", line 193, in _validate_databases
    raise ImproperlyConfigured(message)
django.core.exceptions.ImproperlyConfigured: sites_tests.tests.SitesFrameworkTests.databases refers to 'other' which is not defined in settings.DATABASES.

======================================================================
ERROR: test_follow_relative_redirect (test_client.tests.ClientTest)
A URL with a relative redirect can be followed.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/test_client/tests.py", line 262, in test_follow_relative_redirect
    response = self.client.get('/accounts/', follow=True)
  File "/testbed/django/test/client.py", line 522, in get
    response = self._handle_redirects(response, data=data, **extra)
  File "/testbed/django/test/client.py", line 703, in _handle_redirects
    response = request_method(path, data=data, content_type=content_type, follow=False, **extra)
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 145, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 143, in _get_response
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 63, in resolve_template
    return select_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: login.html

======================================================================
ERROR: test_follow_relative_redirect_no_trailing_slash (test_client.tests.ClientTest)
A URL with a relative redirect with no trailing slash can be followed.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/test_client/tests.py", line 268, in test_follow_relative_redirect_no_trailing_slash
    response = self.client.get('/accounts/no_trailing_slash', follow=True)
  File "/testbed/django/test/client.py", line 522, in get
    response = self._handle_redirects(response, data=data, **extra)
  File "/testbed/django/test/client.py", line 703, in _handle_redirects
    response = request_method(path, data=data, content_type=content_type, follow=False, **extra)
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 145, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 143, in _get_response
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 63, in resolve_template
    return select_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: login.html

======================================================================
ERROR: test_force_login_with_backend (test_client.tests.ClientTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/test_client/tests.py", line 621, in test_force_login_with_backend
    self.assertRedirects(response, '/accounts/login/?next=/login_protected_view/')
  File "/testbed/django/test/testcases.py", line 380, in assertRedirects
    **extra,
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 145, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 143, in _get_response
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 63, in resolve_template
    return select_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: login.html

======================================================================
ERROR: test_form_error_with_template (test_client.tests.ClientTest)
POST erroneous data to a form using multiple templates
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/test_client/tests.py", line 415, in test_form_error_with_template
    response = self.client.post('/form_view_with_template/', post_data)
  File "/testbed/django/test/client.py", line 529, in post
    response = super().post(path, data=data, content_type=content_type, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 356, in post
    secure=secure, **extra)
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/test_client/views.py", line 215, in form_view_with_template
    'message': message,
  File "/testbed/django/shortcuts.py", line 19, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "/testbed/django/template/loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: form_view.html

======================================================================
ERROR: test_incomplete_data_form_with_template (test_client.tests.ClientTest)
POST incomplete data to a form using multiple templates
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/test_client/tests.py", line 396, in test_incomplete_data_form_with_template
    response = self.client.post('/form_view_with_template/', post_data)
  File "/testbed/django/test/client.py", line 529, in post
    response = super().post(path, data=data, content_type=content_type, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 356, in post
    secure=secure, **extra)
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/test_client/views.py", line 215, in form_view_with_template
    'message': message,
  File "/testbed/django/shortcuts.py", line 19, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "/testbed/django/template/loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: form_view.html

======================================================================
ERROR: test_logout (test_client.tests.ClientTest)
Request a logout after logging in
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/test_client/tests.py", line 589, in test_logout
    self.assertRedirects(response, '/accounts/login/?next=/login_protected_view/')
  File "/testbed/django/test/testcases.py", line 380, in assertRedirects
    **extra,
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 145, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 143, in _get_response
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 63, in resolve_template
    return select_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: login.html

======================================================================
ERROR: test_logout_cookie_sessions (test_client.tests.ClientTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/test_client/tests.py", line 662, in test_logout_cookie_sessions
    self.test_logout()
  File "/testbed/tests/test_client/tests.py", line 589, in test_logout
    self.assertRedirects(response, '/accounts/login/?next=/login_protected_view/')
  File "/testbed/django/test/testcases.py", line 380, in assertRedirects
    **extra,
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 145, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 143, in _get_response
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 63, in resolve_template
    return select_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: login.html

======================================================================
ERROR: test_logout_with_force_login (test_client.tests.ClientTest)
Request a logout after logging in
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/test_client/tests.py", line 606, in test_logout_with_force_login
    self.assertRedirects(response, '/accounts/login/?next=/login_protected_view/')
  File "/testbed/django/test/testcases.py", line 380, in assertRedirects
    **extra,
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 145, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 143, in _get_response
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 63, in resolve_template
    return select_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: login.html

======================================================================
ERROR: test_relative_redirect (test_client.tests.ClientTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/test_client/tests.py", line 798, in test_relative_redirect
    self.assertRedirects(response, '/accounts/login/')
  File "/testbed/django/test/testcases.py", line 380, in assertRedirects
    **extra,
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 145, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 143, in _get_response
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 63, in resolve_template
    return select_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: login.html

======================================================================
ERROR: test_relative_redirect_no_trailing_slash (test_client.tests.ClientTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/test_client/tests.py", line 802, in test_relative_redirect_no_trailing_slash
    self.assertRedirects(response, '/accounts/login/')
  File "/testbed/django/test/testcases.py", line 380, in assertRedirects
    **extra,
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 145, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 143, in _get_response
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 63, in resolve_template
    return select_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: login.html

======================================================================
ERROR: test_valid_form_with_template (test_client.tests.ClientTest)
POST valid data to a form using multiple templates
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/test_client/tests.py", line 384, in test_valid_form_with_template
    response = self.client.post('/form_view_with_template/', post_data)
  File "/testbed/django/test/client.py", line 529, in post
    response = super().post(path, data=data, content_type=content_type, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 356, in post
    secure=secure, **extra)
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/test_client/views.py", line 215, in form_view_with_template
    'message': message,
  File "/testbed/django/shortcuts.py", line 19, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "/testbed/django/template/loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: form_view.html

======================================================================
ERROR: test_view_with_force_login (test_client.tests.ClientTest)
Request a page that is protected with @login_required
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/test_client/tests.py", line 464, in test_view_with_force_login
    self.assertRedirects(response, '/accounts/login/?next=/login_protected_view/')
  File "/testbed/django/test/testcases.py", line 380, in assertRedirects
    **extra,
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 145, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 143, in _get_response
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 63, in resolve_template
    return select_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: login.html

======================================================================
ERROR: test_view_with_force_login_and_custom_redirect (test_client.tests.ClientTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/test_client/tests.py", line 527, in test_view_with_force_login_and_custom_redirect
    self.assertRedirects(response, '/accounts/login/?redirect_to=/login_protected_view_custom_redirect/')
  File "/testbed/django/test/testcases.py", line 380, in assertRedirects
    **extra,
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 145, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 143, in _get_response
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 63, in resolve_template
    return select_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: login.html

======================================================================
ERROR: test_view_with_inactive_force_login (test_client.tests.ClientTest)
Request a page that is protected with @login, but use an inactive login
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/test_client/tests.py", line 564, in test_view_with_inactive_force_login
    self.assertRedirects(response, '/accounts/login/?next=/login_protected_view/')
  File "/testbed/django/test/testcases.py", line 380, in assertRedirects
    **extra,
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 145, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 143, in _get_response
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 63, in resolve_template
    return select_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: login.html

======================================================================
ERROR: test_view_with_login (test_client.tests.ClientTest)
Request a page that is protected with @login_required
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/test_client/tests.py", line 442, in test_view_with_login
    self.assertRedirects(response, '/accounts/login/?next=/login_protected_view/')
  File "/testbed/django/test/testcases.py", line 380, in assertRedirects
    **extra,
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 145, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 143, in _get_response
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 63, in resolve_template
    return select_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: login.html

======================================================================
ERROR: test_view_with_login_and_custom_redirect (test_client.tests.ClientTest)
Request a page that is protected with @login_required(redirect_field_name='redirect_to')
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/test_client/tests.py", line 509, in test_view_with_login_and_custom_redirect
    self.assertRedirects(response, '/accounts/login/?redirect_to=/login_protected_view_custom_redirect/')
  File "/testbed/django/test/testcases.py", line 380, in assertRedirects
    **extra,
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 145, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 143, in _get_response
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 63, in resolve_template
    return select_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: login.html

======================================================================
ERROR: test_view_with_login_when_sessions_app_is_not_installed (test_client.tests.ClientTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/test_client/tests.py", line 458, in test_view_with_login_when_sessions_app_is_not_installed
    self.test_view_with_login()
  File "/testbed/tests/test_client/tests.py", line 442, in test_view_with_login
    self.assertRedirects(response, '/accounts/login/?next=/login_protected_view/')
  File "/testbed/django/test/testcases.py", line 380, in assertRedirects
    **extra,
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 145, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 143, in _get_response
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 63, in resolve_template
    return select_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: login.html

======================================================================
ERROR: test_view_with_method_force_login (test_client.tests.ClientTest)
Request a page that is protected with a @login_required method
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/test_client/tests.py", line 494, in test_view_with_method_force_login
    self.assertRedirects(response, '/accounts/login/?next=/login_protected_method_view/')
  File "/testbed/django/test/testcases.py", line 380, in assertRedirects
    **extra,
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 145, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 143, in _get_response
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 63, in resolve_template
    return select_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: login.html

======================================================================
ERROR: test_view_with_method_login (test_client.tests.ClientTest)
Request a page that is protected with a @login_required method
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/test_client/tests.py", line 479, in test_view_with_method_login
    self.assertRedirects(response, '/accounts/login/?next=/login_protected_method_view/')
  File "/testbed/django/test/testcases.py", line 380, in assertRedirects
    **extra,
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 145, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 143, in _get_response
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 63, in resolve_template
    return select_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: login.html

======================================================================
ERROR: test_view_with_method_permissions (test_client.tests.ClientTest)
Request a page that is protected with a @permission_required method
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/test_client/tests.py", line 701, in test_view_with_method_permissions
    self.assertRedirects(response, '/accounts/login/?next=/permission_protected_method_view/')
  File "/testbed/django/test/testcases.py", line 380, in assertRedirects
    **extra,
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 145, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 143, in _get_response
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 63, in resolve_template
    return select_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: login.html

======================================================================
ERROR: test_view_with_permissions (test_client.tests.ClientTest)
Request a page that is protected with @permission_required
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/test_client/tests.py", line 669, in test_view_with_permissions
    self.assertRedirects(response, '/accounts/login/?next=/permission_protected_view/')
  File "/testbed/django/test/testcases.py", line 380, in assertRedirects
    **extra,
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 145, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 143, in _get_response
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 63, in resolve_template
    return select_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: login.html

======================================================================
ERROR: test_multiple_context (test_client_regress.tests.AssertTemplateUsedTests)
Template assertions work when there are multiple contexts
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/test_client_regress/tests.py", line 257, in test_multiple_context
    response = self.client.post('/form_view_with_template/', post_data)
  File "/testbed/django/test/client.py", line 529, in post
    response = super().post(path, data=data, content_type=content_type, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 356, in post
    secure=secure, **extra)
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/test_client/views.py", line 215, in form_view_with_template
    'message': message,
  File "/testbed/django/shortcuts.py", line 19, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "/testbed/django/template/loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: form_view.html

======================================================================
ERROR: test_template_rendered_multiple_times (test_client_regress.tests.AssertTemplateUsedTests)
Template assertions work when a template is rendered multiple times.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/test_client_regress/tests.py", line 279, in test_template_rendered_multiple_times
    response = self.client.get('/render_template_multiple_times/')
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/test_client_regress/views.py", line 156, in render_template_multiple_times
    render_to_string('base.html') + render_to_string('base.html'))
  File "/testbed/django/template/loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: base.html

======================================================================
ERROR: test_15368 (test_client_regress.tests.ContextTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/test_client_regress/tests.py", line 959, in test_15368
    response = self.client.get("/request_context_view/")
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/test_client_regress/views.py", line 150, in request_context_view
    return render(request, 'request_context.html')
  File "/testbed/django/shortcuts.py", line 19, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "/testbed/django/template/loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: request_context.html

======================================================================
ERROR: test_inherited_context (test_client_regress.tests.ContextTests)
Context variables can be retrieved from a list of contexts
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/test_client_regress/tests.py", line 914, in test_inherited_context
    response = self.client.get("/request_data_extended/", data={'foo': 'whiz'})
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/test_client_regress/views.py", line 42, in request_data
    'data': data,
  File "/testbed/django/shortcuts.py", line 19, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "/testbed/django/template/loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: extended.html

======================================================================
ERROR: test_nested_requests (test_client_regress.tests.ContextTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/test_client_regress/tests.py", line 966, in test_nested_requests
    response = self.client.get("/nested_view/")
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/test_client_regress/views.py", line 65, in nested_view
    return render(request, 'base.html', {'nested': 'yes'})
  File "/testbed/django/shortcuts.py", line 19, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "/testbed/django/template/loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: base.html

======================================================================
ERROR: test_single_context (test_client_regress.tests.ContextTests)
Context variables can be retrieved from a single context
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/test_client_regress/tests.py", line 903, in test_single_context
    response = self.client.get("/request_data/", data={'foo': 'whiz'})
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/test_client_regress/views.py", line 42, in request_data
    'data': data,
  File "/testbed/django/shortcuts.py", line 19, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "/testbed/django/template/loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: base.html

======================================================================
ERROR: test_logout_with_custom_auth_backend (test_client_regress.tests.SessionTests)
Request a logout after logging in with custom authentication backend
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/db/backends/utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "/testbed/django/db/backends/sqlite3/base.py", line 402, in execute
    return Database.Cursor.execute(self, query, params)
sqlite3.OperationalError: no such table: test_client_regress_customuser

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/test_client_regress/tests.py", line 1055, in test_logout_with_custom_auth_backend
    u = CustomUser.custom_objects.create(email='test@test.com')
  File "/testbed/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/testbed/django/db/models/query.py", line 443, in create
    obj.save(force_insert=True, using=self.db)
  File "/testbed/django/contrib/auth/base_user.py", line 66, in save
    super().save(*args, **kwargs)
  File "/testbed/django/db/models/base.py", line 750, in save
    force_update=force_update, update_fields=update_fields)
  File "/testbed/django/db/models/base.py", line 788, in save_base
    force_update, using, update_fields,
  File "/testbed/django/db/models/base.py", line 891, in _save_table
    results = self._do_insert(cls._base_manager, using, fields, returning_fields, raw)
  File "/testbed/django/db/models/base.py", line 930, in _do_insert
    using=using, raw=raw,
  File "/testbed/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/testbed/django/db/models/query.py", line 1229, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "/testbed/django/db/models/sql/compiler.py", line 1381, in execute_sql
    cursor.execute(sql, params)
  File "/testbed/django/db/backends/utils.py", line 98, in execute
    return super().execute(sql, params)
  File "/testbed/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/testbed/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/testbed/django/db/backends/utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "/testbed/django/db/utils.py", line 90, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "/testbed/django/db/backends/utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "/testbed/django/db/backends/sqlite3/base.py", line 402, in execute
    return Database.Cursor.execute(self, query, params)
django.db.utils.OperationalError: no such table: test_client_regress_customuser

======================================================================
ERROR: test_logout_with_custom_user (test_client_regress.tests.SessionTests)
Logout should send user_logged_out signal if custom user was logged in.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/db/backends/utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "/testbed/django/db/backends/sqlite3/base.py", line 402, in execute
    return Database.Cursor.execute(self, query, params)
sqlite3.OperationalError: no such table: test_client_regress_customuser

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/test_client_regress/tests.py", line 1036, in test_logout_with_custom_user
    u = CustomUser.custom_objects.create(email='test@test.com')
  File "/testbed/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/testbed/django/db/models/query.py", line 443, in create
    obj.save(force_insert=True, using=self.db)
  File "/testbed/django/contrib/auth/base_user.py", line 66, in save
    super().save(*args, **kwargs)
  File "/testbed/django/db/models/base.py", line 750, in save
    force_update=force_update, update_fields=update_fields)
  File "/testbed/django/db/models/base.py", line 788, in save_base
    force_update, using, update_fields,
  File "/testbed/django/db/models/base.py", line 891, in _save_table
    results = self._do_insert(cls._base_manager, using, fields, returning_fields, raw)
  File "/testbed/django/db/models/base.py", line 930, in _do_insert
    using=using, raw=raw,
  File "/testbed/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/testbed/django/db/models/query.py", line 1229, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "/testbed/django/db/models/sql/compiler.py", line 1381, in execute_sql
    cursor.execute(sql, params)
  File "/testbed/django/db/backends/utils.py", line 98, in execute
    return super().execute(sql, params)
  File "/testbed/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/testbed/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/testbed/django/db/backends/utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "/testbed/django/db/utils.py", line 90, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "/testbed/django/db/backends/utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "/testbed/django/db/backends/sqlite3/base.py", line 402, in execute
    return Database.Cursor.execute(self, query, params)
django.db.utils.OperationalError: no such table: test_client_regress_customuser

======================================================================
ERROR: test_session_language_deprecation (view_tests.tests.test_i18n.SetLanguageTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/view_tests/tests/test_i18n.py", line 170, in test_session_language_deprecation
    self.client.session[LANGUAGE_SESSION_KEY]
  File "/testbed/django/contrib/sessions/backends/base.py", line 64, in __getitem__
    return self._session[key]
KeyError: '_language'

======================================================================
ERROR: test_get_absolute_url (absolute_url_overrides.tests.AbsoluteUrlOverrideTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/absolute_url_overrides/tests.py", line 15, in test_get_absolute_url
    TestA = self._create_model_class('TestA', get_absolute_url)
  File "/testbed/tests/absolute_url_overrides/tests.py", line 58, in _create_model_class
    return type(class_name, (models.Model,), attrs)
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class absolute_url_overrides.TestA doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_insert_get_absolute_url (absolute_url_overrides.tests.AbsoluteUrlOverrideTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/absolute_url_overrides/tests.py", line 46, in test_insert_get_absolute_url
    TestC = self._create_model_class('TestC')
  File "/testbed/tests/absolute_url_overrides/tests.py", line 58, in _create_model_class
    return type(class_name, (models.Model,), attrs)
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class absolute_url_overrides.TestC doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_override_get_absolute_url (absolute_url_overrides.tests.AbsoluteUrlOverrideTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/absolute_url_overrides/tests.py", line 32, in test_override_get_absolute_url
    TestB = self._create_model_class('TestB', get_absolute_url)
  File "/testbed/tests/absolute_url_overrides/tests.py", line 58, in _create_model_class
    return type(class_name, (models.Model,), attrs)
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class absolute_url_overrides.TestB doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_custom_project_destination_missing (admin_scripts.tests.StartProject)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 262, in _setup_and_call
    self._pre_setup()
  File "/testbed/django/test/testcases.py", line 915, in _pre_setup
    apps.set_available_apps(self.available_apps)
  File "/testbed/django/apps/registry.py", line 315, in set_available_apps
    % ", ".join(available - installed)
ValueError: Available apps isn't a subset of installed apps, extra apps: admin_scripts

======================================================================
ERROR: test_custom_project_template (admin_scripts.tests.StartProject)
Make sure the startproject management command is able to use a different project template
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 262, in _setup_and_call
    self._pre_setup()
  File "/testbed/django/test/testcases.py", line 915, in _pre_setup
    apps.set_available_apps(self.available_apps)
  File "/testbed/django/apps/registry.py", line 315, in set_available_apps
    % ", ".join(available - installed)
ValueError: Available apps isn't a subset of installed apps, extra apps: admin_scripts

======================================================================
ERROR: test_custom_project_template_context_variables (admin_scripts.tests.StartProject)
Make sure template context variables are rendered with proper values
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 262, in _setup_and_call
    self._pre_setup()
  File "/testbed/django/test/testcases.py", line 915, in _pre_setup
    apps.set_available_apps(self.available_apps)
  File "/testbed/django/apps/registry.py", line 315, in set_available_apps
    % ", ".join(available - installed)
ValueError: Available apps isn't a subset of installed apps, extra apps: admin_scripts

======================================================================
ERROR: test_custom_project_template_from_tarball_by_path (admin_scripts.tests.StartProject)
Make sure the startproject management command is able to use a different project template from a tarball
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 262, in _setup_and_call
    self._pre_setup()
  File "/testbed/django/test/testcases.py", line 915, in _pre_setup
    apps.set_available_apps(self.available_apps)
  File "/testbed/django/apps/registry.py", line 315, in set_available_apps
    % ", ".join(available - installed)
ValueError: Available apps isn't a subset of installed apps, extra apps: admin_scripts

======================================================================
ERROR: test_custom_project_template_from_tarball_by_url (admin_scripts.tests.StartProject)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 262, in _setup_and_call
    self._pre_setup()
  File "/testbed/django/test/testcases.py", line 915, in _pre_setup
    apps.set_available_apps(self.available_apps)
  File "/testbed/django/apps/registry.py", line 315, in set_available_apps
    % ", ".join(available - installed)
ValueError: Available apps isn't a subset of installed apps, extra apps: admin_scripts

======================================================================
ERROR: test_custom_project_template_from_tarball_to_alternative_location (admin_scripts.tests.StartProject)
Startproject can use a project template from a tarball and create it in a specified location
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 262, in _setup_and_call
    self._pre_setup()
  File "/testbed/django/test/testcases.py", line 915, in _pre_setup
    apps.set_available_apps(self.available_apps)
  File "/testbed/django/apps/registry.py", line 315, in set_available_apps
    % ", ".join(available - installed)
ValueError: Available apps isn't a subset of installed apps, extra apps: admin_scripts

======================================================================
ERROR: test_custom_project_template_with_non_ascii_templates (admin_scripts.tests.StartProject)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 262, in _setup_and_call
    self._pre_setup()
  File "/testbed/django/test/testcases.py", line 915, in _pre_setup
    apps.set_available_apps(self.available_apps)
  File "/testbed/django/apps/registry.py", line 315, in set_available_apps
    % ", ".join(available - installed)
ValueError: Available apps isn't a subset of installed apps, extra apps: admin_scripts

======================================================================
ERROR: test_file_without_extension (admin_scripts.tests.StartProject)
Make sure the startproject management command is able to render custom files
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 262, in _setup_and_call
    self._pre_setup()
  File "/testbed/django/test/testcases.py", line 915, in _pre_setup
    apps.set_available_apps(self.available_apps)
  File "/testbed/django/apps/registry.py", line 315, in set_available_apps
    % ", ".join(available - installed)
ValueError: Available apps isn't a subset of installed apps, extra apps: admin_scripts

======================================================================
ERROR: test_importable_project_name (admin_scripts.tests.StartProject)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 262, in _setup_and_call
    self._pre_setup()
  File "/testbed/django/test/testcases.py", line 915, in _pre_setup
    apps.set_available_apps(self.available_apps)
  File "/testbed/django/apps/registry.py", line 315, in set_available_apps
    % ", ".join(available - installed)
ValueError: Available apps isn't a subset of installed apps, extra apps: admin_scripts

======================================================================
ERROR: test_invalid_project_name (admin_scripts.tests.StartProject)
Make sure the startproject management command validates a project name
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 262, in _setup_and_call
    self._pre_setup()
  File "/testbed/django/test/testcases.py", line 915, in _pre_setup
    apps.set_available_apps(self.available_apps)
  File "/testbed/django/apps/registry.py", line 315, in set_available_apps
    % ", ".join(available - installed)
ValueError: Available apps isn't a subset of installed apps, extra apps: admin_scripts

======================================================================
ERROR: test_no_escaping_of_project_variables (admin_scripts.tests.StartProject)
Make sure template context variables are not html escaped
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 262, in _setup_and_call
    self._pre_setup()
  File "/testbed/django/test/testcases.py", line 915, in _pre_setup
    apps.set_available_apps(self.available_apps)
  File "/testbed/django/apps/registry.py", line 315, in set_available_apps
    % ", ".join(available - installed)
ValueError: Available apps isn't a subset of installed apps, extra apps: admin_scripts

======================================================================
ERROR: test_project_template_tarball_url (admin_scripts.tests.StartProject)
Startproject management command handles project template tar/zip balls from non-canonical urls
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 262, in _setup_and_call
    self._pre_setup()
  File "/testbed/django/test/testcases.py", line 915, in _pre_setup
    apps.set_available_apps(self.available_apps)
  File "/testbed/django/apps/registry.py", line 315, in set_available_apps
    % ", ".join(available - installed)
ValueError: Available apps isn't a subset of installed apps, extra apps: admin_scripts

======================================================================
ERROR: test_simple_project (admin_scripts.tests.StartProject)
Make sure the startproject management command creates a project
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 262, in _setup_and_call
    self._pre_setup()
  File "/testbed/django/test/testcases.py", line 915, in _pre_setup
    apps.set_available_apps(self.available_apps)
  File "/testbed/django/apps/registry.py", line 315, in set_available_apps
    % ", ".join(available - installed)
ValueError: Available apps isn't a subset of installed apps, extra apps: admin_scripts

======================================================================
ERROR: test_simple_project_different_directory (admin_scripts.tests.StartProject)
Make sure the startproject management command creates a project in a specific directory
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 262, in _setup_and_call
    self._pre_setup()
  File "/testbed/django/test/testcases.py", line 915, in _pre_setup
    apps.set_available_apps(self.available_apps)
  File "/testbed/django/apps/registry.py", line 315, in set_available_apps
    % ", ".join(available - installed)
ValueError: Available apps isn't a subset of installed apps, extra apps: admin_scripts

======================================================================
ERROR: test_template_dir_with_trailing_slash (admin_scripts.tests.StartProject)
Ticket 17475: Template dir passed has a trailing path separator
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 262, in _setup_and_call
    self._pre_setup()
  File "/testbed/django/test/testcases.py", line 915, in _pre_setup
    apps.set_available_apps(self.available_apps)
  File "/testbed/django/apps/registry.py", line 315, in set_available_apps
    % ", ".join(available - installed)
ValueError: Available apps isn't a subset of installed apps, extra apps: admin_scripts

======================================================================
ERROR: test_wrong_args (admin_scripts.tests.StartProject)
Make sure passing the wrong kinds of arguments outputs an error and prints usage
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 262, in _setup_and_call
    self._pre_setup()
  File "/testbed/django/test/testcases.py", line 915, in _pre_setup
    apps.set_available_apps(self.available_apps)
  File "/testbed/django/apps/registry.py", line 315, in set_available_apps
    % ", ".join(available - installed)
ValueError: Available apps isn't a subset of installed apps, extra apps: admin_scripts

======================================================================
ERROR: test_collision_across_apps (check_framework.test_model_checks.DuplicateDBTableTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/check_framework/models.py", line 5, in <module>
    class SimpleModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class check_framework.models.SimpleModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_collision_across_apps_database_routers_installed (check_framework.test_model_checks.DuplicateDBTableTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/check_framework/models.py", line 5, in <module>
    class SimpleModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class check_framework.models.SimpleModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_collision_in_same_app (check_framework.test_model_checks.DuplicateDBTableTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/check_framework/models.py", line 5, in <module>
    class SimpleModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class check_framework.models.SimpleModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_collision_in_same_app_database_routers_installed (check_framework.test_model_checks.DuplicateDBTableTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/check_framework/models.py", line 5, in <module>
    class SimpleModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class check_framework.models.SimpleModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_no_collision_for_proxy_models (check_framework.test_model_checks.DuplicateDBTableTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/check_framework/models.py", line 5, in <module>
    class SimpleModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class check_framework.models.SimpleModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_no_collision_for_unmanaged_models (check_framework.test_model_checks.DuplicateDBTableTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/check_framework/models.py", line 5, in <module>
    class SimpleModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class check_framework.models.SimpleModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_collision_abstract_model (check_framework.test_model_checks.IndexNameTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/check_framework/models.py", line 5, in <module>
    class SimpleModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class check_framework.models.SimpleModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_collision_across_apps (check_framework.test_model_checks.IndexNameTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/check_framework/models.py", line 5, in <module>
    class SimpleModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class check_framework.models.SimpleModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_collision_in_different_models (check_framework.test_model_checks.IndexNameTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/check_framework/models.py", line 5, in <module>
    class SimpleModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class check_framework.models.SimpleModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_collision_in_same_model (check_framework.test_model_checks.IndexNameTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/check_framework/models.py", line 5, in <module>
    class SimpleModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class check_framework.models.SimpleModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_no_collision_abstract_model_interpolation (check_framework.test_model_checks.IndexNameTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/check_framework/models.py", line 5, in <module>
    class SimpleModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class check_framework.models.SimpleModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_no_collision_across_apps_interpolation (check_framework.test_model_checks.IndexNameTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/check_framework/models.py", line 5, in <module>
    class SimpleModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class check_framework.models.SimpleModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_default_details (check_framework.test_model_field_deprecation.TestDeprecatedField)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/check_framework/models.py", line 5, in <module>
    class SimpleModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class check_framework.models.SimpleModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_user_specified_details (check_framework.test_model_field_deprecation.TestDeprecatedField)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/check_framework/models.py", line 5, in <module>
    class SimpleModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class check_framework.models.SimpleModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_default_details (check_framework.test_model_field_deprecation.TestRemovedField)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/check_framework/models.py", line 5, in <module>
    class SimpleModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class check_framework.models.SimpleModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_user_specified_details (check_framework.test_model_field_deprecation.TestRemovedField)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/check_framework/models.py", line 5, in <module>
    class SimpleModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class check_framework.models.SimpleModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_checks_called_on_the_default_database (check_framework.test_multi_db.TestMultiDBChecks)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/check_framework/models.py", line 5, in <module>
    class SimpleModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class check_framework.models.SimpleModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_checks_called_on_the_other_database (check_framework.test_multi_db.TestMultiDBChecks)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/check_framework/models.py", line 5, in <module>
    class SimpleModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class check_framework.models.SimpleModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_content_type_field_pointing_to_wrong_model (contenttypes_tests.test_checks.GenericForeignKeyTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/contenttypes_tests/models.py", line 11, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class contenttypes_tests.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_field_name_ending_with_underscore (contenttypes_tests.test_checks.GenericForeignKeyTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/contenttypes_tests/models.py", line 11, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class contenttypes_tests.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_generic_foreign_key_checks_are_performed (contenttypes_tests.test_checks.GenericForeignKeyTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/contenttypes_tests/models.py", line 11, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class contenttypes_tests.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_invalid_content_type_field (contenttypes_tests.test_checks.GenericForeignKeyTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/contenttypes_tests/models.py", line 11, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class contenttypes_tests.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_missing_content_type_field (contenttypes_tests.test_checks.GenericForeignKeyTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/contenttypes_tests/models.py", line 11, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class contenttypes_tests.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_missing_object_id_field (contenttypes_tests.test_checks.GenericForeignKeyTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/contenttypes_tests/models.py", line 11, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class contenttypes_tests.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_field_name_ending_with_underscore (contenttypes_tests.test_checks.GenericRelationTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/contenttypes_tests/models.py", line 11, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class contenttypes_tests.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_missing_generic_foreign_key (contenttypes_tests.test_checks.GenericRelationTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/contenttypes_tests/models.py", line 11, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class contenttypes_tests.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_pointing_to_missing_model (contenttypes_tests.test_checks.GenericRelationTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/contenttypes_tests/models.py", line 11, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class contenttypes_tests.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_pointing_to_swapped_model (contenttypes_tests.test_checks.GenericRelationTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/contenttypes_tests/models.py", line 11, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class contenttypes_tests.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_valid_generic_relationship (contenttypes_tests.test_checks.GenericRelationTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/contenttypes_tests/models.py", line 11, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class contenttypes_tests.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_valid_generic_relationship_with_explicit_fields (contenttypes_tests.test_checks.GenericRelationTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/contenttypes_tests/models.py", line 11, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class contenttypes_tests.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_valid_self_referential_generic_relationship (contenttypes_tests.test_checks.GenericRelationTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/contenttypes_tests/models.py", line 11, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class contenttypes_tests.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_model_name_max_length (contenttypes_tests.test_checks.ModelCheckTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/contenttypes_tests/models.py", line 11, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class contenttypes_tests.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_model_name_too_long (contenttypes_tests.test_checks.ModelCheckTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/contenttypes_tests/models.py", line 11, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class contenttypes_tests.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: setUpClass (contenttypes_tests.test_operations.ContentTypeOperationsTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 177, in setUpClass
    cls._add_databases_failures()
  File "/testbed/django/test/testcases.py", line 198, in _add_databases_failures
    cls.databases = cls._validate_databases()
  File "/testbed/django/test/testcases.py", line 193, in _validate_databases
    raise ImproperlyConfigured(message)
django.core.exceptions.ImproperlyConfigured: contenttypes_tests.test_operations.ContentTypeOperationsTests.databases refers to 'other' which is not defined in settings.DATABASES.

======================================================================
ERROR: test_request_attributes (context_processors.tests.RequestContextProcessorTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/context_processors/tests.py", line 31, in test_request_attributes
    response = self.client.get(url)
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 100, in _get_response
    resolver_match = resolver.resolve(request.path_info)
  File "/testbed/django/urls/resolvers.py", line 545, in resolve
    for pattern in self.url_patterns:
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 589, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 582, in urlconf_module
    return import_module(self.urlconf_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/context_processors/urls.py", line 3, in <module>
    from . import views
  File "/testbed/tests/context_processors/views.py", line 3, in <module>
    from .models import DebugObject
  File "/testbed/tests/context_processors/models.py", line 4, in <module>
    class DebugObject(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class context_processors.models.DebugObject doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_descriptor_class (field_subclassing.tests.DescriptorClassTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/field_subclassing/tests.py", line 16, in test_descriptor_class
    class CustomDescriptorModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class field_subclassing.tests.CustomDescriptorModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_installed_apps_template_found (forms_tests.tests.test_renderers.DjangoTemplatesTests)
Can find a custom template in INSTALLED_APPS.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/template/backends/django.py", line 34, in get_template
    return Template(self.engine.get_template(template_name), self)
  File "/testbed/django/template/engine.py", line 143, in get_template
    template, origin = self.find_template(template_name)
  File "/testbed/django/template/engine.py", line 129, in find_template
    raise TemplateDoesNotExist(name, tried=tried)
django.template.exceptions.TemplateDoesNotExist: forms_tests/custom_widget.html

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/testbed/tests/forms_tests/tests/test_renderers.py", line 22, in test_installed_apps_template_found
    tpl = renderer.get_template('forms_tests/custom_widget.html')
  File "/testbed/django/forms/renderers.py", line 36, in get_template
    return self.engine.get_template(template_name)
  File "/testbed/django/template/backends/django.py", line 36, in get_template
    reraise(exc, self)
  File "/testbed/django/template/backends/django.py", line 84, in reraise
    raise new from exc
django.template.exceptions.TemplateDoesNotExist: forms_tests/custom_widget.html

======================================================================
ERROR: test_installed_apps_template_found (forms_tests.tests.test_renderers.Jinja2Tests)
Can find a custom template in INSTALLED_APPS.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/template/backends/jinja2.py", line 41, in get_template
    return Template(self.env.get_template(template_name), self)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/environment.py", line 997, in get_template
    return self._load_template(name, globals)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/environment.py", line 958, in _load_template
    template = self.loader.load(self, name, self.make_globals(globals))
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/loaders.py", line 125, in load
    source, filename, uptodate = self.get_source(environment, name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/loaders.py", line 214, in get_source
    raise TemplateNotFound(template)
jinja2.exceptions.TemplateNotFound: forms_tests/custom_widget.html

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/testbed/tests/forms_tests/tests/test_renderers.py", line 22, in test_installed_apps_template_found
    tpl = renderer.get_template('forms_tests/custom_widget.html')
  File "/testbed/django/forms/renderers.py", line 36, in get_template
    return self.engine.get_template(template_name)
  File "/testbed/django/template/backends/jinja2.py", line 43, in get_template
    raise TemplateDoesNotExist(exc.name, backend=self) from exc
django.template.exceptions.TemplateDoesNotExist: forms_tests/custom_widget.html

======================================================================
ERROR: test_installed_apps_template_found (forms_tests.tests.test_renderers.TemplatesSettingTests)
Can find a custom template in INSTALLED_APPS.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/tests/test_renderers.py", line 22, in test_installed_apps_template_found
    tpl = renderer.get_template('forms_tests/custom_widget.html')
  File "/testbed/django/forms/renderers.py", line 70, in get_template
    return get_template(template_name)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: forms_tests/custom_widget.html

======================================================================
ERROR: test_migrate_gis (gis_tests.gis_migrations.test_commands.MigrateTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 262, in _setup_and_call
    self._pre_setup()
  File "/testbed/django/test/testcases.py", line 915, in _pre_setup
    apps.set_available_apps(self.available_apps)
  File "/testbed/django/apps/registry.py", line 315, in set_available_apps
    % ", ".join(available - installed)
ValueError: Available apps isn't a subset of installed apps, extra apps: gis_tests.gis_migrations

======================================================================
ERROR: test_handler_renders_template_response (handlers.tests_custom_error_handlers.CustomErrorHandlerTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/handlers/tests_custom_error_handlers.py", line 24, in permission_denied_view
    raise PermissionDenied
django.core.exceptions.PermissionDenied

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/tests/handlers/tests_custom_error_handlers.py", line 42, in test_handler_renders_template_response
    response = self.client.get('/')
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/tests/handlers/tests_custom_error_handlers.py", line 12, in __call__
    response = self.get_response(request)
  File "/testbed/django/core/handlers/exception.py", line 36, in inner
    response = response_for_exception(request, exc)
  File "/testbed/django/core/handlers/exception.py", line 100, in response_for_exception
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 65, in resolve_template
    return get_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: test_handler.html

======================================================================
ERROR: test_check_field (invalid_models_tests.test_backend_specific.BackendSpecificChecksTests)
Test if backend specific checks are performed.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/mock.py", line 1183, in patched
    return func(*args, **keywargs)
  File "/testbed/tests/invalid_models_tests/test_backend_specific.py", line 23, in test_check_field
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_backend_specific.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_none_column (invalid_models_tests.test_custom_fields.CustomFieldTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_custom_fields.py", line 15, in test_none_column
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_custom_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_CommaSeparatedIntegerField_deprecated (invalid_models_tests.test_deprecated_fields.DeprecatedFieldsTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_deprecated_fields.py", line 26, in test_CommaSeparatedIntegerField_deprecated
    class CommaSeparatedIntegerModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_deprecated_fields.CommaSeparatedIntegerModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_IPAddressField_deprecated (invalid_models_tests.test_deprecated_fields.DeprecatedFieldsTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_deprecated_fields.py", line 10, in test_IPAddressField_deprecated
    class IPAddressModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_deprecated_fields.IPAddressModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_db_column_clash (invalid_models_tests.test_models.FieldNamesTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 497, in test_db_column_clash
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_ending_with_underscore (invalid_models_tests.test_models.FieldNamesTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 336, in test_ending_with_underscore
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_including_separator (invalid_models_tests.test_models.FieldNamesTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 473, in test_including_separator
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_pk (invalid_models_tests.test_models.FieldNamesTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 485, in test_pk
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_list_containing_non_iterable (invalid_models_tests.test_models.IndexTogetherTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 58, in test_list_containing_non_iterable
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_non_iterable (invalid_models_tests.test_models.IndexTogetherTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 32, in test_non_iterable
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_non_list (invalid_models_tests.test_models.IndexTogetherTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 45, in test_non_list
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_pointing_to_fk (invalid_models_tests.test_models.IndexTogetherTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 120, in test_pointing_to_fk
    class Foo(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Foo doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_pointing_to_m2m_field (invalid_models_tests.test_models.IndexTogetherTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 104, in test_pointing_to_m2m_field
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_pointing_to_missing_field (invalid_models_tests.test_models.IndexTogetherTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 71, in test_pointing_to_missing_field
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_pointing_to_non_local_field (invalid_models_tests.test_models.IndexTogetherTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 84, in test_pointing_to_non_local_field
    class Foo(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Foo doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_max_name_length (invalid_models_tests.test_models.IndexesTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 318, in test_max_name_length
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_name_constraints (invalid_models_tests.test_models.IndexesTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 299, in test_name_constraints
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_pointing_to_fk (invalid_models_tests.test_models.IndexesTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 286, in test_pointing_to_fk
    class Foo(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Foo doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_pointing_to_m2m_field (invalid_models_tests.test_models.IndexesTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 250, in test_pointing_to_m2m_field
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_pointing_to_missing_field (invalid_models_tests.test_models.IndexesTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 237, in test_pointing_to_missing_field
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_pointing_to_non_local_field (invalid_models_tests.test_models.IndexesTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 266, in test_pointing_to_non_local_field
    class Foo(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Foo doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_just_order_with_respect_to_no_errors (invalid_models_tests.test_models.OtherModelTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 663, in test_just_order_with_respect_to_no_errors
    class Question(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Question doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_just_ordering_no_errors (invalid_models_tests.test_models.OtherModelTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 654, in test_just_ordering_no_errors
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_m2m_autogenerated_table_name_clash (invalid_models_tests.test_models.OtherModelTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 1073, in test_m2m_autogenerated_table_name_clash
    class Foo(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Foo doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_m2m_field_table_name_clash (invalid_models_tests.test_models.OtherModelTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 1048, in test_m2m_field_table_name_clash
    class Foo(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Foo doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_m2m_table_name_clash (invalid_models_tests.test_models.OtherModelTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 1028, in test_m2m_table_name_clash
    class Foo(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Foo doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_m2m_to_concrete_and_proxy_allowed (invalid_models_tests.test_models.OtherModelTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 1124, in test_m2m_to_concrete_and_proxy_allowed
    class A(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.A doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_m2m_unmanaged_shadow_models_not_checked (invalid_models_tests.test_models.OtherModelTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 1094, in test_m2m_unmanaged_shadow_models_not_checked
    class A1(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.A1 doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_name_beginning_with_underscore (invalid_models_tests.test_models.OtherModelTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 871, in test_name_beginning_with_underscore
    class _Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models._Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_name_contains_double_underscores (invalid_models_tests.test_models.OtherModelTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 897, in test_name_contains_double_underscores
    class Test__Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Test__Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_name_ending_with_underscore (invalid_models_tests.test_models.OtherModelTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 884, in test_name_ending_with_underscore
    class Model_(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Model_ doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_non_valid (invalid_models_tests.test_models.OtherModelTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 695, in test_non_valid
    class RelationModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.RelationModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_onetoone_with_explicit_parent_link_parent_model (invalid_models_tests.test_models.OtherModelTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 1018, in test_onetoone_with_explicit_parent_link_parent_model
    class Place(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Place doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_onetoone_with_parent_model (invalid_models_tests.test_models.OtherModelTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 1009, in test_onetoone_with_parent_model
    class Place(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Place doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_ordering_allows_registered_lookups (invalid_models_tests.test_models.OtherModelTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 837, in test_ordering_allows_registered_lookups
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_ordering_non_iterable (invalid_models_tests.test_models.OtherModelTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 640, in test_ordering_non_iterable
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_ordering_pointing_multiple_times_to_model_fields (invalid_models_tests.test_models.OtherModelTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 817, in test_ordering_pointing_multiple_times_to_model_fields
    class Parent(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Parent doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_ordering_pointing_to_foreignkey_field (invalid_models_tests.test_models.OtherModelTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 859, in test_ordering_pointing_to_foreignkey_field
    class Parent(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Parent doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_ordering_pointing_to_missing_field (invalid_models_tests.test_models.OtherModelTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 714, in test_ordering_pointing_to_missing_field
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_ordering_pointing_to_missing_foreignkey_field (invalid_models_tests.test_models.OtherModelTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 728, in test_ordering_pointing_to_missing_foreignkey_field
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_ordering_pointing_to_missing_related_field (invalid_models_tests.test_models.OtherModelTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 744, in test_ordering_pointing_to_missing_related_field
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_ordering_pointing_to_missing_related_model_field (invalid_models_tests.test_models.OtherModelTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 760, in test_ordering_pointing_to_missing_related_model_field
    class Parent(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Parent doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_ordering_pointing_to_non_related_field (invalid_models_tests.test_models.OtherModelTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 779, in test_ordering_pointing_to_non_related_field
    class Child(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Child doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_ordering_pointing_to_related_model_pk (invalid_models_tests.test_models.OtherModelTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 847, in test_ordering_pointing_to_related_model_pk
    class Parent(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Parent doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_ordering_pointing_to_two_related_model_field (invalid_models_tests.test_models.OtherModelTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 795, in test_ordering_pointing_to_two_related_model_field
    class Parent2(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Parent2 doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_ordering_with_order_with_respect_to (invalid_models_tests.test_models.OtherModelTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 675, in test_ordering_with_order_with_respect_to
    class Question(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Question doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_property_and_related_field_accessor_clash (invalid_models_tests.test_models.OtherModelTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 910, in test_property_and_related_field_accessor_clash
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_single_primary_key (invalid_models_tests.test_models.OtherModelTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 926, in test_single_primary_key
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_swappable_missing_app (invalid_models_tests.test_models.OtherModelTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/invalid_models_tests/test_models.py", line 953, in test_swappable_missing_app
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_swappable_missing_app_name (invalid_models_tests.test_models.OtherModelTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/invalid_models_tests/test_models.py", line 940, in test_swappable_missing_app_name
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_two_m2m_through_same_model_with_different_through_fields (invalid_models_tests.test_models.OtherModelTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 987, in test_two_m2m_through_same_model_with_different_through_fields
    class Country(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Country doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_two_m2m_through_same_relationship (invalid_models_tests.test_models.OtherModelTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 966, in test_two_m2m_through_same_relationship
    class Person(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Person doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_unique_primary_key (invalid_models_tests.test_models.OtherModelTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 627, in test_unique_primary_key
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_field_name_clash_with_child_accessor (invalid_models_tests.test_models.ShadowingFieldsTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 516, in test_field_name_clash_with_child_accessor
    class Parent(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Parent doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_id_clash (invalid_models_tests.test_models.ShadowingFieldsTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 604, in test_id_clash
    class Target(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Target doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_inheritance_clash (invalid_models_tests.test_models.ShadowingFieldsTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 561, in test_inheritance_clash
    class Parent(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Parent doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_multigeneration_inheritance (invalid_models_tests.test_models.ShadowingFieldsTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 582, in test_multigeneration_inheritance
    class GrandParent(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.GrandParent doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_multiinheritance_clash (invalid_models_tests.test_models.ShadowingFieldsTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 532, in test_multiinheritance_clash
    class Mother(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Mother doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_list_containing_non_iterable (invalid_models_tests.test_models.UniqueTogetherTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 151, in test_list_containing_non_iterable
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_non_iterable (invalid_models_tests.test_models.UniqueTogetherTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 138, in test_non_iterable
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_non_list (invalid_models_tests.test_models.UniqueTogetherTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 167, in test_non_list
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_pointing_to_fk (invalid_models_tests.test_models.UniqueTogetherTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 220, in test_pointing_to_fk
    class Foo(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Foo doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_pointing_to_m2m (invalid_models_tests.test_models.UniqueTogetherTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 204, in test_pointing_to_m2m
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_pointing_to_missing_field (invalid_models_tests.test_models.UniqueTogetherTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 191, in test_pointing_to_missing_field
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_valid_model (invalid_models_tests.test_models.UniqueTogetherTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_models.py", line 180, in test_valid_model
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_models.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_max_length_warning (invalid_models_tests.test_ordinary_fields.AutoFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 43, in test_max_length_warning
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_primary_key (invalid_models_tests.test_ordinary_fields.AutoFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 25, in test_primary_key
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_valid_case (invalid_models_tests.test_ordinary_fields.AutoFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 17, in test_valid_case
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_str_default_value (invalid_models_tests.test_ordinary_fields.BinaryFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 71, in test_str_default_value
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_valid_default_value (invalid_models_tests.test_ordinary_fields.BinaryFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 62, in test_valid_default_value
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_bad_db_index_value (invalid_models_tests.test_ordinary_fields.CharFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 335, in test_bad_db_index_value
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_bad_max_length_value (invalid_models_tests.test_ordinary_fields.CharFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 129, in test_bad_max_length_value
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_bad_validators (invalid_models_tests.test_ordinary_fields.CharFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 348, in test_bad_validators
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_choices_containing_lazy (invalid_models_tests.test_ordinary_fields.CharFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 236, in test_choices_containing_lazy
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_choices_containing_non_pairs (invalid_models_tests.test_ordinary_fields.CharFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 217, in test_choices_containing_non_pairs
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_choices_in_max_length (invalid_models_tests.test_ordinary_fields.CharFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 309, in test_choices_in_max_length
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_choices_named_group (invalid_models_tests.test_ordinary_fields.CharFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 248, in test_choices_named_group
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_choices_named_group_bad_structure (invalid_models_tests.test_ordinary_fields.CharFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 277, in test_choices_named_group_bad_structure
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_choices_named_group_lazy (invalid_models_tests.test_ordinary_fields.CharFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 298, in test_choices_named_group_lazy
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_choices_named_group_non_pairs (invalid_models_tests.test_ordinary_fields.CharFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 260, in test_choices_named_group_non_pairs
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_iterable_of_iterable_choices (invalid_models_tests.test_ordinary_fields.CharFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 211, in test_iterable_of_iterable_choices
    class ThingWithIterableChoices(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.ThingWithIterableChoices doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_lazy_choices (invalid_models_tests.test_ordinary_fields.CharFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 242, in test_lazy_choices
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_missing_max_length (invalid_models_tests.test_ordinary_fields.CharFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 103, in test_missing_max_length
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_negative_max_length (invalid_models_tests.test_ordinary_fields.CharFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 116, in test_negative_max_length
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_non_iterable_choices (invalid_models_tests.test_ordinary_fields.CharFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 168, in test_non_iterable_choices
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_non_iterable_choices_two_letters (invalid_models_tests.test_ordinary_fields.CharFieldTests)
Two letters isn't a valid choice pair.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 182, in test_non_iterable_choices_two_letters
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_str_max_length_type (invalid_models_tests.test_ordinary_fields.CharFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 155, in test_str_max_length_type
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_str_max_length_value (invalid_models_tests.test_ordinary_fields.CharFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 142, in test_str_max_length_value
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_valid_field (invalid_models_tests.test_ordinary_fields.CharFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 89, in test_valid_field
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_auto_now_and_auto_now_add_raise_error (invalid_models_tests.test_ordinary_fields.DateFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 388, in test_auto_now_and_auto_now_add_raise_error
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_fix_default_value (invalid_models_tests.test_ordinary_fields.DateFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 409, in test_fix_default_value
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_fix_default_value_tz (invalid_models_tests.test_ordinary_fields.DateFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 443, in test_fix_default_value_tz
    self.test_fix_default_value()
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 409, in test_fix_default_value
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_fix_default_value (invalid_models_tests.test_ordinary_fields.DateTimeFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 451, in test_fix_default_value
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_fix_default_value_tz (invalid_models_tests.test_ordinary_fields.DateTimeFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 485, in test_fix_default_value_tz
    self.test_fix_default_value()
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 451, in test_fix_default_value
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_bad_values_of_max_digits_and_decimal_places (invalid_models_tests.test_ordinary_fields.DecimalFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 528, in test_bad_values_of_max_digits_and_decimal_places
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_decimal_places_greater_than_max_digits (invalid_models_tests.test_ordinary_fields.DecimalFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 546, in test_decimal_places_greater_than_max_digits
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_negative_max_digits_and_decimal_places (invalid_models_tests.test_ordinary_fields.DecimalFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 510, in test_negative_max_digits_and_decimal_places
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_required_attributes (invalid_models_tests.test_ordinary_fields.DecimalFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 492, in test_required_attributes
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_valid_field (invalid_models_tests.test_ordinary_fields.DecimalFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 559, in test_valid_field
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_primary_key (invalid_models_tests.test_ordinary_fields.FileFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 583, in test_primary_key
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_upload_to_callable_not_checked (invalid_models_tests.test_ordinary_fields.FileFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 614, in test_upload_to_callable_not_checked
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_upload_to_starts_with_slash (invalid_models_tests.test_ordinary_fields.FileFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 596, in test_upload_to_starts_with_slash
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_valid_case (invalid_models_tests.test_ordinary_fields.FileFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 576, in test_valid_case
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_valid_default_case (invalid_models_tests.test_ordinary_fields.FileFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 570, in test_valid_default_case
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_forbidden_files_and_folders (invalid_models_tests.test_ordinary_fields.FilePathFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 625, in test_forbidden_files_and_folders
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_non_nullable_blank (invalid_models_tests.test_ordinary_fields.GenericIPAddressFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 642, in test_non_nullable_blank
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_pillow_installed (invalid_models_tests.test_ordinary_fields.ImageFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 667, in test_pillow_installed
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_max_length_warning (invalid_models_tests.test_ordinary_fields.IntegerFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 688, in test_max_length_warning
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_fix_default_value (invalid_models_tests.test_ordinary_fields.TimeFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 715, in test_fix_default_value
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_fix_default_value_tz (invalid_models_tests.test_ordinary_fields.TimeFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 749, in test_fix_default_value_tz
    self.test_fix_default_value()
  File "/testbed/tests/invalid_models_tests/test_ordinary_fields.py", line 715, in test_fix_default_value
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_ordinary_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_clash_between_accessors (invalid_models_tests.test_relative_fields.AccessorClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 734, in test_clash_between_accessors
    class Target(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Target doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_fk_to_fk (invalid_models_tests.test_relative_fields.AccessorClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 690, in test_fk_to_fk
    relative=models.ForeignKey('Target', models.CASCADE))
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 713, in _test_accessor_clash
    class Another(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Another doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_fk_to_integer (invalid_models_tests.test_relative_fields.AccessorClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 685, in test_fk_to_integer
    relative=models.ForeignKey('Target', models.CASCADE))
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 713, in _test_accessor_clash
    class Another(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Another doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_fk_to_m2m (invalid_models_tests.test_relative_fields.AccessorClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 695, in test_fk_to_m2m
    relative=models.ForeignKey('Target', models.CASCADE))
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 713, in _test_accessor_clash
    class Another(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Another doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_m2m_to_fk (invalid_models_tests.test_relative_fields.AccessorClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 705, in test_m2m_to_fk
    relative=models.ManyToManyField('Target'))
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 713, in _test_accessor_clash
    class Another(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Another doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_m2m_to_integer (invalid_models_tests.test_relative_fields.AccessorClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 700, in test_m2m_to_integer
    relative=models.ManyToManyField('Target'))
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 713, in _test_accessor_clash
    class Another(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Another doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_m2m_to_m2m (invalid_models_tests.test_relative_fields.AccessorClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 710, in test_m2m_to_m2m
    relative=models.ManyToManyField('Target'))
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 713, in _test_accessor_clash
    class Another(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Another doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_m2m_to_m2m_with_inheritance (invalid_models_tests.test_relative_fields.AccessorClashTests)
Ref #22047.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 765, in test_m2m_to_m2m_with_inheritance
    class Target(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Target doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_no_clash_for_hidden_related_name (invalid_models_tests.test_relative_fields.AccessorClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 790, in test_no_clash_for_hidden_related_name
    class Stub(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Stub doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_clash_parent_link (invalid_models_tests.test_relative_fields.ComplexClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 1294, in test_clash_parent_link
    class Parent(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Parent doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_complex_clash (invalid_models_tests.test_relative_fields.ComplexClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 1187, in test_complex_clash
    class Target(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Target doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_fk_to_fk (invalid_models_tests.test_relative_fields.ExplicitRelatedNameClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 872, in test_fk_to_fk
    relative=models.ForeignKey('Target', models.CASCADE, related_name='clash'))
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 895, in _test_explicit_related_name_clash
    class Another(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Another doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_fk_to_integer (invalid_models_tests.test_relative_fields.ExplicitRelatedNameClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 867, in test_fk_to_integer
    relative=models.ForeignKey('Target', models.CASCADE, related_name='clash'))
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 895, in _test_explicit_related_name_clash
    class Another(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Another doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_fk_to_m2m (invalid_models_tests.test_relative_fields.ExplicitRelatedNameClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 877, in test_fk_to_m2m
    relative=models.ForeignKey('Target', models.CASCADE, related_name='clash'))
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 895, in _test_explicit_related_name_clash
    class Another(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Another doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_m2m_to_fk (invalid_models_tests.test_relative_fields.ExplicitRelatedNameClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 887, in test_m2m_to_fk
    relative=models.ManyToManyField('Target', related_name='clash'))
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 895, in _test_explicit_related_name_clash
    class Another(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Another doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_m2m_to_integer (invalid_models_tests.test_relative_fields.ExplicitRelatedNameClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 882, in test_m2m_to_integer
    relative=models.ManyToManyField('Target', related_name='clash'))
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 895, in _test_explicit_related_name_clash
    class Another(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Another doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_m2m_to_m2m (invalid_models_tests.test_relative_fields.ExplicitRelatedNameClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 892, in test_m2m_to_m2m
    relative=models.ManyToManyField('Target', related_name='clash'))
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 895, in _test_explicit_related_name_clash
    class Another(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Another doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_fk_to_fk (invalid_models_tests.test_relative_fields.ExplicitRelatedQueryNameClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 950, in test_fk_to_fk
    related_query_name='clash',
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 1001, in _test_explicit_related_query_name_clash
    class Another(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Another doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_fk_to_integer (invalid_models_tests.test_relative_fields.ExplicitRelatedQueryNameClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 936, in test_fk_to_integer
    related_query_name='clash',
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 1001, in _test_explicit_related_query_name_clash
    class Another(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Another doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_fk_to_m2m (invalid_models_tests.test_relative_fields.ExplicitRelatedQueryNameClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 964, in test_fk_to_m2m
    related_query_name='clash',
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 1001, in _test_explicit_related_query_name_clash
    class Another(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Another doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_hidden_fk_to_fk (invalid_models_tests.test_relative_fields.ExplicitRelatedQueryNameClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 955, in test_hidden_fk_to_fk
    self.test_fk_to_fk(related_name='+')
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 950, in test_fk_to_fk
    related_query_name='clash',
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 1001, in _test_explicit_related_query_name_clash
    class Another(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Another doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_hidden_fk_to_integer (invalid_models_tests.test_relative_fields.ExplicitRelatedQueryNameClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 941, in test_hidden_fk_to_integer
    self.test_fk_to_integer(related_name='+')
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 936, in test_fk_to_integer
    related_query_name='clash',
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 1001, in _test_explicit_related_query_name_clash
    class Another(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Another doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_hidden_fk_to_m2m (invalid_models_tests.test_relative_fields.ExplicitRelatedQueryNameClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 969, in test_hidden_fk_to_m2m
    self.test_fk_to_m2m(related_name='+')
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 964, in test_fk_to_m2m
    related_query_name='clash',
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 1001, in _test_explicit_related_query_name_clash
    class Another(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Another doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_hidden_m2m_to_fk (invalid_models_tests.test_relative_fields.ExplicitRelatedQueryNameClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 985, in test_hidden_m2m_to_fk
    self.test_m2m_to_fk(related_name='+')
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 982, in test_m2m_to_fk
    relative=models.ManyToManyField('Target', related_name=related_name, related_query_name='clash'))
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 1001, in _test_explicit_related_query_name_clash
    class Another(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Another doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_hidden_m2m_to_integer (invalid_models_tests.test_relative_fields.ExplicitRelatedQueryNameClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 977, in test_hidden_m2m_to_integer
    self.test_m2m_to_integer(related_name='+')
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 974, in test_m2m_to_integer
    relative=models.ManyToManyField('Target', related_name=related_name, related_query_name='clash'))
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 1001, in _test_explicit_related_query_name_clash
    class Another(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Another doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_hidden_m2m_to_m2m (invalid_models_tests.test_relative_fields.ExplicitRelatedQueryNameClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 998, in test_hidden_m2m_to_m2m
    self.test_m2m_to_m2m(related_name='+')
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 993, in test_m2m_to_m2m
    related_query_name='clash',
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 1001, in _test_explicit_related_query_name_clash
    class Another(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Another doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_m2m_to_fk (invalid_models_tests.test_relative_fields.ExplicitRelatedQueryNameClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 982, in test_m2m_to_fk
    relative=models.ManyToManyField('Target', related_name=related_name, related_query_name='clash'))
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 1001, in _test_explicit_related_query_name_clash
    class Another(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Another doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_m2m_to_integer (invalid_models_tests.test_relative_fields.ExplicitRelatedQueryNameClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 974, in test_m2m_to_integer
    relative=models.ManyToManyField('Target', related_name=related_name, related_query_name='clash'))
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 1001, in _test_explicit_related_query_name_clash
    class Another(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Another doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_m2m_to_m2m (invalid_models_tests.test_relative_fields.ExplicitRelatedQueryNameClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 993, in test_m2m_to_m2m
    related_query_name='clash',
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 1001, in _test_explicit_related_query_name_clash
    class Another(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Another doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_explicit_field_names (invalid_models_tests.test_relative_fields.M2mThroughFieldsTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 1407, in test_explicit_field_names
    class Fan(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Fan doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_intersection_foreign_object (invalid_models_tests.test_relative_fields.M2mThroughFieldsTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 1465, in test_intersection_foreign_object
    class Parent(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Parent doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_invalid_field (invalid_models_tests.test_relative_fields.M2mThroughFieldsTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 1371, in test_invalid_field
    class Fan(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Fan doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_invalid_order (invalid_models_tests.test_relative_fields.M2mThroughFieldsTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 1339, in test_invalid_order
    class Fan(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Fan doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_m2m_field_argument_validation (invalid_models_tests.test_relative_fields.M2mThroughFieldsTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 1328, in test_m2m_field_argument_validation
    class Fan(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Fan doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_superset_foreign_object (invalid_models_tests.test_relative_fields.M2mThroughFieldsTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 1431, in test_superset_foreign_object
    class Parent(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Parent doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_ambiguous_relationship_model (invalid_models_tests.test_relative_fields.RelativeFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 133, in test_ambiguous_relationship_model
    class Person(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Person doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_foreign_key_to_abstract_model (invalid_models_tests.test_relative_fields.RelativeFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 290, in test_foreign_key_to_abstract_model
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_foreign_key_to_isolate_apps_model (invalid_models_tests.test_relative_fields.RelativeFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 46, in test_foreign_key_to_isolate_apps_model
    class OtherModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.OtherModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_foreign_key_to_missing_model (invalid_models_tests.test_relative_fields.RelativeFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 27, in test_foreign_key_to_missing_model
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_foreign_key_to_non_unique_field (invalid_models_tests.test_relative_fields.RelativeFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 346, in test_foreign_key_to_non_unique_field
    class Target(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Target doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_foreign_key_to_non_unique_field_under_explicit_model (invalid_models_tests.test_relative_fields.RelativeFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 362, in test_foreign_key_to_non_unique_field_under_explicit_model
    class Target(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Target doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_foreign_object_to_non_unique_fields (invalid_models_tests.test_relative_fields.RelativeFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 378, in test_foreign_object_to_non_unique_fields
    class Person(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Person doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_invalid_related_query_name (invalid_models_tests.test_relative_fields.RelativeFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 653, in test_invalid_related_query_name
    class Target(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Target doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_m2m_to_abstract_model (invalid_models_tests.test_relative_fields.RelativeFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 312, in test_m2m_to_abstract_model
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_many_to_many_through_isolate_apps_model (invalid_models_tests.test_relative_fields.RelativeFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 249, in test_many_to_many_through_isolate_apps_model
    class GroupMember(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.GroupMember doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_many_to_many_to_isolate_apps_model (invalid_models_tests.test_relative_fields.RelativeFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 75, in test_many_to_many_to_isolate_apps_model
    class OtherModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.OtherModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_many_to_many_to_missing_model (invalid_models_tests.test_relative_fields.RelativeFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 56, in test_many_to_many_to_missing_model
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_many_to_many_with_limit_choices_auto_created_no_warning (invalid_models_tests.test_relative_fields.RelativeFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 85, in test_many_to_many_with_limit_choices_auto_created_no_warning
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_many_to_many_with_useless_options (invalid_models_tests.test_relative_fields.RelativeFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 94, in test_many_to_many_with_useless_options
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_missing_relationship_model (invalid_models_tests.test_relative_fields.RelativeFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 211, in test_missing_relationship_model
    class Person(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Person doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_missing_relationship_model_on_model_check (invalid_models_tests.test_relative_fields.RelativeFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 228, in test_missing_relationship_model_on_model_check
    class Person(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Person doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_not_swapped_model (invalid_models_tests.test_relative_fields.RelativeFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 458, in test_not_swapped_model
    class SwappableModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.SwappableModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_nullable_primary_key (invalid_models_tests.test_relative_fields.RelativeFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 442, in test_nullable_primary_key
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_on_delete_set_default_without_default_value (invalid_models_tests.test_relative_fields.RelativeFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 425, in test_on_delete_set_default_without_default_value
    class Person(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Person doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_on_delete_set_null_on_non_nullable_field (invalid_models_tests.test_relative_fields.RelativeFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 408, in test_on_delete_set_null_on_non_nullable_field
    class Person(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Person doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_referencing_to_swapped_model (invalid_models_tests.test_relative_fields.RelativeFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 495, in test_referencing_to_swapped_model
    class Replacement(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Replacement doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_related_field_has_invalid_related_name (invalid_models_tests.test_relative_fields.RelativeFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 556, in test_related_field_has_invalid_related_name
    class Parent(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Parent doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_related_field_has_valid_related_name (invalid_models_tests.test_relative_fields.RelativeFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 593, in test_related_field_has_valid_related_name
    class Parent(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Parent doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_relationship_model_missing_foreign_key (invalid_models_tests.test_relative_fields.RelativeFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 189, in test_relationship_model_missing_foreign_key
    class Person(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Person doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_relationship_model_with_foreign_key_to_wrong_model (invalid_models_tests.test_relative_fields.RelativeFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 163, in test_relationship_model_with_foreign_key_to_wrong_model
    class WrongModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.WrongModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_to_fields_exist (invalid_models_tests.test_relative_fields.RelativeFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 604, in test_to_fields_exist
    class Parent(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Parent doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_to_fields_not_checked_if_related_model_doesnt_exist (invalid_models_tests.test_relative_fields.RelativeFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 632, in test_to_fields_not_checked_if_related_model_doesnt_exist
    class Child(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Child doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_too_many_foreign_keys_in_self_referential_model (invalid_models_tests.test_relative_fields.RelativeFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 263, in test_too_many_foreign_keys_in_self_referential_model
    class Person(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Person doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_unique_m2m (invalid_models_tests.test_relative_fields.RelativeFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 330, in test_unique_m2m
    class Person(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Person doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_valid_foreign_key_without_accessor (invalid_models_tests.test_relative_fields.RelativeFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 13, in test_valid_foreign_key_without_accessor
    class Target(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Target doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_fk_to_fk (invalid_models_tests.test_relative_fields.ReverseQueryNameClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 816, in test_fk_to_fk
    relative=models.ForeignKey('Target', models.CASCADE))
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 839, in _test_reverse_query_name_clash
    class Another(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Another doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_fk_to_integer (invalid_models_tests.test_relative_fields.ReverseQueryNameClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 811, in test_fk_to_integer
    relative=models.ForeignKey('Target', models.CASCADE))
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 839, in _test_reverse_query_name_clash
    class Another(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Another doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_fk_to_m2m (invalid_models_tests.test_relative_fields.ReverseQueryNameClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 821, in test_fk_to_m2m
    relative=models.ForeignKey('Target', models.CASCADE))
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 839, in _test_reverse_query_name_clash
    class Another(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Another doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_m2m_to_fk (invalid_models_tests.test_relative_fields.ReverseQueryNameClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 831, in test_m2m_to_fk
    relative=models.ManyToManyField('Target'))
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 839, in _test_reverse_query_name_clash
    class Another(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Another doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_m2m_to_integer (invalid_models_tests.test_relative_fields.ReverseQueryNameClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 826, in test_m2m_to_integer
    relative=models.ManyToManyField('Target'))
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 839, in _test_reverse_query_name_clash
    class Another(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Another doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_m2m_to_m2m (invalid_models_tests.test_relative_fields.ReverseQueryNameClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 836, in test_m2m_to_m2m
    relative=models.ManyToManyField('Target'))
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 839, in _test_reverse_query_name_clash
    class Another(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Another doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_accessor_clash (invalid_models_tests.test_relative_fields.SelfReferentialFKClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 1122, in test_accessor_clash
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_clash_under_explicit_related_name (invalid_models_tests.test_relative_fields.SelfReferentialFKClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 1155, in test_clash_under_explicit_related_name
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_reverse_query_name_clash (invalid_models_tests.test_relative_fields.SelfReferentialFKClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 1139, in test_reverse_query_name_clash
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_accessor_clash (invalid_models_tests.test_relative_fields.SelfReferentialM2MClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 1053, in test_accessor_clash
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_clash_between_accessors (invalid_models_tests.test_relative_fields.SelfReferentialM2MClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 1027, in test_clash_between_accessors
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_clash_under_explicit_related_name (invalid_models_tests.test_relative_fields.SelfReferentialM2MClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 1085, in test_clash_under_explicit_related_name
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_reverse_query_name_clash (invalid_models_tests.test_relative_fields.SelfReferentialM2MClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 1069, in test_reverse_query_name_clash
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_valid_model (invalid_models_tests.test_relative_fields.SelfReferentialM2MClashTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/invalid_models_tests/test_relative_fields.py", line 1111, in test_valid_model
    class Model(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class invalid_models_tests.test_relative_fields.Model doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: tearDownClass (logging_tests.tests.DefaultLoggingTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/logging_tests/tests.py", line 81, in tearDownClass
    logging.config.dictConfig(cls._logging)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/logging/config.py", line 802, in dictConfig
    dictConfigClass(config).configure()
  File "/opt/miniconda3/envs/testbed/lib/python3.6/logging/config.py", line 498, in configure
    raise ValueError("dictionary doesn't specify a version")
ValueError: dictionary doesn't specify a version

======================================================================
ERROR: tearDownClass (logging_tests.tests.HandlerLoggingTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/logging_tests/tests.py", line 81, in tearDownClass
    logging.config.dictConfig(cls._logging)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/logging/config.py", line 802, in dictConfig
    dictConfigClass(config).configure()
  File "/opt/miniconda3/envs/testbed/lib/python3.6/logging/config.py", line 498, in configure
    raise ValueError("dictionary doesn't specify a version")
ValueError: dictionary doesn't specify a version

======================================================================
ERROR: tearDownClass (logging_tests.tests.I18nLoggingTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/logging_tests/tests.py", line 81, in tearDownClass
    logging.config.dictConfig(cls._logging)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/logging/config.py", line 802, in dictConfig
    dictConfigClass(config).configure()
  File "/opt/miniconda3/envs/testbed/lib/python3.6/logging/config.py", line 498, in configure
    raise ValueError("dictionary doesn't specify a version")
ValueError: dictionary doesn't specify a version

======================================================================
ERROR: setUpClass (migrations.test_deprecated_fields.Tests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 177, in setUpClass
    cls._add_databases_failures()
  File "/testbed/django/test/testcases.py", line 198, in _add_databases_failures
    cls.databases = cls._validate_databases()
  File "/testbed/django/test/testcases.py", line 193, in _validate_databases
    raise ImproperlyConfigured(message)
django.core.exceptions.ImproperlyConfigured: migrations.test_deprecated_fields.Tests.databases refers to 'other' which is not defined in settings.DATABASES.

======================================================================
ERROR: setUpClass (migrations.test_executor.ExecutorTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 177, in setUpClass
    cls._add_databases_failures()
  File "/testbed/django/test/testcases.py", line 198, in _add_databases_failures
    cls.databases = cls._validate_databases()
  File "/testbed/django/test/testcases.py", line 193, in _validate_databases
    raise ImproperlyConfigured(message)
django.core.exceptions.ImproperlyConfigured: migrations.test_executor.ExecutorTests.databases refers to 'other' which is not defined in settings.DATABASES.

======================================================================
ERROR: setUpClass (migrations.test_loader.PycLoaderTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 177, in setUpClass
    cls._add_databases_failures()
  File "/testbed/django/test/testcases.py", line 198, in _add_databases_failures
    cls.databases = cls._validate_databases()
  File "/testbed/django/test/testcases.py", line 193, in _validate_databases
    raise ImproperlyConfigured(message)
django.core.exceptions.ImproperlyConfigured: migrations.test_loader.PycLoaderTests.databases refers to 'other' which is not defined in settings.DATABASES.

======================================================================
ERROR: setUpClass (migrations.test_multidb.MultiDBOperationTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/migrations/test_base.py", line 142, in setUpClass
    super().setUpClass()
  File "/testbed/django/test/testcases.py", line 177, in setUpClass
    cls._add_databases_failures()
  File "/testbed/django/test/testcases.py", line 198, in _add_databases_failures
    cls.databases = cls._validate_databases()
  File "/testbed/django/test/testcases.py", line 193, in _validate_databases
    raise ImproperlyConfigured(message)
django.core.exceptions.ImproperlyConfigured: migrations.test_multidb.MultiDBOperationTests.databases refers to 'other' which is not defined in settings.DATABASES.

======================================================================
ERROR: test_abstract_model_with_regular_python_mixin_mro (model_inheritance.test_abstract_inheritance.AbstractInheritanceTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/model_inheritance/models.py", line 33, in <module>
    class Worker(CommonInfo):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_inheritance.models.Worker doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_cannot_override_indirect_abstract_field (model_inheritance.test_abstract_inheritance.AbstractInheritanceTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/model_inheritance/models.py", line 33, in <module>
    class Worker(CommonInfo):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_inheritance.models.Worker doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_multi_inheritance_field_clashes (model_inheritance.test_abstract_inheritance.AbstractInheritanceTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/model_inheritance/models.py", line 33, in <module>
    class Worker(CommonInfo):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_inheritance.models.Worker doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_multiple_inheritance_cannot_shadow_concrete_inherited_field (model_inheritance.test_abstract_inheritance.AbstractInheritanceTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/model_inheritance/models.py", line 33, in <module>
    class Worker(CommonInfo):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_inheritance.models.Worker doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_multiple_parents_mro (model_inheritance.test_abstract_inheritance.AbstractInheritanceTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/model_inheritance/models.py", line 33, in <module>
    class Worker(CommonInfo):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_inheritance.models.Worker doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_override_field_with_attr (model_inheritance.test_abstract_inheritance.AbstractInheritanceTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/model_inheritance/models.py", line 33, in <module>
    class Worker(CommonInfo):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_inheritance.models.Worker doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_override_one2one_relation_auto_field_clashes (model_inheritance.test_abstract_inheritance.AbstractInheritanceTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/model_inheritance/models.py", line 33, in <module>
    class Worker(CommonInfo):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_inheritance.models.Worker doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_overriding_field_removed_by_concrete_model (model_inheritance.test_abstract_inheritance.AbstractInheritanceTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/model_inheritance/models.py", line 33, in <module>
    class Worker(CommonInfo):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_inheritance.models.Worker doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_reverse_foreign_key (model_inheritance.test_abstract_inheritance.AbstractInheritanceTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/model_inheritance/models.py", line 33, in <module>
    class Worker(CommonInfo):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_inheritance.models.Worker doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_shadow_related_name_when_set_to_none (model_inheritance.test_abstract_inheritance.AbstractInheritanceTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/model_inheritance/models.py", line 33, in <module>
    class Worker(CommonInfo):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_inheritance.models.Worker doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_shadowed_fkey_id (model_inheritance.test_abstract_inheritance.AbstractInheritanceTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/model_inheritance/models.py", line 33, in <module>
    class Worker(CommonInfo):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_inheritance.models.Worker doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_single_parent (model_inheritance.test_abstract_inheritance.AbstractInheritanceTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/model_inheritance/models.py", line 33, in <module>
    class Worker(CommonInfo):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_inheritance.models.Worker doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_virtual_field (model_inheritance.test_abstract_inheritance.AbstractInheritanceTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 346, in setUp
    context = self.enable()
  File "/testbed/django/test/utils.py", line 825, in enable
    apps = Apps(self.installed_apps)
  File "/testbed/django/apps/registry.py", line 59, in __init__
    self.populate(installed_apps)
  File "/testbed/django/apps/registry.py", line 114, in populate
    app_config.import_models()
  File "/testbed/django/apps/config.py", line 211, in import_models
    self.models_module = import_module(models_module_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/model_inheritance/models.py", line 33, in <module>
    class Worker(CommonInfo):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_inheritance.models.Worker doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_missing_django_version_unpickling (model_regress.test_pickle.ModelPickleTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/model_regress/test_pickle.py", line 14, in test_missing_django_version_unpickling
    class MissingDjangoVersion(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_regress.test_pickle.MissingDjangoVersion doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_unsupported_unpickle (model_regress.test_pickle.ModelPickleTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/model_regress/test_pickle.py", line 33, in test_unsupported_unpickle
    class DifferentDjangoVersion(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_regress.test_pickle.DifferentDjangoVersion doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_with_getstate (model_regress.test_pickle.ModelPickleTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/model_regress/test_pickle.py", line 51, in test_with_getstate
    class PickledModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_regress.test_pickle.PickledModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_no_models (no_models.tests.NoModelTests)
It's possible to load an app with no models.py file.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/apps/registry.py", line 155, in get_app_config
    return self.app_configs[app_label]
KeyError: 'no_models'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/tests/no_models/tests.py", line 9, in test_no_models
    app_config = apps.get_app_config('no_models')
  File "/testbed/django/apps/registry.py", line 162, in get_app_config
    raise LookupError(message)
LookupError: No installed app with label 'no_models'.

======================================================================
ERROR: test_render (shortcuts.tests.RenderTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/shortcuts/tests.py", line 9, in test_render
    response = self.client.get('/render/')
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/shortcuts/views.py", line 7, in render_view
    'bar': 'BAR',
  File "/testbed/django/shortcuts.py", line 19, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "/testbed/django/template/loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: shortcuts/render_test.html

======================================================================
ERROR: test_render_with_content_type (shortcuts.tests.RenderTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/shortcuts/tests.py", line 21, in test_render_with_content_type
    response = self.client.get('/render/content_type/')
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/shortcuts/views.py", line 25, in render_view_with_content_type
    }, content_type='application/x-rendertest')
  File "/testbed/django/shortcuts.py", line 19, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "/testbed/django/template/loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: shortcuts/render_test.html

======================================================================
ERROR: test_render_with_multiple_templates (shortcuts.tests.RenderTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/shortcuts/tests.py", line 16, in test_render_with_multiple_templates
    response = self.client.get('/render/multiple_templates/')
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/shortcuts/views.py", line 17, in render_view_with_multiple_templates
    'bar': 'BAR',
  File "/testbed/django/shortcuts.py", line 19, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "/testbed/django/template/loader.py", line 59, in render_to_string
    template = select_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: shortcuts/no_such_template.html, shortcuts/render_test.html

======================================================================
ERROR: test_render_with_status (shortcuts.tests.RenderTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/shortcuts/tests.py", line 27, in test_render_with_status
    response = self.client.get('/render/status/')
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/shortcuts/views.py", line 32, in render_view_with_status
    }, status=403)
  File "/testbed/django/shortcuts.py", line 19, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "/testbed/django/template/loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: shortcuts/render_test.html

======================================================================
ERROR: test_render_with_using (shortcuts.tests.RenderTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/shortcuts/tests.py", line 33, in test_render_with_using
    response = self.client.get('/render/using/')
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/shortcuts/views.py", line 37, in render_view_with_using
    return render(request, 'shortcuts/using.html', using=using)
  File "/testbed/django/shortcuts.py", line 19, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "/testbed/django/template/loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: shortcuts/using.html

======================================================================
ERROR: test_skips_newer_files_in_remote_storage (staticfiles_tests.test_management.TestCollectionNeverCopyStorage)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/staticfiles_tests/test_management.py", line 490, in test_skips_newer_files_in_remote_storage
    self.run_collectstatic(stdout=stdout, verbosity=2)
  File "/testbed/tests/staticfiles_tests/cases.py", line 86, in run_collectstatic
    ignore_patterns=['*.ignoreme'], **kwargs)
  File "/testbed/django/core/management/__init__.py", line 168, in call_command
    return command.execute(*args, **defaults)
  File "/testbed/django/core/management/base.py", line 369, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 187, in handle
    collected = self.collect()
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 113, in collect
    handler(path, prefixed_path, storage)
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 338, in copy_file
    if not self.delete_file(path, prefixed_path, source_storage):
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 279, in delete_file
    source_last_modified.replace(microsecond=0)
TypeError: can't compare offset-naive and offset-aware datetimes

======================================================================
ERROR: test_csrf_token (template_backends.test_django.DjangoTemplatesTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/template/backends/django.py", line 34, in get_template
    return Template(self.engine.get_template(template_name), self)
  File "/testbed/django/template/engine.py", line 143, in get_template
    template, origin = self.find_template(template_name)
  File "/testbed/django/template/engine.py", line 129, in find_template
    raise TemplateDoesNotExist(name, tried=tried)
django.template.exceptions.TemplateDoesNotExist: template_backends/csrf.html

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/testbed/tests/template_backends/test_dummy.py", line 81, in test_csrf_token
    template = self.engine.get_template('template_backends/csrf.html')
  File "/testbed/django/template/backends/django.py", line 36, in get_template
    reraise(exc, self)
  File "/testbed/django/template/backends/django.py", line 84, in reraise
    raise new from exc
django.template.exceptions.TemplateDoesNotExist: template_backends/csrf.html

======================================================================
ERROR: test_django_html_escaping (template_backends.test_django.DjangoTemplatesTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/template/backends/django.py", line 34, in get_template
    return Template(self.engine.get_template(template_name), self)
  File "/testbed/django/template/engine.py", line 143, in get_template
    template, origin = self.find_template(template_name)
  File "/testbed/django/template/engine.py", line 129, in find_template
    raise TemplateDoesNotExist(name, tried=tried)
django.template.exceptions.TemplateDoesNotExist: template_backends/django_escaping.html

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/testbed/tests/template_backends/test_dummy.py", line 70, in test_django_html_escaping
    template = self.engine.get_template('template_backends/django_escaping.html')
  File "/testbed/django/template/backends/django.py", line 36, in get_template
    reraise(exc, self)
  File "/testbed/django/template/backends/django.py", line 84, in reraise
    raise new from exc
django.template.exceptions.TemplateDoesNotExist: template_backends/django_escaping.html

======================================================================
ERROR: test_get_template (template_backends.test_django.DjangoTemplatesTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/template/backends/django.py", line 34, in get_template
    return Template(self.engine.get_template(template_name), self)
  File "/testbed/django/template/engine.py", line 143, in get_template
    template, origin = self.find_template(template_name)
  File "/testbed/django/template/engine.py", line 129, in find_template
    raise TemplateDoesNotExist(name, tried=tried)
django.template.exceptions.TemplateDoesNotExist: template_backends/hello.html

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/testbed/tests/template_backends/test_dummy.py", line 36, in test_get_template
    template = self.engine.get_template('template_backends/hello.html')
  File "/testbed/django/template/backends/django.py", line 36, in get_template
    reraise(exc, self)
  File "/testbed/django/template/backends/django.py", line 84, in reraise
    raise new from exc
django.template.exceptions.TemplateDoesNotExist: template_backends/hello.html

======================================================================
ERROR: test_get_template_syntax_error (template_backends.test_django.DjangoTemplatesTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/template/backends/django.py", line 34, in get_template
    return Template(self.engine.get_template(template_name), self)
  File "/testbed/django/template/engine.py", line 143, in get_template
    template, origin = self.find_template(template_name)
  File "/testbed/django/template/engine.py", line 129, in find_template
    raise TemplateDoesNotExist(name, tried=tried)
django.template.exceptions.TemplateDoesNotExist: template_backends/syntax_error.html

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/testbed/tests/template_backends/test_dummy.py", line 51, in test_get_template_syntax_error
    self.engine.get_template('template_backends/syntax_error.html')
  File "/testbed/django/template/backends/django.py", line 36, in get_template
    reraise(exc, self)
  File "/testbed/django/template/backends/django.py", line 84, in reraise
    raise new from exc
django.template.exceptions.TemplateDoesNotExist: template_backends/syntax_error.html

======================================================================
ERROR: test_html_escaping (template_backends.test_django.DjangoTemplatesTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/template/backends/django.py", line 34, in get_template
    return Template(self.engine.get_template(template_name), self)
  File "/testbed/django/template/engine.py", line 143, in get_template
    template, origin = self.find_template(template_name)
  File "/testbed/django/template/engine.py", line 129, in find_template
    raise TemplateDoesNotExist(name, tried=tried)
django.template.exceptions.TemplateDoesNotExist: template_backends/hello.html

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/testbed/tests/template_backends/test_dummy.py", line 54, in test_html_escaping
    template = self.engine.get_template('template_backends/hello.html')
  File "/testbed/django/template/backends/django.py", line 36, in get_template
    reraise(exc, self)
  File "/testbed/django/template/backends/django.py", line 84, in reraise
    raise new from exc
django.template.exceptions.TemplateDoesNotExist: template_backends/hello.html

======================================================================
ERROR: test_non_ascii_characters (template_backends.test_django.DjangoTemplatesTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/template/backends/django.py", line 34, in get_template
    return Template(self.engine.get_template(template_name), self)
  File "/testbed/django/template/engine.py", line 143, in get_template
    template, origin = self.find_template(template_name)
  File "/testbed/django/template/engine.py", line 129, in find_template
    raise TemplateDoesNotExist(name, tried=tried)
django.template.exceptions.TemplateDoesNotExist: template_backends/hello.html

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/testbed/tests/template_backends/test_dummy.py", line 94, in test_non_ascii_characters
    template = self.engine.get_template('template_backends/hello.html')
  File "/testbed/django/template/backends/django.py", line 36, in get_template
    reraise(exc, self)
  File "/testbed/django/template/backends/django.py", line 84, in reraise
    raise new from exc
django.template.exceptions.TemplateDoesNotExist: template_backends/hello.html

======================================================================
ERROR: test_csrf_token (template_backends.test_dummy.TemplateStringsTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/template_backends/test_dummy.py", line 81, in test_csrf_token
    template = self.engine.get_template('template_backends/csrf.html')
  File "/testbed/django/template/backends/dummy.py", line 39, in get_template
    raise TemplateDoesNotExist(template_name, tried=tried, backend=self)
django.template.exceptions.TemplateDoesNotExist: template_backends/csrf.html

======================================================================
ERROR: test_get_template (template_backends.test_dummy.TemplateStringsTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/template_backends/test_dummy.py", line 36, in test_get_template
    template = self.engine.get_template('template_backends/hello.html')
  File "/testbed/django/template/backends/dummy.py", line 39, in get_template
    raise TemplateDoesNotExist(template_name, tried=tried, backend=self)
django.template.exceptions.TemplateDoesNotExist: template_backends/hello.html

======================================================================
ERROR: test_html_escaping (template_backends.test_dummy.TemplateStringsTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/template_backends/test_dummy.py", line 54, in test_html_escaping
    template = self.engine.get_template('template_backends/hello.html')
  File "/testbed/django/template/backends/dummy.py", line 39, in get_template
    raise TemplateDoesNotExist(template_name, tried=tried, backend=self)
django.template.exceptions.TemplateDoesNotExist: template_backends/hello.html

======================================================================
ERROR: test_non_ascii_characters (template_backends.test_dummy.TemplateStringsTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/template_backends/test_dummy.py", line 94, in test_non_ascii_characters
    template = self.engine.get_template('template_backends/hello.html')
  File "/testbed/django/template/backends/dummy.py", line 39, in get_template
    raise TemplateDoesNotExist(template_name, tried=tried, backend=self)
django.template.exceptions.TemplateDoesNotExist: template_backends/hello.html

======================================================================
ERROR: test_csrf_token (template_backends.test_jinja2.Jinja2Tests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/template/backends/jinja2.py", line 41, in get_template
    return Template(self.env.get_template(template_name), self)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/environment.py", line 997, in get_template
    return self._load_template(name, globals)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/environment.py", line 958, in _load_template
    template = self.loader.load(self, name, self.make_globals(globals))
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/loaders.py", line 125, in load
    source, filename, uptodate = self.get_source(environment, name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/loaders.py", line 214, in get_source
    raise TemplateNotFound(template)
jinja2.exceptions.TemplateNotFound: template_backends/csrf.html

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/testbed/tests/template_backends/test_dummy.py", line 81, in test_csrf_token
    template = self.engine.get_template('template_backends/csrf.html')
  File "/testbed/django/template/backends/jinja2.py", line 43, in get_template
    raise TemplateDoesNotExist(exc.name, backend=self) from exc
django.template.exceptions.TemplateDoesNotExist: template_backends/csrf.html

======================================================================
ERROR: test_django_html_escaping (template_backends.test_jinja2.Jinja2Tests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/template/backends/jinja2.py", line 41, in get_template
    return Template(self.env.get_template(template_name), self)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/environment.py", line 997, in get_template
    return self._load_template(name, globals)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/environment.py", line 958, in _load_template
    template = self.loader.load(self, name, self.make_globals(globals))
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/loaders.py", line 125, in load
    source, filename, uptodate = self.get_source(environment, name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/loaders.py", line 214, in get_source
    raise TemplateNotFound(template)
jinja2.exceptions.TemplateNotFound: template_backends/django_escaping.html

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/testbed/tests/template_backends/test_dummy.py", line 70, in test_django_html_escaping
    template = self.engine.get_template('template_backends/django_escaping.html')
  File "/testbed/django/template/backends/jinja2.py", line 43, in get_template
    raise TemplateDoesNotExist(exc.name, backend=self) from exc
django.template.exceptions.TemplateDoesNotExist: template_backends/django_escaping.html

======================================================================
ERROR: test_exception_debug_info_max_context (template_backends.test_jinja2.Jinja2Tests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/template/backends/jinja2.py", line 41, in get_template
    return Template(self.env.get_template(template_name), self)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/environment.py", line 997, in get_template
    return self._load_template(name, globals)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/environment.py", line 958, in _load_template
    template = self.loader.load(self, name, self.make_globals(globals))
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/loaders.py", line 125, in load
    source, filename, uptodate = self.get_source(environment, name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/loaders.py", line 214, in get_source
    raise TemplateNotFound(template)
jinja2.exceptions.TemplateNotFound: template_backends/syntax_error2.html

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/testbed/tests/template_backends/test_jinja2.py", line 68, in test_exception_debug_info_max_context
    self.engine.get_template('template_backends/syntax_error2.html')
  File "/testbed/django/template/backends/jinja2.py", line 43, in get_template
    raise TemplateDoesNotExist(exc.name, backend=self) from exc
django.template.exceptions.TemplateDoesNotExist: template_backends/syntax_error2.html

======================================================================
ERROR: test_exception_debug_info_min_context (template_backends.test_jinja2.Jinja2Tests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/template/backends/jinja2.py", line 41, in get_template
    return Template(self.env.get_template(template_name), self)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/environment.py", line 997, in get_template
    return self._load_template(name, globals)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/environment.py", line 958, in _load_template
    template = self.loader.load(self, name, self.make_globals(globals))
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/loaders.py", line 125, in load
    source, filename, uptodate = self.get_source(environment, name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/loaders.py", line 214, in get_source
    raise TemplateNotFound(template)
jinja2.exceptions.TemplateNotFound: template_backends/syntax_error.html

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/testbed/tests/template_backends/test_jinja2.py", line 53, in test_exception_debug_info_min_context
    self.engine.get_template('template_backends/syntax_error.html')
  File "/testbed/django/template/backends/jinja2.py", line 43, in get_template
    raise TemplateDoesNotExist(exc.name, backend=self) from exc
django.template.exceptions.TemplateDoesNotExist: template_backends/syntax_error.html

======================================================================
ERROR: test_get_template (template_backends.test_jinja2.Jinja2Tests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/template/backends/jinja2.py", line 41, in get_template
    return Template(self.env.get_template(template_name), self)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/environment.py", line 997, in get_template
    return self._load_template(name, globals)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/environment.py", line 958, in _load_template
    template = self.loader.load(self, name, self.make_globals(globals))
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/loaders.py", line 125, in load
    source, filename, uptodate = self.get_source(environment, name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/loaders.py", line 214, in get_source
    raise TemplateNotFound(template)
jinja2.exceptions.TemplateNotFound: template_backends/hello.html

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/testbed/tests/template_backends/test_dummy.py", line 36, in test_get_template
    template = self.engine.get_template('template_backends/hello.html')
  File "/testbed/django/template/backends/jinja2.py", line 43, in get_template
    raise TemplateDoesNotExist(exc.name, backend=self) from exc
django.template.exceptions.TemplateDoesNotExist: template_backends/hello.html

======================================================================
ERROR: test_get_template_syntax_error (template_backends.test_jinja2.Jinja2Tests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/template/backends/jinja2.py", line 41, in get_template
    return Template(self.env.get_template(template_name), self)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/environment.py", line 997, in get_template
    return self._load_template(name, globals)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/environment.py", line 958, in _load_template
    template = self.loader.load(self, name, self.make_globals(globals))
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/loaders.py", line 125, in load
    source, filename, uptodate = self.get_source(environment, name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/loaders.py", line 214, in get_source
    raise TemplateNotFound(template)
jinja2.exceptions.TemplateNotFound: template_backends/syntax_error.html

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/testbed/tests/template_backends/test_dummy.py", line 51, in test_get_template_syntax_error
    self.engine.get_template('template_backends/syntax_error.html')
  File "/testbed/django/template/backends/jinja2.py", line 43, in get_template
    raise TemplateDoesNotExist(exc.name, backend=self) from exc
django.template.exceptions.TemplateDoesNotExist: template_backends/syntax_error.html

======================================================================
ERROR: test_html_escaping (template_backends.test_jinja2.Jinja2Tests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/template/backends/jinja2.py", line 41, in get_template
    return Template(self.env.get_template(template_name), self)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/environment.py", line 997, in get_template
    return self._load_template(name, globals)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/environment.py", line 958, in _load_template
    template = self.loader.load(self, name, self.make_globals(globals))
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/loaders.py", line 125, in load
    source, filename, uptodate = self.get_source(environment, name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/loaders.py", line 214, in get_source
    raise TemplateNotFound(template)
jinja2.exceptions.TemplateNotFound: template_backends/hello.html

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/testbed/tests/template_backends/test_dummy.py", line 54, in test_html_escaping
    template = self.engine.get_template('template_backends/hello.html')
  File "/testbed/django/template/backends/jinja2.py", line 43, in get_template
    raise TemplateDoesNotExist(exc.name, backend=self) from exc
django.template.exceptions.TemplateDoesNotExist: template_backends/hello.html

======================================================================
ERROR: test_non_ascii_characters (template_backends.test_jinja2.Jinja2Tests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/template/backends/jinja2.py", line 41, in get_template
    return Template(self.env.get_template(template_name), self)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/environment.py", line 997, in get_template
    return self._load_template(name, globals)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/environment.py", line 958, in _load_template
    template = self.loader.load(self, name, self.make_globals(globals))
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/loaders.py", line 125, in load
    source, filename, uptodate = self.get_source(environment, name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/loaders.py", line 214, in get_source
    raise TemplateNotFound(template)
jinja2.exceptions.TemplateNotFound: template_backends/hello.html

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/testbed/tests/template_backends/test_dummy.py", line 94, in test_non_ascii_characters
    template = self.engine.get_template('template_backends/hello.html')
  File "/testbed/django/template/backends/jinja2.py", line 43, in get_template
    raise TemplateDoesNotExist(exc.name, backend=self) from exc
django.template.exceptions.TemplateDoesNotExist: template_backends/hello.html

======================================================================
ERROR: test_origin (template_backends.test_jinja2.Jinja2Tests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/template/backends/jinja2.py", line 41, in get_template
    return Template(self.env.get_template(template_name), self)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/environment.py", line 997, in get_template
    return self._load_template(name, globals)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/environment.py", line 958, in _load_template
    template = self.loader.load(self, name, self.make_globals(globals))
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/loaders.py", line 125, in load
    source, filename, uptodate = self.get_source(environment, name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/loaders.py", line 214, in get_source
    raise TemplateNotFound(template)
jinja2.exceptions.TemplateNotFound: template_backends/hello.html

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/testbed/tests/template_backends/test_jinja2.py", line 31, in test_origin
    template = self.engine.get_template('template_backends/hello.html')
  File "/testbed/django/template/backends/jinja2.py", line 43, in get_template
    raise TemplateDoesNotExist(exc.name, backend=self) from exc
django.template.exceptions.TemplateDoesNotExist: template_backends/hello.html

======================================================================
ERROR: test_template_render_error_nonexistent_source (template_backends.test_jinja2.Jinja2Tests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/template/backends/jinja2.py", line 41, in get_template
    return Template(self.env.get_template(template_name), self)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/environment.py", line 997, in get_template
    return self._load_template(name, globals)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/environment.py", line 958, in _load_template
    template = self.loader.load(self, name, self.make_globals(globals))
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/loaders.py", line 125, in load
    source, filename, uptodate = self.get_source(environment, name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/loaders.py", line 214, in get_source
    raise TemplateNotFound(template)
jinja2.exceptions.TemplateNotFound: template_backends/hello.html

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/testbed/tests/template_backends/test_jinja2.py", line 117, in test_template_render_error_nonexistent_source
    template = self.engine.get_template('template_backends/hello.html')
  File "/testbed/django/template/backends/jinja2.py", line 43, in get_template
    raise TemplateDoesNotExist(exc.name, backend=self) from exc
django.template.exceptions.TemplateDoesNotExist: template_backends/hello.html

======================================================================
ERROR: test_template_render_nested_error (template_backends.test_jinja2.Jinja2Tests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/template/backends/jinja2.py", line 41, in get_template
    return Template(self.env.get_template(template_name), self)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/environment.py", line 997, in get_template
    return self._load_template(name, globals)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/environment.py", line 958, in _load_template
    template = self.loader.load(self, name, self.make_globals(globals))
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/loaders.py", line 125, in load
    source, filename, uptodate = self.get_source(environment, name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/jinja2/loaders.py", line 214, in get_source
    raise TemplateNotFound(template)
jinja2.exceptions.TemplateNotFound: template_backends/syntax_error_include.html

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/testbed/tests/template_backends/test_jinja2.py", line 101, in test_template_render_nested_error
    template = self.engine.get_template('template_backends/syntax_error_include.html')
  File "/testbed/django/template/backends/jinja2.py", line 43, in get_template
    raise TemplateDoesNotExist(exc.name, backend=self) from exc
django.template.exceptions.TemplateDoesNotExist: template_backends/syntax_error_include.html

======================================================================
ERROR: test_get_template_first_engine (template_loader.tests.TemplateLoaderTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/template_loader/tests.py", line 27, in test_get_template_first_engine
    template = get_template("template_loader/hello.html")
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: template_loader/hello.html

======================================================================
ERROR: test_get_template_second_engine (template_loader.tests.TemplateLoaderTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/template_loader/tests.py", line 31, in test_get_template_second_engine
    template = get_template("template_loader/goodbye.html")
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: template_loader/goodbye.html

======================================================================
ERROR: test_get_template_using_engine (template_loader.tests.TemplateLoaderTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/template_loader/tests.py", line 35, in test_get_template_using_engine
    template = get_template("template_loader/hello.html", using="django")
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: template_loader/hello.html

======================================================================
ERROR: test_render_to_string_first_engine (template_loader.tests.TemplateLoaderTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/template_loader/tests.py", line 96, in test_render_to_string_first_engine
    content = render_to_string("template_loader/hello.html")
  File "/testbed/django/template/loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: template_loader/hello.html

======================================================================
ERROR: test_render_to_string_second_engine (template_loader.tests.TemplateLoaderTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/template_loader/tests.py", line 100, in test_render_to_string_second_engine
    content = render_to_string("template_loader/goodbye.html")
  File "/testbed/django/template/loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: template_loader/goodbye.html

======================================================================
ERROR: test_render_to_string_using_engine (template_loader.tests.TemplateLoaderTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/template_loader/tests.py", line 109, in test_render_to_string_using_engine
    content = render_to_string("template_loader/hello.html", using="django")
  File "/testbed/django/template/loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: template_loader/hello.html

======================================================================
ERROR: test_render_to_string_with_list_first_engine (template_loader.tests.TemplateLoaderTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/template_loader/tests.py", line 123, in test_render_to_string_with_list_first_engine
    "template_loader/hello.html"])
  File "/testbed/django/template/loader.py", line 59, in render_to_string
    template = select_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: template_loader/unknown.html, template_loader/hello.html

======================================================================
ERROR: test_render_to_string_with_list_not_found (template_loader.tests.TemplateLoaderTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/template_loader/tests.py", line 145, in test_render_to_string_with_list_not_found
    e.exception.chain[0].tried[0][0].template_name,
IndexError: list index out of range

======================================================================
ERROR: test_render_to_string_with_list_second_engine (template_loader.tests.TemplateLoaderTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/template_loader/tests.py", line 128, in test_render_to_string_with_list_second_engine
    "template_loader/goodbye.html"])
  File "/testbed/django/template/loader.py", line 59, in render_to_string
    template = select_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: template_loader/unknown.html, template_loader/goodbye.html

======================================================================
ERROR: test_render_to_string_with_list_tries_all_engines_before_names (template_loader.tests.TemplateLoaderTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/template_loader/tests.py", line 167, in test_render_to_string_with_list_tries_all_engines_before_names
    "template_loader/hello.html"])
  File "/testbed/django/template/loader.py", line 59, in render_to_string
    template = select_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: template_loader/goodbye.html, template_loader/hello.html

======================================================================
ERROR: test_render_to_string_with_list_using_engine (template_loader.tests.TemplateLoaderTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/template_loader/tests.py", line 133, in test_render_to_string_with_list_using_engine
    "template_loader/hello.html"], using="django")
  File "/testbed/django/template/loader.py", line 59, in render_to_string
    template = select_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: template_loader/unknown.html, template_loader/hello.html

======================================================================
ERROR: test_render_to_string_with_request (template_loader.tests.TemplateLoaderTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/template_loader/tests.py", line 105, in test_render_to_string_with_request
    content = render_to_string("template_loader/request.html", request=request)
  File "/testbed/django/template/loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: template_loader/request.html

======================================================================
ERROR: test_select_template_first_engine (template_loader.tests.TemplateLoaderTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/template_loader/tests.py", line 49, in test_select_template_first_engine
    "template_loader/hello.html"])
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: template_loader/unknown.html, template_loader/hello.html

======================================================================
ERROR: test_select_template_not_found (template_loader.tests.TemplateLoaderTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/template_loader/tests.py", line 80, in test_select_template_not_found
    e.exception.chain[0].tried[0][0].template_name,
IndexError: list index out of range

======================================================================
ERROR: test_select_template_second_engine (template_loader.tests.TemplateLoaderTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/template_loader/tests.py", line 54, in test_select_template_second_engine
    "template_loader/goodbye.html"])
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: template_loader/unknown.html, template_loader/goodbye.html

======================================================================
ERROR: test_select_template_tries_all_engines_before_names (template_loader.tests.TemplateLoaderTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/template_loader/tests.py", line 92, in test_select_template_tries_all_engines_before_names
    "template_loader/hello.html"])
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: template_loader/goodbye.html, template_loader/hello.html

======================================================================
ERROR: test_select_template_using_engine (template_loader.tests.TemplateLoaderTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/template_loader/tests.py", line 59, in test_select_template_using_engine
    "template_loader/hello.html"], using="django")
  File "/testbed/django/template/loader.py", line 47, in select_template
    raise TemplateDoesNotExist(', '.join(template_name_list), chain=chain)
django.template.exceptions.TemplateDoesNotExist: template_loader/unknown.html, template_loader/hello.html

======================================================================
ERROR: test_extends_include_missing_baseloader (template_tests.syntax_tests.test_include.IncludeTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/template_tests/syntax_tests/test_include.py", line 214, in test_extends_include_missing_baseloader
    template = engine.get_template('test_extends_error.html')
  File "/testbed/django/template/engine.py", line 143, in get_template
    template, origin = self.find_template(template_name)
  File "/testbed/django/template/engine.py", line 129, in find_template
    raise TemplateDoesNotExist(name, tried=tried)
django.template.exceptions.TemplateDoesNotExist: test_extends_error.html

======================================================================
ERROR: test_extends_include_missing_cachedloader (template_tests.syntax_tests.test_include.IncludeTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/template_tests/syntax_tests/test_include.py", line 225, in test_extends_include_missing_cachedloader
    template = engine.get_template('test_extends_error.html')
  File "/testbed/django/template/engine.py", line 143, in get_template
    template, origin = self.find_template(template_name)
  File "/testbed/django/template/engine.py", line 129, in find_template
    raise TemplateDoesNotExist(name, tried=tried)
django.template.exceptions.TemplateDoesNotExist: test_extends_error.html

======================================================================
ERROR: test_include_from_loader_get_template (template_tests.syntax_tests.test_include.IncludeTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/template_tests/syntax_tests/test_include.py", line 247, in test_include_from_loader_get_template
    tmpl = loader.get_template('include_tpl.html')  # {% include tmpl %}
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: include_tpl.html

======================================================================
ERROR: test_include_missing_template (template_tests.syntax_tests.test_include.IncludeTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/template_tests/syntax_tests/test_include.py", line 203, in test_include_missing_template
    template = engine.get_template('test_include_error.html')
  File "/testbed/django/template/engine.py", line 143, in get_template
    template, origin = self.find_template(template_name)
  File "/testbed/django/template/engine.py", line 129, in find_template
    raise TemplateDoesNotExist(name, tried=tried)
django.template.exceptions.TemplateDoesNotExist: test_include_error.html

======================================================================
ERROR: test_include_recursive (template_tests.syntax_tests.test_include.IncludeTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/template_tests/syntax_tests/test_include.py", line 272, in test_include_recursive
    t = engine.get_template('recursive_include.html')
  File "/testbed/django/template/engine.py", line 143, in get_template
    template, origin = self.find_template(template_name)
  File "/testbed/django/template/engine.py", line 129, in find_template
    raise TemplateDoesNotExist(name, tried=tried)
django.template.exceptions.TemplateDoesNotExist: recursive_include.html

======================================================================
ERROR: test_middleware_caching (template_tests.test_response.CacheMiddlewareTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/template_tests/test_response.py", line 343, in test_middleware_caching
    response = self.client.get('/template_response_view/')
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 145, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 143, in _get_response
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 65, in resolve_template
    return get_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: response.html

======================================================================
ERROR: test_custom_urlconf (template_tests.test_response.CustomURLConfTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/template_tests/test_response.py", line 327, in test_custom_urlconf
    response = self.client.get('/template_response_view/')
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 145, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 143, in _get_response
    response = response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 65, in resolve_template
    return get_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: response.html

======================================================================
ERROR: test_pickling (template_tests.test_response.SimpleTemplateResponseTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/template_tests/test_response.py", line 172, in test_pickling
    response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 65, in resolve_template
    return get_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: first/test.html

======================================================================
ERROR: test_pickling_cookie (template_tests.test_response.SimpleTemplateResponseTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/template_tests/test_response.py", line 212, in test_pickling_cookie
    response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 65, in resolve_template
    return get_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: first/test.html

======================================================================
ERROR: test_post_callbacks (template_tests.test_response.SimpleTemplateResponseTest)
Rendering a template response triggers the post-render callbacks
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/template_tests/test_response.py", line 157, in test_post_callbacks
    response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 65, in resolve_template
    return get_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: first/test.html

======================================================================
ERROR: test_repickling (template_tests.test_response.SimpleTemplateResponseTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/template_tests/test_response.py", line 199, in test_repickling
    response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 65, in resolve_template
    return get_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: first/test.html

======================================================================
ERROR: test_template_resolving (template_tests.test_response.SimpleTemplateResponseTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/template_tests/test_response.py", line 39, in test_template_resolving
    response.render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 65, in resolve_template
    return get_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: first/test.html

======================================================================
ERROR: test_using (template_tests.test_response.SimpleTemplateResponseTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/template_tests/test_response.py", line 135, in test_using
    response = SimpleTemplateResponse('template_tests/using.html').render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 65, in resolve_template
    return get_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: template_tests/using.html

======================================================================
ERROR: test_using (template_tests.test_response.TemplateResponseTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/template_tests/test_response.py", line 263, in test_using
    response = TemplateResponse(request, 'template_tests/using.html').render()
  File "/testbed/django/template/response.py", line 105, in render
    self.content = self.rendered_content
  File "/testbed/django/template/response.py", line 81, in rendered_content
    template = self.resolve_template(self.template_name)
  File "/testbed/django/template/response.py", line 65, in resolve_template
    return get_template(template, using=self.using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: template_tests/using.html

======================================================================
ERROR: test_compile_tag_error_27584 (template_tests.tests.TemplateTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/template_tests/tests.py", line 120, in test_compile_tag_error_27584
    t = engine.get_template('27584_parent.html')
  File "/testbed/django/template/engine.py", line 143, in get_template
    template, origin = self.find_template(template_name)
  File "/testbed/django/template/engine.py", line 129, in find_template
    raise TemplateDoesNotExist(name, tried=tried)
django.template.exceptions.TemplateDoesNotExist: 27584_parent.html

======================================================================
ERROR: test_compile_tag_error_27956 (template_tests.tests.TemplateTests)
Errors in a child of {% extends %} are displayed correctly.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/template_tests/tests.py", line 132, in test_compile_tag_error_27956
    t = engine.get_template('27956_child.html')
  File "/testbed/django/template/engine.py", line 143, in get_template
    template, origin = self.find_template(template_name)
  File "/testbed/django/template/engine.py", line 129, in find_template
    raise TemplateDoesNotExist(name, tried=tried)
django.template.exceptions.TemplateDoesNotExist: 27956_child.html

======================================================================
ERROR: test_super_errors (template_tests.tests.TemplateTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/template_tests/tests.py", line 142, in test_super_errors
    t = engine.get_template('included_content.html')
  File "/testbed/django/template/engine.py", line 143, in get_template
    template, origin = self.find_template(template_name)
  File "/testbed/django/template/engine.py", line 129, in find_template
    raise TemplateDoesNotExist(name, tried=tried)
django.template.exceptions.TemplateDoesNotExist: included_content.html

======================================================================
ERROR: test_unicode_contains (test_client_regress.tests.AssertContainsTests)
Unicode characters can be found in template context
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/test_client_regress/tests.py", line 132, in test_unicode_contains
    r = self.client.get('/check_unicode/')
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/test_client_regress/views.py", line 97, in return_unicode
    return render(request, 'unicode.html')
  File "/testbed/django/shortcuts.py", line 19, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "/testbed/django/template/loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: unicode.html

======================================================================
ERROR: test_unicode_not_contains (test_client_regress.tests.AssertContainsTests)
Unicode characters can be searched for, and not found in template context
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/test_client_regress/tests.py", line 139, in test_unicode_not_contains
    r = self.client.get('/check_unicode/')
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/test_client_regress/views.py", line 97, in return_unicode
    return render(request, 'unicode.html')
  File "/testbed/django/shortcuts.py", line 19, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "/testbed/django/template/loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: unicode.html

======================================================================
ERROR: test_get_like_requests (test_client_regress.tests.QueryStringTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/test_client_regress/tests.py", line 1234, in test_get_like_requests
    response = method("/request_data/", data={'foo': 'whiz'})
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/test_client_regress/views.py", line 42, in request_data
    'data': data,
  File "/testbed/django/shortcuts.py", line 19, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "/testbed/django/template/loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: base.html

======================================================================
ERROR: test_post_like_requests (test_client_regress.tests.QueryStringTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/test_client_regress/tests.py", line 1251, in test_post_like_requests
    response = self.client.post("/request_data/", data={'foo': 'whiz'})
  File "/testbed/django/test/client.py", line 529, in post
    response = super().post(path, data=data, content_type=content_type, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 356, in post
    secure=secure, **extra)
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/tests/test_client_regress/views.py", line 42, in request_data
    'data': data,
  File "/testbed/django/shortcuts.py", line 19, in render
    content = loader.render_to_string(template_name, context, request, using=using)
  File "/testbed/django/template/loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
  File "/testbed/django/template/loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: base.html

======================================================================
ERROR: test_escaping (view_tests.tests.test_i18n.I18NViewTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/view_tests/tests/test_i18n.py", line 390, in test_escaping
    response = self.client.get('/jsi18n_admin/?language=de')
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/django/views/generic/base.py", line 70, in view
    return self.dispatch(request, *args, **kwargs)
  File "/testbed/django/views/generic/base.py", line 98, in dispatch
    return handler(request, *args, **kwargs)
  File "/testbed/django/views/i18n.py", line 216, in get
    paths = self.get_paths(packages) if packages else None
  File "/testbed/django/views/i18n.py", line 227, in get_paths
    'Invalid package(s) provided to JavaScriptCatalog: %s' % ','.join(excluded)
ValueError: Invalid package(s) provided to JavaScriptCatalog: view_tests

======================================================================
ERROR: test_i18n_english_variant (view_tests.tests.test_i18n.I18NViewTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/view_tests/tests/test_i18n.py", line 351, in test_i18n_english_variant
    response = self.client.get('/jsi18n/')
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/django/views/generic/base.py", line 70, in view
    return self.dispatch(request, *args, **kwargs)
  File "/testbed/django/views/generic/base.py", line 98, in dispatch
    return handler(request, *args, **kwargs)
  File "/testbed/django/views/i18n.py", line 216, in get
    paths = self.get_paths(packages) if packages else None
  File "/testbed/django/views/i18n.py", line 227, in get_paths
    'Invalid package(s) provided to JavaScriptCatalog: %s' % ','.join(excluded)
ValueError: Invalid package(s) provided to JavaScriptCatalog: view_tests

======================================================================
ERROR: test_i18n_fallback_language_plural (view_tests.tests.test_i18n.I18NViewTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/view_tests/tests/test_i18n.py", line 329, in test_i18n_fallback_language_plural
    response = self.client.get('/jsi18n/')
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/django/views/generic/base.py", line 70, in view
    return self.dispatch(request, *args, **kwargs)
  File "/testbed/django/views/generic/base.py", line 98, in dispatch
    return handler(request, *args, **kwargs)
  File "/testbed/django/views/i18n.py", line 216, in get
    paths = self.get_paths(packages) if packages else None
  File "/testbed/django/views/i18n.py", line 227, in get_paths
    'Invalid package(s) provided to JavaScriptCatalog: %s' % ','.join(excluded)
ValueError: Invalid package(s) provided to JavaScriptCatalog: view_tests

======================================================================
ERROR: test_i18n_language_non_english_default (view_tests.tests.test_i18n.I18NViewTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/view_tests/tests/test_i18n.py", line 365, in test_i18n_language_non_english_default
    response = self.client.get('/jsi18n/')
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/django/views/generic/base.py", line 70, in view
    return self.dispatch(request, *args, **kwargs)
  File "/testbed/django/views/generic/base.py", line 98, in dispatch
    return handler(request, *args, **kwargs)
  File "/testbed/django/views/i18n.py", line 216, in get
    paths = self.get_paths(packages) if packages else None
  File "/testbed/django/views/i18n.py", line 227, in get_paths
    'Invalid package(s) provided to JavaScriptCatalog: %s' % ','.join(excluded)
ValueError: Invalid package(s) provided to JavaScriptCatalog: view_tests

======================================================================
ERROR: test_i18n_language_non_english_fallback (view_tests.tests.test_i18n.I18NViewTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/view_tests/tests/test_i18n.py", line 385, in test_i18n_language_non_english_fallback
    response = self.client.get('/jsi18n/')
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/django/views/generic/base.py", line 70, in view
    return self.dispatch(request, *args, **kwargs)
  File "/testbed/django/views/generic/base.py", line 98, in dispatch
    return handler(request, *args, **kwargs)
  File "/testbed/django/views/i18n.py", line 216, in get
    paths = self.get_paths(packages) if packages else None
  File "/testbed/django/views/i18n.py", line 227, in get_paths
    'Invalid package(s) provided to JavaScriptCatalog: %s' % ','.join(excluded)
ValueError: Invalid package(s) provided to JavaScriptCatalog: view_tests

======================================================================
ERROR: test_i18n_with_locale_paths (view_tests.tests.test_i18n.I18NViewTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/view_tests/tests/test_i18n.py", line 448, in test_i18n_with_locale_paths
    response = self.client.get('/jsi18n/')
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/django/views/generic/base.py", line 70, in view
    return self.dispatch(request, *args, **kwargs)
  File "/testbed/django/views/generic/base.py", line 98, in dispatch
    return handler(request, *args, **kwargs)
  File "/testbed/django/views/i18n.py", line 216, in get
    paths = self.get_paths(packages) if packages else None
  File "/testbed/django/views/i18n.py", line 227, in get_paths
    'Invalid package(s) provided to JavaScriptCatalog: %s' % ','.join(excluded)
ValueError: Invalid package(s) provided to JavaScriptCatalog: view_tests

======================================================================
ERROR: test_jsi18n (view_tests.tests.test_i18n.I18NViewTests)
The javascript_catalog can be deployed with language settings
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/view_tests/tests/test_i18n.py", line 251, in test_jsi18n
    response = self.client.get('/jsi18n/')
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/django/views/generic/base.py", line 70, in view
    return self.dispatch(request, *args, **kwargs)
  File "/testbed/django/views/generic/base.py", line 98, in dispatch
    return handler(request, *args, **kwargs)
  File "/testbed/django/views/i18n.py", line 216, in get
    paths = self.get_paths(packages) if packages else None
  File "/testbed/django/views/i18n.py", line 227, in get_paths
    'Invalid package(s) provided to JavaScriptCatalog: %s' % ','.join(excluded)
ValueError: Invalid package(s) provided to JavaScriptCatalog: view_tests

======================================================================
ERROR: test_jsi18n_USE_I18N_False (view_tests.tests.test_i18n.I18NViewTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/view_tests/tests/test_i18n.py", line 263, in test_jsi18n_USE_I18N_False
    response = self.client.get('/jsi18n/')
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/django/views/generic/base.py", line 70, in view
    return self.dispatch(request, *args, **kwargs)
  File "/testbed/django/views/generic/base.py", line 98, in dispatch
    return handler(request, *args, **kwargs)
  File "/testbed/django/views/i18n.py", line 216, in get
    paths = self.get_paths(packages) if packages else None
  File "/testbed/django/views/i18n.py", line 227, in get_paths
    'Invalid package(s) provided to JavaScriptCatalog: %s' % ','.join(excluded)
ValueError: Invalid package(s) provided to JavaScriptCatalog: view_tests

======================================================================
ERROR: test_jsi18n_fallback_language (view_tests.tests.test_i18n.I18NViewTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/view_tests/tests/test_i18n.py", line 319, in test_jsi18n_fallback_language
    response = self.client.get('/jsi18n/')
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/django/views/generic/base.py", line 70, in view
    return self.dispatch(request, *args, **kwargs)
  File "/testbed/django/views/generic/base.py", line 98, in dispatch
    return handler(request, *args, **kwargs)
  File "/testbed/django/views/i18n.py", line 216, in get
    paths = self.get_paths(packages) if packages else None
  File "/testbed/django/views/i18n.py", line 227, in get_paths
    'Invalid package(s) provided to JavaScriptCatalog: %s' % ','.join(excluded)
ValueError: Invalid package(s) provided to JavaScriptCatalog: view_tests

======================================================================
ERROR: test_jsi18n_with_missing_en_files (view_tests.tests.test_i18n.I18NViewTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/view_tests/tests/test_i18n.py", line 295, in test_jsi18n_with_missing_en_files
    response = self.client.get('/jsi18n/')
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/django/views/generic/base.py", line 70, in view
    return self.dispatch(request, *args, **kwargs)
  File "/testbed/django/views/generic/base.py", line 98, in dispatch
    return handler(request, *args, **kwargs)
  File "/testbed/django/views/i18n.py", line 216, in get
    paths = self.get_paths(packages) if packages else None
  File "/testbed/django/views/i18n.py", line 227, in get_paths
    'Invalid package(s) provided to JavaScriptCatalog: %s' % ','.join(excluded)
ValueError: Invalid package(s) provided to JavaScriptCatalog: view_tests

======================================================================
ERROR: test_jsoni18n (view_tests.tests.test_i18n.I18NViewTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/view_tests/tests/test_i18n.py", line 273, in test_jsoni18n
    response = self.client.get('/jsoni18n/')
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/django/views/generic/base.py", line 70, in view
    return self.dispatch(request, *args, **kwargs)
  File "/testbed/django/views/generic/base.py", line 98, in dispatch
    return handler(request, *args, **kwargs)
  File "/testbed/django/views/i18n.py", line 216, in get
    paths = self.get_paths(packages) if packages else None
  File "/testbed/django/views/i18n.py", line 227, in get_paths
    'Invalid package(s) provided to JavaScriptCatalog: %s' % ','.join(excluded)
ValueError: Invalid package(s) provided to JavaScriptCatalog: view_tests

======================================================================
ERROR: test_jsoni18n_with_missing_en_files (view_tests.tests.test_i18n.I18NViewTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/view_tests/tests/test_i18n.py", line 304, in test_jsoni18n_with_missing_en_files
    response = self.client.get('/jsoni18n/')
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 115, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/testbed/django/core/handlers/base.py", line 113, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/testbed/django/views/generic/base.py", line 70, in view
    return self.dispatch(request, *args, **kwargs)
  File "/testbed/django/views/generic/base.py", line 98, in dispatch
    return handler(request, *args, **kwargs)
  File "/testbed/django/views/i18n.py", line 216, in get
    paths = self.get_paths(packages) if packages else None
  File "/testbed/django/views/i18n.py", line 227, in get_paths
    'Invalid package(s) provided to JavaScriptCatalog: %s' % ','.join(excluded)
ValueError: Invalid package(s) provided to JavaScriptCatalog: view_tests

======================================================================
ERROR: test_json_response (view_tests.tests.test_json.JsonResponseTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/view_tests/tests/test_json.py", line 10, in test_json_response
    response = self.client.get('/json/response/')
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 100, in _get_response
    resolver_match = resolver.resolve(request.path_info)
  File "/testbed/django/urls/resolvers.py", line 545, in resolve
    for pattern in self.url_patterns:
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 589, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 582, in urlconf_module
    return import_module(self.urlconf_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/view_tests/generic_urls.py", line 6, in <module>
    from .models import Article, DateArticle
  File "/testbed/tests/view_tests/models.py", line 8, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class view_tests.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_nonascii_redirect (view_tests.tests.test_specials.URLHandling)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/view_tests/tests/test_specials.py", line 15, in test_nonascii_redirect
    response = self.client.get('/nonascii_redirect/')
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 100, in _get_response
    resolver_match = resolver.resolve(request.path_info)
  File "/testbed/django/urls/resolvers.py", line 545, in resolve
    for pattern in self.url_patterns:
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 589, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 582, in urlconf_module
    return import_module(self.urlconf_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/view_tests/generic_urls.py", line 6, in <module>
    from .models import Article, DateArticle
  File "/testbed/tests/view_tests/models.py", line 8, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class view_tests.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: test_permanent_nonascii_redirect (view_tests.tests.test_specials.URLHandling)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/view_tests/tests/test_specials.py", line 22, in test_permanent_nonascii_redirect
    response = self.client.get('/permanent_nonascii_redirect/')
  File "/testbed/django/test/client.py", line 520, in get
    response = super().get(path, data=data, secure=secure, **extra)
  File "/testbed/django/test/client.py", line 346, in get
    **extra,
  File "/testbed/django/test/client.py", line 421, in generic
    return self.request(**r)
  File "/testbed/django/test/client.py", line 497, in request
    raise exc_value
  File "/testbed/django/core/handlers/exception.py", line 34, in inner
    response = get_response(request)
  File "/testbed/django/core/handlers/base.py", line 100, in _get_response
    resolver_match = resolver.resolve(request.path_info)
  File "/testbed/django/urls/resolvers.py", line 545, in resolve
    for pattern in self.url_patterns:
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 589, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 582, in urlconf_module
    return import_module(self.urlconf_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/view_tests/generic_urls.py", line 6, in <module>
    from .models import Article, DateArticle
  File "/testbed/tests/view_tests/models.py", line 8, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class view_tests.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.

======================================================================
ERROR: admin_changelist.test_date_hierarchy (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: admin_changelist.test_date_hierarchy
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/admin_changelist/test_date_hierarchy.py", line 8, in <module>
    from .admin import EventAdmin, site as custom_site
  File "/testbed/tests/admin_changelist/admin.py", line 6, in <module>
    from .models import Child, Event, Parent, Swallow
  File "/testbed/tests/admin_changelist/models.py", line 6, in <module>
    class Event(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class admin_changelist.models.Event doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: admin_changelist.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: admin_changelist.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/admin_changelist/tests.py", line 25, in <module>
    from .admin import (
  File "/testbed/tests/admin_changelist/admin.py", line 6, in <module>
    from .models import Child, Event, Parent, Swallow
  File "/testbed/tests/admin_changelist/models.py", line 6, in <module>
    class Event(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class admin_changelist.models.Event doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: admin_checks.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: admin_checks.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/admin_checks/tests.py", line 12, in <module>
    from .models import (
  File "/testbed/tests/admin_checks/models.py", line 10, in <module>
    class Album(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class admin_checks.models.Album doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: admin_custom_urls.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: admin_custom_urls.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/admin_custom_urls/tests.py", line 7, in <module>
    from .models import Action, Car, Person
  File "/testbed/tests/admin_custom_urls/models.py", line 9, in <module>
    class Action(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class admin_custom_urls.models.Action doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: admin_docs.test_views (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: admin_docs.test_views
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/admin_docs/test_views.py", line 14, in <module>
    from .models import Company, Person
  File "/testbed/tests/admin_docs/models.py", line 8, in <module>
    class Company(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class admin_docs.models.Company doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: admin_filters.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: admin_filters.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/admin_filters/tests.py", line 15, in <module>
    from .models import Book, Bookmark, Department, Employee, TaggedItem
  File "/testbed/tests/admin_filters/models.py", line 9, in <module>
    class Book(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class admin_filters.models.Book doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: admin_inlines.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: admin_inlines.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/admin_inlines/tests.py", line 9, in <module>
    from .admin import InnerInline, site as admin_site
  File "/testbed/tests/admin_inlines/admin.py", line 5, in <module>
    from .models import (
  File "/testbed/tests/admin_inlines/models.py", line 11, in <module>
    class Parent(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class admin_inlines.models.Parent doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: admin_ordering.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: admin_ordering.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/admin_ordering/tests.py", line 7, in <module>
    from .models import (
  File "/testbed/tests/admin_ordering/models.py", line 5, in <module>
    class Band(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class admin_ordering.models.Band doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: admin_registration.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: admin_registration.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/admin_registration/tests.py", line 7, in <module>
    from .models import Location, Person, Place, Traveler
  File "/testbed/tests/admin_registration/models.py", line 8, in <module>
    class Person(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class admin_registration.models.Person doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: admin_utils.test_logentry (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: admin_utils.test_logentry
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/admin_utils/test_logentry.py", line 13, in <module>
    from .models import Article, ArticleProxy, Site
  File "/testbed/tests/admin_utils/models.py", line 5, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class admin_utils.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: admin_utils.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: admin_utils.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/admin_utils/tests.py", line 16, in <module>
    from .models import (
  File "/testbed/tests/admin_utils/models.py", line 5, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class admin_utils.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: admin_views.test_actions (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: admin_views.test_actions
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/admin_views/test_actions.py", line 12, in <module>
    from .admin import SubscriberAdmin
  File "/testbed/tests/admin_views/admin.py", line 24, in <module>
    from .models import (
  File "/testbed/tests/admin_views/models.py", line 16, in <module>
    class Section(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class admin_views.models.Section doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: admin_views.test_adminsite (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: admin_views.test_adminsite
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/admin_views/test_adminsite.py", line 8, in <module>
    from .models import Article
  File "/testbed/tests/admin_views/models.py", line 16, in <module>
    class Section(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class admin_views.models.Section doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: admin_views.test_autocomplete_view (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: admin_views.test_autocomplete_view
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/admin_views/test_autocomplete_view.py", line 13, in <module>
    from .admin import AnswerAdmin, QuestionAdmin
  File "/testbed/tests/admin_views/admin.py", line 24, in <module>
    from .models import (
  File "/testbed/tests/admin_views/models.py", line 16, in <module>
    class Section(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class admin_views.models.Section doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: admin_views.test_history_view (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: admin_views.test_history_view
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/admin_views/test_history_view.py", line 6, in <module>
    from .models import City, State
  File "/testbed/tests/admin_views/models.py", line 16, in <module>
    class Section(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class admin_views.models.Section doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: admin_views.test_multidb (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: admin_views.test_multidb
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/admin_views/test_multidb.py", line 8, in <module>
    from .models import Book
  File "/testbed/tests/admin_views/models.py", line 16, in <module>
    class Section(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class admin_views.models.Section doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: admin_views.test_templatetags (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: admin_views.test_templatetags
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/admin_views/test_templatetags.py", line 11, in <module>
    from .admin import ArticleAdmin, site
  File "/testbed/tests/admin_views/admin.py", line 24, in <module>
    from .models import (
  File "/testbed/tests/admin_views/models.py", line 16, in <module>
    class Section(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class admin_views.models.Section doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: admin_views.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: admin_views.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/admin_views/tests.py", line 37, in <module>
    from . import customadmin
  File "/testbed/tests/admin_views/customadmin.py", line 10, in <module>
    from . import admin as base_admin, forms, models
  File "/testbed/tests/admin_views/admin.py", line 24, in <module>
    from .models import (
  File "/testbed/tests/admin_views/models.py", line 16, in <module>
    class Section(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class admin_views.models.Section doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: admin_widgets.test_autocomplete_widget (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: admin_widgets.test_autocomplete_widget
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/admin_widgets/test_autocomplete_widget.py", line 8, in <module>
    from .models import Album, Band
  File "/testbed/tests/admin_widgets/models.py", line 11, in <module>
    class Member(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class admin_widgets.models.Member doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: admin_widgets.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: admin_widgets.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/admin_widgets/tests.py", line 22, in <module>
    from .models import (
  File "/testbed/tests/admin_widgets/models.py", line 11, in <module>
    class Member(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class admin_widgets.models.Member doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: aggregation.test_filter_argument (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: aggregation.test_filter_argument
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/aggregation/test_filter_argument.py", line 10, in <module>
    from .models import Author, Book, Publisher
  File "/testbed/tests/aggregation/models.py", line 4, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class aggregation.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: aggregation.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: aggregation.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/aggregation/tests.py", line 17, in <module>
    from .models import Author, Book, Publisher, Store
  File "/testbed/tests/aggregation/models.py", line 4, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class aggregation.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: aggregation_regress.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: aggregation_regress.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/aggregation_regress/tests.py", line 17, in <module>
    from .models import (
  File "/testbed/tests/aggregation_regress/models.py", line 8, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class aggregation_regress.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: annotations.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: annotations.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/annotations/tests.py", line 13, in <module>
    from .models import (
  File "/testbed/tests/annotations/models.py", line 4, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class annotations.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: apps.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: apps.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/apps/tests.py", line 12, in <module>
    from .models import SoAlternative, TotallyNormal, new_apps
  File "/testbed/tests/apps/models.py", line 9, in <module>
    class TotallyNormal(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class apps.models.TotallyNormal doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: async.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: async.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/async/tests.py", line 12, in <module>
    from .models import SimpleModel
  File "/testbed/tests/async/models.py", line 4, in <module>
    class SimpleModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class async.models.SimpleModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: auth_tests.models (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: auth_tests.models
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 462, in _find_test_path
    package = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/auth_tests/models/__init__.py", line 1, in <module>
    from .custom_permissions import CustomPermissionsUser
  File "/testbed/tests/auth_tests/models/custom_permissions.py", line 9, in <module>
    from .custom_user import CustomUserManager, RemoveGroupsAndPermissions
  File "/testbed/tests/auth_tests/models/custom_user.py", line 36, in <module>
    class CustomUser(AbstractBaseUser):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class auth_tests.models.custom_user.CustomUser doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: auth_tests.test_auth_backends (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: auth_tests.test_auth_backends
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/auth_tests/test_auth_backends.py", line 18, in <module>
    from .models import (
  File "/testbed/tests/auth_tests/models/__init__.py", line 1, in <module>
    from .custom_permissions import CustomPermissionsUser
  File "/testbed/tests/auth_tests/models/custom_permissions.py", line 9, in <module>
    from .custom_user import CustomUserManager, RemoveGroupsAndPermissions
  File "/testbed/tests/auth_tests/models/custom_user.py", line 36, in <module>
    class CustomUser(AbstractBaseUser):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class auth_tests.models.custom_user.CustomUser doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: auth_tests.test_basic (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: auth_tests.test_basic
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/auth_tests/test_basic.py", line 9, in <module>
    from .models import CustomUser
  File "/testbed/tests/auth_tests/models/__init__.py", line 1, in <module>
    from .custom_permissions import CustomPermissionsUser
  File "/testbed/tests/auth_tests/models/custom_permissions.py", line 9, in <module>
    from .custom_user import CustomUserManager, RemoveGroupsAndPermissions
  File "/testbed/tests/auth_tests/models/custom_user.py", line 36, in <module>
    class CustomUser(AbstractBaseUser):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class auth_tests.models.custom_user.CustomUser doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: auth_tests.test_checks (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: auth_tests.test_checks
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/auth_tests/test_checks.py", line 12, in <module>
    from .models import CustomUserNonUniqueUsername
  File "/testbed/tests/auth_tests/models/__init__.py", line 1, in <module>
    from .custom_permissions import CustomPermissionsUser
  File "/testbed/tests/auth_tests/models/custom_permissions.py", line 9, in <module>
    from .custom_user import CustomUserManager, RemoveGroupsAndPermissions
  File "/testbed/tests/auth_tests/models/custom_user.py", line 36, in <module>
    class CustomUser(AbstractBaseUser):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class auth_tests.models.custom_user.CustomUser doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: auth_tests.test_decorators (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: auth_tests.test_decorators
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/auth_tests/test_decorators.py", line 9, in <module>
    from .test_views import AuthViewsTestCase
  File "/testbed/tests/auth_tests/test_views.py", line 36, in <module>
    from .models import CustomUser, UUIDUser
  File "/testbed/tests/auth_tests/models/__init__.py", line 1, in <module>
    from .custom_permissions import CustomPermissionsUser
  File "/testbed/tests/auth_tests/models/custom_permissions.py", line 9, in <module>
    from .custom_user import CustomUserManager, RemoveGroupsAndPermissions
  File "/testbed/tests/auth_tests/models/custom_user.py", line 36, in <module>
    class CustomUser(AbstractBaseUser):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class auth_tests.models.custom_user.CustomUser doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: auth_tests.test_forms (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: auth_tests.test_forms
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/auth_tests/test_forms.py", line 22, in <module>
    from .models.custom_user import (
  File "/testbed/tests/auth_tests/models/__init__.py", line 1, in <module>
    from .custom_permissions import CustomPermissionsUser
  File "/testbed/tests/auth_tests/models/custom_permissions.py", line 9, in <module>
    from .custom_user import CustomUserManager, RemoveGroupsAndPermissions
  File "/testbed/tests/auth_tests/models/custom_user.py", line 36, in <module>
    class CustomUser(AbstractBaseUser):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class auth_tests.models.custom_user.CustomUser doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: auth_tests.test_handlers (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: auth_tests.test_handlers
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/auth_tests/test_handlers.py", line 7, in <module>
    from .models import CustomUser
  File "/testbed/tests/auth_tests/models/__init__.py", line 1, in <module>
    from .custom_permissions import CustomPermissionsUser
  File "/testbed/tests/auth_tests/models/custom_permissions.py", line 9, in <module>
    from .custom_user import CustomUserManager, RemoveGroupsAndPermissions
  File "/testbed/tests/auth_tests/models/custom_user.py", line 36, in <module>
    class CustomUser(AbstractBaseUser):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class auth_tests.models.custom_user.CustomUser doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: auth_tests.test_management (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: auth_tests.test_management
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/auth_tests/test_management.py", line 25, in <module>
    from .models import (
  File "/testbed/tests/auth_tests/models/__init__.py", line 1, in <module>
    from .custom_permissions import CustomPermissionsUser
  File "/testbed/tests/auth_tests/models/custom_permissions.py", line 9, in <module>
    from .custom_user import CustomUserManager, RemoveGroupsAndPermissions
  File "/testbed/tests/auth_tests/models/custom_user.py", line 36, in <module>
    class CustomUser(AbstractBaseUser):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class auth_tests.models.custom_user.CustomUser doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: auth_tests.test_migrations (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: auth_tests.test_migrations
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/auth_tests/test_migrations.py", line 10, in <module>
    from .models import Proxy, UserProxy
  File "/testbed/tests/auth_tests/models/__init__.py", line 1, in <module>
    from .custom_permissions import CustomPermissionsUser
  File "/testbed/tests/auth_tests/models/custom_permissions.py", line 9, in <module>
    from .custom_user import CustomUserManager, RemoveGroupsAndPermissions
  File "/testbed/tests/auth_tests/models/custom_user.py", line 36, in <module>
    class CustomUser(AbstractBaseUser):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class auth_tests.models.custom_user.CustomUser doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: auth_tests.test_models (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: auth_tests.test_models
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/auth_tests/test_models.py", line 16, in <module>
    from .models import IntegerUsernameUser
  File "/testbed/tests/auth_tests/models/__init__.py", line 1, in <module>
    from .custom_permissions import CustomPermissionsUser
  File "/testbed/tests/auth_tests/models/custom_permissions.py", line 9, in <module>
    from .custom_user import CustomUserManager, RemoveGroupsAndPermissions
  File "/testbed/tests/auth_tests/models/custom_user.py", line 36, in <module>
    class CustomUser(AbstractBaseUser):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class auth_tests.models.custom_user.CustomUser doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: auth_tests.test_signals (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: auth_tests.test_signals
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/auth_tests/test_signals.py", line 8, in <module>
    from .models import MinimalUser, UserWithDisabledLastLoginField
  File "/testbed/tests/auth_tests/models/__init__.py", line 1, in <module>
    from .custom_permissions import CustomPermissionsUser
  File "/testbed/tests/auth_tests/models/custom_permissions.py", line 9, in <module>
    from .custom_user import CustomUserManager, RemoveGroupsAndPermissions
  File "/testbed/tests/auth_tests/models/custom_user.py", line 36, in <module>
    class CustomUser(AbstractBaseUser):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class auth_tests.models.custom_user.CustomUser doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: auth_tests.test_views (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: auth_tests.test_views
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/auth_tests/test_views.py", line 36, in <module>
    from .models import CustomUser, UUIDUser
  File "/testbed/tests/auth_tests/models/__init__.py", line 1, in <module>
    from .custom_permissions import CustomPermissionsUser
  File "/testbed/tests/auth_tests/models/custom_permissions.py", line 9, in <module>
    from .custom_user import CustomUserManager, RemoveGroupsAndPermissions
  File "/testbed/tests/auth_tests/models/custom_user.py", line 36, in <module>
    class CustomUser(AbstractBaseUser):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class auth_tests.models.custom_user.CustomUser doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: backends.base.test_base (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: backends.base.test_base
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/backends/base/test_base.py", line 7, in <module>
    from ..models import Square
  File "/testbed/tests/backends/models.py", line 8, in <module>
    class Square(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class backends.models.Square doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: backends.base.test_creation (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: backends.base.test_creation
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/backends/base/test_creation.py", line 10, in <module>
    from ..models import Object, ObjectReference
  File "/testbed/tests/backends/models.py", line 8, in <module>
    class Square(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class backends.models.Square doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: backends.oracle.test_introspection (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: backends.oracle.test_introspection
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/backends/oracle/test_introspection.py", line 6, in <module>
    from ..models import Person
  File "/testbed/tests/backends/models.py", line 8, in <module>
    class Square(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class backends.models.Square doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: backends.oracle.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: backends.oracle.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/backends/oracle/tests.py", line 7, in <module>
    from ..models import Square
  File "/testbed/tests/backends/models.py", line 8, in <module>
    class Square(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class backends.models.Square doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: backends.postgresql.test_introspection (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: backends.postgresql.test_introspection
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/backends/postgresql/test_introspection.py", line 6, in <module>
    from ..models import Person
  File "/testbed/tests/backends/models.py", line 8, in <module>
    class Square(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class backends.models.Square doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: backends.postgresql.test_server_side_cursors (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: backends.postgresql.test_server_side_cursors
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/backends/postgresql/test_server_side_cursors.py", line 9, in <module>
    from ..models import Person
  File "/testbed/tests/backends/models.py", line 8, in <module>
    class Square(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class backends.models.Square doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: backends.sqlite.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: backends.sqlite.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/backends/sqlite/tests.py", line 19, in <module>
    from ..models import Author, Item, Object, Square
  File "/testbed/tests/backends/models.py", line 8, in <module>
    class Square(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class backends.models.Square doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: backends.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: backends.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/backends/tests.py", line 21, in <module>
    from .models import (
  File "/testbed/tests/backends/models.py", line 8, in <module>
    class Square(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class backends.models.Square doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: basic.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: basic.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/basic/tests.py", line 14, in <module>
    from .models import (
  File "/testbed/tests/basic/models.py", line 11, in <module>
    class Article(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class basic.models.Article doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: bulk_create.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: bulk_create.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/bulk_create/tests.py", line 11, in <module>
    from .models import (
  File "/testbed/tests/bulk_create/models.py", line 14, in <module>
    class Country(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class bulk_create.models.Country doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: cache.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: cache.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/cache/tests.py", line 44, in <module>
    from .models import Poll, expensive_calculation
  File "/testbed/tests/cache/models.py", line 10, in <module>
    class Poll(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class cache.models.Poll doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: check_framework.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: check_framework.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/check_framework/tests.py", line 16, in <module>
    from .models import SimpleModel, my_check
  File "/testbed/tests/check_framework/models.py", line 5, in <module>
    class SimpleModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class check_framework.models.SimpleModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: constraints.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: constraints.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/constraints/tests.py", line 8, in <module>
    from .models import ChildModel, Product, UniqueConstraintProduct
  File "/testbed/tests/constraints/models.py", line 4, in <module>
    class Product(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class constraints.models.Product doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: contenttypes_tests.test_fields (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: contenttypes_tests.test_fields
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/contenttypes_tests/test_fields.py", line 8, in <module>
    from .models import Answer, Question
  File "/testbed/tests/contenttypes_tests/models.py", line 11, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class contenttypes_tests.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: contenttypes_tests.test_management (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: contenttypes_tests.test_management
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/contenttypes_tests/test_management.py", line 10, in <module>
    from .models import ModelWithNullFKToSite, Post
  File "/testbed/tests/contenttypes_tests/models.py", line 11, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class contenttypes_tests.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: contenttypes_tests.test_models (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: contenttypes_tests.test_models
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/contenttypes_tests/test_models.py", line 6, in <module>
    from .models import Author, ConcreteModel, FooWithUrl, ProxyModel
  File "/testbed/tests/contenttypes_tests/models.py", line 11, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class contenttypes_tests.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: contenttypes_tests.test_order_with_respect_to (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: contenttypes_tests.test_order_with_respect_to
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/contenttypes_tests/test_order_with_respect_to.py", line 5, in <module>
    from .models import Answer, Post, Question
  File "/testbed/tests/contenttypes_tests/models.py", line 11, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class contenttypes_tests.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: contenttypes_tests.test_views (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: contenttypes_tests.test_views
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/contenttypes_tests/test_views.py", line 11, in <module>
    from .models import (
  File "/testbed/tests/contenttypes_tests/models.py", line 11, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class contenttypes_tests.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: custom_columns.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: custom_columns.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/custom_columns/tests.py", line 4, in <module>
    from .models import Article, Author
  File "/testbed/tests/custom_columns/models.py", line 21, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class custom_columns.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: custom_lookups.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: custom_lookups.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/custom_lookups/tests.py", line 11, in <module>
    from .models import Article, Author, MySQLUnixTimestamp
  File "/testbed/tests/custom_lookups/models.py", line 4, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class custom_lookups.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: custom_managers.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: custom_managers.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/custom_managers/tests.py", line 4, in <module>
    from .models import (
  File "/testbed/tests/custom_managers/models.py", line 95, in <module>
    class Person(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class custom_managers.models.Person doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: custom_methods.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: custom_methods.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/custom_methods/tests.py", line 5, in <module>
    from .models import Article
  File "/testbed/tests/custom_methods/models.py", line 12, in <module>
    class Article(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class custom_methods.models.Article doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: custom_pk.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: custom_pk.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/custom_pk/tests.py", line 4, in <module>
    from .models import Bar, Business, Employee, Foo
  File "/testbed/tests/custom_pk/models.py", line 13, in <module>
    class Employee(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class custom_pk.models.Employee doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: datatypes.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: datatypes.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/datatypes/tests.py", line 6, in <module>
    from .models import Donut, RumBaba
  File "/testbed/tests/datatypes/models.py", line 9, in <module>
    class Donut(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class datatypes.models.Donut doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: dates.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: dates.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/dates/tests.py", line 8, in <module>
    from .models import Article, Category, Comment
  File "/testbed/tests/dates/models.py", line 5, in <module>
    class Article(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class dates.models.Article doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: datetimes.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: datetimes.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/datetimes/tests.py", line 6, in <module>
    from .models import Article, Category, Comment
  File "/testbed/tests/datetimes/models.py", line 4, in <module>
    class Article(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class datetimes.models.Article doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.comparison.test_cast (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.comparison.test_cast
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/comparison/test_cast.py", line 11, in <module>
    from ..models import Author, DTModel, Fan, FloatModel
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.comparison.test_coalesce (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.comparison.test_coalesce
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/comparison/test_coalesce.py", line 6, in <module>
    from ..models import Article, Author
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.comparison.test_greatest (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.comparison.test_greatest
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/comparison/test_greatest.py", line 11, in <module>
    from ..models import Article, Author, DecimalModel, Fan
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.comparison.test_least (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.comparison.test_least
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/comparison/test_least.py", line 11, in <module>
    from ..models import Article, Author, DecimalModel, Fan
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.comparison.test_nullif (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.comparison.test_nullif
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/comparison/test_nullif.py", line 8, in <module>
    from ..models import Author
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.datetime.test_extract_trunc (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.datetime.test_extract_trunc
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/datetime/test_extract_trunc.py", line 22, in <module>
    from ..models import Author, DTModel, Fan
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.datetime.test_now (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.datetime.test_now
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/datetime/test_now.py", line 7, in <module>
    from ..models import Article
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.math.test_abs (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.math.test_abs
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/math/test_abs.py", line 8, in <module>
    from ..models import DecimalModel, FloatModel, IntegerModel
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.math.test_acos (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.math.test_acos
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/math/test_acos.py", line 9, in <module>
    from ..models import DecimalModel, FloatModel, IntegerModel
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.math.test_asin (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.math.test_asin
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/math/test_asin.py", line 9, in <module>
    from ..models import DecimalModel, FloatModel, IntegerModel
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.math.test_atan (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.math.test_atan
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/math/test_atan.py", line 9, in <module>
    from ..models import DecimalModel, FloatModel, IntegerModel
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.math.test_atan2 (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.math.test_atan2
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/math/test_atan2.py", line 7, in <module>
    from ..models import DecimalModel, FloatModel, IntegerModel
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.math.test_ceil (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.math.test_ceil
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/math/test_ceil.py", line 9, in <module>
    from ..models import DecimalModel, FloatModel, IntegerModel
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.math.test_cos (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.math.test_cos
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/math/test_cos.py", line 9, in <module>
    from ..models import DecimalModel, FloatModel, IntegerModel
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.math.test_cot (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.math.test_cot
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/math/test_cot.py", line 9, in <module>
    from ..models import DecimalModel, FloatModel, IntegerModel
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.math.test_degrees (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.math.test_degrees
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/math/test_degrees.py", line 9, in <module>
    from ..models import DecimalModel, FloatModel, IntegerModel
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.math.test_exp (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.math.test_exp
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/math/test_exp.py", line 9, in <module>
    from ..models import DecimalModel, FloatModel, IntegerModel
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.math.test_floor (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.math.test_floor
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/math/test_floor.py", line 9, in <module>
    from ..models import DecimalModel, FloatModel, IntegerModel
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.math.test_ln (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.math.test_ln
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/math/test_ln.py", line 9, in <module>
    from ..models import DecimalModel, FloatModel, IntegerModel
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.math.test_log (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.math.test_log
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/math/test_log.py", line 7, in <module>
    from ..models import DecimalModel, FloatModel, IntegerModel
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.math.test_mod (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.math.test_mod
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/math/test_mod.py", line 7, in <module>
    from ..models import DecimalModel, FloatModel, IntegerModel
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.math.test_pi (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.math.test_pi
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/math/test_pi.py", line 6, in <module>
    from ..models import FloatModel
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.math.test_power (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.math.test_power
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/math/test_power.py", line 6, in <module>
    from ..models import DecimalModel, FloatModel, IntegerModel
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.math.test_radians (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.math.test_radians
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/math/test_radians.py", line 9, in <module>
    from ..models import DecimalModel, FloatModel, IntegerModel
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.math.test_round (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.math.test_round
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/math/test_round.py", line 8, in <module>
    from ..models import DecimalModel, FloatModel, IntegerModel
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.math.test_sign (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.math.test_sign
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/math/test_sign.py", line 8, in <module>
    from ..models import DecimalModel, FloatModel, IntegerModel
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.math.test_sin (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.math.test_sin
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/math/test_sin.py", line 9, in <module>
    from ..models import DecimalModel, FloatModel, IntegerModel
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.math.test_sqrt (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.math.test_sqrt
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/math/test_sqrt.py", line 9, in <module>
    from ..models import DecimalModel, FloatModel, IntegerModel
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.math.test_tan (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.math.test_tan
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/math/test_tan.py", line 9, in <module>
    from ..models import DecimalModel, FloatModel, IntegerModel
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/tests.py", line 6, in <module>
    from .models import Author
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.text.test_chr (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.text.test_chr
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/text/test_chr.py", line 6, in <module>
    from ..models import Author
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.text.test_concat (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.text.test_concat
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/text/test_concat.py", line 9, in <module>
    from ..models import Article, Author
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.text.test_left (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.text.test_left
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/text/test_left.py", line 5, in <module>
    from ..models import Author
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.text.test_length (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.text.test_length
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/text/test_length.py", line 6, in <module>
    from ..models import Author
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.text.test_lower (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.text.test_lower
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/text/test_lower.py", line 6, in <module>
    from ..models import Author
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.text.test_md5 (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.text.test_md5
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/text/test_md5.py", line 7, in <module>
    from ..models import Author
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.text.test_ord (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.text.test_ord
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/text/test_ord.py", line 6, in <module>
    from ..models import Author
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.text.test_pad (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.text.test_pad
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/text/test_pad.py", line 6, in <module>
    from ..models import Author
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.text.test_repeat (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.text.test_repeat
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/text/test_repeat.py", line 6, in <module>
    from ..models import Author
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.text.test_replace (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.text.test_replace
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/text/test_replace.py", line 5, in <module>
    from ..models import Author
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.text.test_reverse (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.text.test_reverse
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/text/test_reverse.py", line 7, in <module>
    from ..models import Author
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.text.test_right (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.text.test_right
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/text/test_right.py", line 5, in <module>
    from ..models import Author
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.text.test_sha1 (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.text.test_sha1
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/text/test_sha1.py", line 7, in <module>
    from ..models import Author
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.text.test_sha224 (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.text.test_sha224
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/text/test_sha224.py", line 9, in <module>
    from ..models import Author
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.text.test_sha256 (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.text.test_sha256
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/text/test_sha256.py", line 7, in <module>
    from ..models import Author
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.text.test_sha384 (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.text.test_sha384
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/text/test_sha384.py", line 7, in <module>
    from ..models import Author
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.text.test_sha512 (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.text.test_sha512
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/text/test_sha512.py", line 7, in <module>
    from ..models import Author
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.text.test_strindex (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.text.test_strindex
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/text/test_strindex.py", line 6, in <module>
    from ..models import Article, Author
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.text.test_substr (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.text.test_substr
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/text/test_substr.py", line 5, in <module>
    from ..models import Author
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.text.test_trim (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.text.test_trim
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/text/test_trim.py", line 6, in <module>
    from ..models import Author
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: db_functions.text.test_upper (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: db_functions.text.test_upper
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/db_functions/text/test_upper.py", line 6, in <module>
    from ..models import Author
  File "/testbed/tests/db_functions/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class db_functions.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: defer.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: defer.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/defer/tests.py", line 4, in <module>
    from .models import (
  File "/testbed/tests/defer/models.py", line 8, in <module>
    class Secondary(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class defer.models.Secondary doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: defer_regress.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: defer_regress.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/defer_regress/tests.py", line 9, in <module>
    from .models import (
  File "/testbed/tests/defer_regress/models.py", line 8, in <module>
    class Item(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class defer_regress.models.Item doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: delete.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: delete.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/delete/tests.py", line 9, in <module>
    from .models import (
  File "/testbed/tests/delete/models.py", line 8, in <module>
    class P(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class delete.models.P doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: delete_regress.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: delete_regress.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/delete_regress/tests.py", line 6, in <module>
    from .models import (
  File "/testbed/tests/delete_regress/models.py", line 8, in <module>
    class Award(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class delete_regress.models.Award doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: distinct_on_fields.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: distinct_on_fields.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/distinct_on_fields/tests.py", line 6, in <module>
    from .models import Celebrity, Fan, Staff, StaffTag, Tag
  File "/testbed/tests/distinct_on_fields/models.py", line 4, in <module>
    class Tag(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class distinct_on_fields.models.Tag doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: empty.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: empty.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/empty/tests.py", line 3, in <module>
    from .models import Empty
  File "/testbed/tests/empty/models.py", line 11, in <module>
    class Empty(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class empty.models.Empty doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: expressions.test_deprecation (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: expressions.test_deprecation
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/expressions/test_deprecation.py", line 5, in <module>
    from .models import Employee
  File "/testbed/tests/expressions/models.py", line 9, in <module>
    class Employee(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class expressions.models.Employee doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: expressions.test_queryset_values (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: expressions.test_queryset_values
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/expressions/test_queryset_values.py", line 4, in <module>
    from .models import Company, Employee
  File "/testbed/tests/expressions/models.py", line 9, in <module>
    class Employee(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class expressions.models.Employee doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: expressions.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: expressions.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/expressions/tests.py", line 25, in <module>
    from .models import (
  File "/testbed/tests/expressions/models.py", line 9, in <module>
    class Employee(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class expressions.models.Employee doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: expressions_case.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: expressions_case.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/expressions_case/tests.py", line 15, in <module>
    from .models import CaseTestModel, Client, FKCaseTestModel, O2OCaseTestModel
  File "/testbed/tests/expressions_case/models.py", line 9, in <module>
    class CaseTestModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class expressions_case.models.CaseTestModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: expressions_window.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: expressions_window.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/expressions_window/tests.py", line 16, in <module>
    from .models import Employee
  File "/testbed/tests/expressions_window/models.py", line 4, in <module>
    class Classification(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class expressions_window.models.Classification doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: extra_regress.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: extra_regress.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/extra_regress/tests.py", line 6, in <module>
    from .models import Order, RevisionableModel, TestObject
  File "/testbed/tests/extra_regress/models.py", line 8, in <module>
    class RevisionableModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class extra_regress.models.RevisionableModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: field_defaults.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: field_defaults.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/field_defaults/tests.py", line 5, in <module>
    from .models import Article
  File "/testbed/tests/field_defaults/models.py", line 17, in <module>
    class Article(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class field_defaults.models.Article doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: file_storage.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: file_storage.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/file_storage/tests.py", line 28, in <module>
    from .models import Storage, temp_storage, temp_storage_location
  File "/testbed/tests/file_storage/models.py", line 26, in <module>
    class Storage(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class file_storage.models.Storage doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: file_uploads.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: file_uploads.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/file_uploads/tests.py", line 19, in <module>
    from .models import FileModel
  File "/testbed/tests/file_uploads/models.py", line 4, in <module>
    class FileModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class file_uploads.models.FileModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: filtered_relation.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: filtered_relation.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/filtered_relation/tests.py", line 8, in <module>
    from .models import Author, Book, Borrower, Editor, RentalSession, Reservation
  File "/testbed/tests/filtered_relation/models.py", line 8, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class filtered_relation.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: fixtures.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: fixtures.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/fixtures/tests.py", line 19, in <module>
    from .models import (
  File "/testbed/tests/fixtures/models.py", line 19, in <module>
    class Category(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class fixtures.models.Category doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: fixtures_regress.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: fixtures_regress.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/fixtures_regress/tests.py", line 18, in <module>
    from .models import (
  File "/testbed/tests/fixtures_regress/models.py", line 5, in <module>
    class Animal(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class fixtures_regress.models.Animal doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: flatpages_tests.test_csrf (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: flatpages_tests.test_csrf
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/flatpages_tests/test_csrf.py", line 2, in <module>
    from django.contrib.flatpages.models import FlatPage
  File "/testbed/django/contrib/flatpages/models.py", line 8, in <module>
    class FlatPage(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class django.contrib.flatpages.models.FlatPage doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: flatpages_tests.test_forms (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: flatpages_tests.test_forms
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/flatpages_tests/test_forms.py", line 2, in <module>
    from django.contrib.flatpages.forms import FlatpageForm
  File "/testbed/django/contrib/flatpages/forms.py", line 3, in <module>
    from django.contrib.flatpages.models import FlatPage
  File "/testbed/django/contrib/flatpages/models.py", line 8, in <module>
    class FlatPage(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class django.contrib.flatpages.models.FlatPage doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: flatpages_tests.test_middleware (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: flatpages_tests.test_middleware
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/flatpages_tests/test_middleware.py", line 3, in <module>
    from django.contrib.flatpages.models import FlatPage
  File "/testbed/django/contrib/flatpages/models.py", line 8, in <module>
    class FlatPage(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class django.contrib.flatpages.models.FlatPage doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: flatpages_tests.test_models (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: flatpages_tests.test_models
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/flatpages_tests/test_models.py", line 1, in <module>
    from django.contrib.flatpages.models import FlatPage
  File "/testbed/django/contrib/flatpages/models.py", line 8, in <module>
    class FlatPage(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class django.contrib.flatpages.models.FlatPage doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: flatpages_tests.test_templatetags (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: flatpages_tests.test_templatetags
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/flatpages_tests/test_templatetags.py", line 2, in <module>
    from django.contrib.flatpages.models import FlatPage
  File "/testbed/django/contrib/flatpages/models.py", line 8, in <module>
    class FlatPage(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class django.contrib.flatpages.models.FlatPage doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: flatpages_tests.test_views (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: flatpages_tests.test_views
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/flatpages_tests/test_views.py", line 3, in <module>
    from django.contrib.flatpages.models import FlatPage
  File "/testbed/django/contrib/flatpages/models.py", line 8, in <module>
    class FlatPage(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class django.contrib.flatpages.models.FlatPage doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: force_insert_update.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: force_insert_update.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/force_insert_update/tests.py", line 4, in <module>
    from .models import (
  File "/testbed/tests/force_insert_update/models.py", line 8, in <module>
    class Counter(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class force_insert_update.models.Counter doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: foreign_object.models (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: foreign_object.models
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 462, in _find_test_path
    package = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/foreign_object/models/__init__.py", line 1, in <module>
    from .article import (
  File "/testbed/tests/foreign_object/models/article.py", line 51, in <module>
    class Article(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class foreign_object.models.article.Article doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: foreign_object.test_agnostic_order_trimjoin (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: foreign_object.test_agnostic_order_trimjoin
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/foreign_object/test_agnostic_order_trimjoin.py", line 5, in <module>
    from .models import Address, Contact, Customer
  File "/testbed/tests/foreign_object/models/__init__.py", line 1, in <module>
    from .article import (
  File "/testbed/tests/foreign_object/models/article.py", line 51, in <module>
    class Article(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class foreign_object.models.article.Article doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: foreign_object.test_empty_join (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: foreign_object.test_empty_join
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/foreign_object/test_empty_join.py", line 3, in <module>
    from .models import SlugPage
  File "/testbed/tests/foreign_object/models/__init__.py", line 1, in <module>
    from .article import (
  File "/testbed/tests/foreign_object/models/article.py", line 51, in <module>
    class Article(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class foreign_object.models.article.Article doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: foreign_object.test_forms (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: foreign_object.test_forms
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/foreign_object/test_forms.py", line 6, in <module>
    from .models import Article
  File "/testbed/tests/foreign_object/models/__init__.py", line 1, in <module>
    from .article import (
  File "/testbed/tests/foreign_object/models/article.py", line 51, in <module>
    class Article(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class foreign_object.models.article.Article doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: foreign_object.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: foreign_object.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/foreign_object/tests.py", line 10, in <module>
    from .models import (
  File "/testbed/tests/foreign_object/models/__init__.py", line 1, in <module>
    from .article import (
  File "/testbed/tests/foreign_object/models/article.py", line 51, in <module>
    class Article(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class foreign_object.models.article.Article doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: forms_tests.tests.test_error_messages (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: forms_tests.tests.test_error_messages
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/forms_tests/tests/test_error_messages.py", line 13, in <module>
    from ..models import ChoiceModel
  File "/testbed/tests/forms_tests/models.py", line 18, in <module>
    class BoundaryModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class forms_tests.models.BoundaryModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: forms_tests.tests.test_widgets (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: forms_tests.tests.test_widgets
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/forms_tests/tests/test_widgets.py", line 5, in <module>
    from ..models import Article
  File "/testbed/tests/forms_tests/models.py", line 18, in <module>
    class BoundaryModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class forms_tests.models.BoundaryModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: forms_tests.tests.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: forms_tests.tests.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/forms_tests/tests/tests.py", line 9, in <module>
    from ..models import (
  File "/testbed/tests/forms_tests/models.py", line 18, in <module>
    class BoundaryModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class forms_tests.models.BoundaryModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: from_db_value.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: from_db_value.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/from_db_value/tests.py", line 5, in <module>
    from .models import Cash, CashModel
  File "/testbed/tests/from_db_value/models.py", line 26, in <module>
    class CashModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class from_db_value.models.CashModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: generic_inline_admin.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: generic_inline_admin.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/generic_inline_admin/tests.py", line 13, in <module>
    from .admin import MediaInline, MediaPermanentInline, site as admin_site
  File "/testbed/tests/generic_inline_admin/admin.py", line 4, in <module>
    from .models import (
  File "/testbed/tests/generic_inline_admin/models.py", line 8, in <module>
    class Episode(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class generic_inline_admin.models.Episode doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: generic_relations.test_forms (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: generic_relations.test_forms
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/generic_relations/test_forms.py", line 8, in <module>
    from .models import (
  File "/testbed/tests/generic_relations/models.py", line 19, in <module>
    class TaggedItem(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class generic_relations.models.TaggedItem doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: generic_relations.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: generic_relations.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/generic_relations/tests.py", line 7, in <module>
    from .models import (
  File "/testbed/tests/generic_relations/models.py", line 19, in <module>
    class TaggedItem(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class generic_relations.models.TaggedItem doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: generic_relations_regress.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: generic_relations_regress.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/generic_relations_regress/tests.py", line 6, in <module>
    from .models import (
  File "/testbed/tests/generic_relations_regress/models.py", line 12, in <module>
    class Link(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class generic_relations_regress.models.Link doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: generic_views.test_base (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: generic_views.test_base
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/generic_views/test_base.py", line 10, in <module>
    from . import views
  File "/testbed/tests/generic_views/views.py", line 7, in <module>
    from .forms import AuthorForm, ContactForm
  File "/testbed/tests/generic_views/forms.py", line 3, in <module>
    from .models import Author
  File "/testbed/tests/generic_views/models.py", line 7, in <module>
    class Artist(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class generic_views.models.Artist doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: generic_views.test_dates (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: generic_views.test_dates
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/generic_views/test_dates.py", line 9, in <module>
    from .models import Artist, Author, Book, BookSigning, Page
  File "/testbed/tests/generic_views/models.py", line 7, in <module>
    class Artist(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class generic_views.models.Artist doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: generic_views.test_detail (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: generic_views.test_detail
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/generic_views/test_detail.py", line 10, in <module>
    from .models import Artist, Author, Book, Page
  File "/testbed/tests/generic_views/models.py", line 7, in <module>
    class Artist(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class generic_views.models.Artist doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: generic_views.test_edit (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: generic_views.test_edit
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/generic_views/test_edit.py", line 9, in <module>
    from . import views
  File "/testbed/tests/generic_views/views.py", line 7, in <module>
    from .forms import AuthorForm, ContactForm
  File "/testbed/tests/generic_views/forms.py", line 3, in <module>
    from .models import Author
  File "/testbed/tests/generic_views/models.py", line 7, in <module>
    class Artist(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class generic_views.models.Artist doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: generic_views.test_list (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: generic_views.test_list
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/generic_views/test_list.py", line 7, in <module>
    from .models import Artist, Author, Book, Page
  File "/testbed/tests/generic_views/models.py", line 7, in <module>
    class Artist(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class generic_views.models.Artist doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: get_earliest_or_latest.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: get_earliest_or_latest.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/get_earliest_or_latest/tests.py", line 5, in <module>
    from .models import Article, IndexErrorArticle, Person
  File "/testbed/tests/get_earliest_or_latest/models.py", line 4, in <module>
    class Article(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class get_earliest_or_latest.models.Article doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: get_object_or_404.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: get_object_or_404.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/get_object_or_404/tests.py", line 5, in <module>
    from .models import Article, Author
  File "/testbed/tests/get_object_or_404/models.py", line 16, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class get_object_or_404.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: get_or_create.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: get_or_create.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/get_or_create/tests.py", line 11, in <module>
    from .models import (
  File "/testbed/tests/get_or_create/models.py", line 4, in <module>
    class Person(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class get_or_create.models.Person doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: gis_tests.distapp.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: gis_tests.distapp.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/gis_tests/distapp/tests.py", line 3, in <module>
    from django.contrib.gis.db.models.functions import (
  File "/testbed/django/contrib/gis/db/models/__init__.py", line 3, in <module>
    import django.contrib.gis.db.models.functions  # NOQA
  File "/testbed/django/contrib/gis/db/models/functions.py", line 3, in <module>
    from django.contrib.gis.db.models.fields import BaseSpatialField, GeometryField
  File "/testbed/django/contrib/gis/db/models/fields.py", line 3, in <module>
    from django.contrib.gis import forms, gdal
  File "/testbed/django/contrib/gis/forms/__init__.py", line 3, in <module>
    from .fields import (  # NOQA
  File "/testbed/django/contrib/gis/forms/fields.py", line 2, in <module>
    from django.contrib.gis.gdal import GDALException
  File "/testbed/django/contrib/gis/gdal/__init__.py", line 28, in <module>
    from django.contrib.gis.gdal.datasource import DataSource
  File "/testbed/django/contrib/gis/gdal/datasource.py", line 39, in <module>
    from django.contrib.gis.gdal.driver import Driver
  File "/testbed/django/contrib/gis/gdal/driver.py", line 5, in <module>
    from django.contrib.gis.gdal.prototypes import ds as vcapi, raster as rcapi
  File "/testbed/django/contrib/gis/gdal/prototypes/ds.py", line 9, in <module>
    from django.contrib.gis.gdal.libgdal import GDAL_VERSION, lgdal
  File "/testbed/django/contrib/gis/gdal/libgdal.py", line 42, in <module>
    % '", "'.join(lib_names)
django.core.exceptions.ImproperlyConfigured: Could not find the GDAL library (tried "gdal", "GDAL", "gdal2.4.0", "gdal2.3.0", "gdal2.2.0", "gdal2.1.0", "gdal2.0.0"). Is GDAL installed? If it is, try setting GDAL_LIBRARY_PATH in your settings.


======================================================================
ERROR: gis_tests.gdal_tests.test_driver (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: gis_tests.gdal_tests.test_driver
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/gis_tests/gdal_tests/test_driver.py", line 4, in <module>
    from django.contrib.gis.gdal import Driver, GDALException
  File "/testbed/django/contrib/gis/gdal/__init__.py", line 28, in <module>
    from django.contrib.gis.gdal.datasource import DataSource
  File "/testbed/django/contrib/gis/gdal/datasource.py", line 39, in <module>
    from django.contrib.gis.gdal.driver import Driver
  File "/testbed/django/contrib/gis/gdal/driver.py", line 5, in <module>
    from django.contrib.gis.gdal.prototypes import ds as vcapi, raster as rcapi
  File "/testbed/django/contrib/gis/gdal/prototypes/ds.py", line 9, in <module>
    from django.contrib.gis.gdal.libgdal import GDAL_VERSION, lgdal
  File "/testbed/django/contrib/gis/gdal/libgdal.py", line 42, in <module>
    % '", "'.join(lib_names)
django.core.exceptions.ImproperlyConfigured: Could not find the GDAL library (tried "gdal", "GDAL", "gdal2.4.0", "gdal2.3.0", "gdal2.2.0", "gdal2.1.0", "gdal2.0.0"). Is GDAL installed? If it is, try setting GDAL_LIBRARY_PATH in your settings.


======================================================================
ERROR: gis_tests.gdal_tests.test_ds (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: gis_tests.gdal_tests.test_ds
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/gis_tests/gdal_tests/test_ds.py", line 5, in <module>
    from django.contrib.gis.gdal import (
  File "/testbed/django/contrib/gis/gdal/__init__.py", line 28, in <module>
    from django.contrib.gis.gdal.datasource import DataSource
  File "/testbed/django/contrib/gis/gdal/datasource.py", line 39, in <module>
    from django.contrib.gis.gdal.driver import Driver
  File "/testbed/django/contrib/gis/gdal/driver.py", line 5, in <module>
    from django.contrib.gis.gdal.prototypes import ds as vcapi, raster as rcapi
  File "/testbed/django/contrib/gis/gdal/prototypes/ds.py", line 9, in <module>
    from django.contrib.gis.gdal.libgdal import GDAL_VERSION, lgdal
  File "/testbed/django/contrib/gis/gdal/libgdal.py", line 42, in <module>
    % '", "'.join(lib_names)
django.core.exceptions.ImproperlyConfigured: Could not find the GDAL library (tried "gdal", "GDAL", "gdal2.4.0", "gdal2.3.0", "gdal2.2.0", "gdal2.1.0", "gdal2.0.0"). Is GDAL installed? If it is, try setting GDAL_LIBRARY_PATH in your settings.


======================================================================
ERROR: gis_tests.gdal_tests.test_envelope (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: gis_tests.gdal_tests.test_envelope
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/gis_tests/gdal_tests/test_envelope.py", line 3, in <module>
    from django.contrib.gis.gdal import Envelope, GDALException
  File "/testbed/django/contrib/gis/gdal/__init__.py", line 28, in <module>
    from django.contrib.gis.gdal.datasource import DataSource
  File "/testbed/django/contrib/gis/gdal/datasource.py", line 39, in <module>
    from django.contrib.gis.gdal.driver import Driver
  File "/testbed/django/contrib/gis/gdal/driver.py", line 5, in <module>
    from django.contrib.gis.gdal.prototypes import ds as vcapi, raster as rcapi
  File "/testbed/django/contrib/gis/gdal/prototypes/ds.py", line 9, in <module>
    from django.contrib.gis.gdal.libgdal import GDAL_VERSION, lgdal
  File "/testbed/django/contrib/gis/gdal/libgdal.py", line 42, in <module>
    % '", "'.join(lib_names)
django.core.exceptions.ImproperlyConfigured: Could not find the GDAL library (tried "gdal", "GDAL", "gdal2.4.0", "gdal2.3.0", "gdal2.2.0", "gdal2.1.0", "gdal2.0.0"). Is GDAL installed? If it is, try setting GDAL_LIBRARY_PATH in your settings.


======================================================================
ERROR: gis_tests.gdal_tests.test_geom (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: gis_tests.gdal_tests.test_geom
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/gis_tests/gdal_tests/test_geom.py", line 4, in <module>
    from django.contrib.gis.gdal import (
  File "/testbed/django/contrib/gis/gdal/__init__.py", line 28, in <module>
    from django.contrib.gis.gdal.datasource import DataSource
  File "/testbed/django/contrib/gis/gdal/datasource.py", line 39, in <module>
    from django.contrib.gis.gdal.driver import Driver
  File "/testbed/django/contrib/gis/gdal/driver.py", line 5, in <module>
    from django.contrib.gis.gdal.prototypes import ds as vcapi, raster as rcapi
  File "/testbed/django/contrib/gis/gdal/prototypes/ds.py", line 9, in <module>
    from django.contrib.gis.gdal.libgdal import GDAL_VERSION, lgdal
  File "/testbed/django/contrib/gis/gdal/libgdal.py", line 42, in <module>
    % '", "'.join(lib_names)
django.core.exceptions.ImproperlyConfigured: Could not find the GDAL library (tried "gdal", "GDAL", "gdal2.4.0", "gdal2.3.0", "gdal2.2.0", "gdal2.1.0", "gdal2.0.0"). Is GDAL installed? If it is, try setting GDAL_LIBRARY_PATH in your settings.


======================================================================
ERROR: gis_tests.gdal_tests.test_raster (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: gis_tests.gdal_tests.test_raster
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/gis_tests/gdal_tests/test_raster.py", line 6, in <module>
    from django.contrib.gis.gdal import GDAL_VERSION, GDALRaster
  File "/testbed/django/contrib/gis/gdal/__init__.py", line 28, in <module>
    from django.contrib.gis.gdal.datasource import DataSource
  File "/testbed/django/contrib/gis/gdal/datasource.py", line 39, in <module>
    from django.contrib.gis.gdal.driver import Driver
  File "/testbed/django/contrib/gis/gdal/driver.py", line 5, in <module>
    from django.contrib.gis.gdal.prototypes import ds as vcapi, raster as rcapi
  File "/testbed/django/contrib/gis/gdal/prototypes/ds.py", line 9, in <module>
    from django.contrib.gis.gdal.libgdal import GDAL_VERSION, lgdal
  File "/testbed/django/contrib/gis/gdal/libgdal.py", line 42, in <module>
    % '", "'.join(lib_names)
django.core.exceptions.ImproperlyConfigured: Could not find the GDAL library (tried "gdal", "GDAL", "gdal2.4.0", "gdal2.3.0", "gdal2.2.0", "gdal2.1.0", "gdal2.0.0"). Is GDAL installed? If it is, try setting GDAL_LIBRARY_PATH in your settings.


======================================================================
ERROR: gis_tests.gdal_tests.test_srs (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: gis_tests.gdal_tests.test_srs
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/gis_tests/gdal_tests/test_srs.py", line 3, in <module>
    from django.contrib.gis.gdal import (
  File "/testbed/django/contrib/gis/gdal/__init__.py", line 28, in <module>
    from django.contrib.gis.gdal.datasource import DataSource
  File "/testbed/django/contrib/gis/gdal/datasource.py", line 39, in <module>
    from django.contrib.gis.gdal.driver import Driver
  File "/testbed/django/contrib/gis/gdal/driver.py", line 5, in <module>
    from django.contrib.gis.gdal.prototypes import ds as vcapi, raster as rcapi
  File "/testbed/django/contrib/gis/gdal/prototypes/ds.py", line 9, in <module>
    from django.contrib.gis.gdal.libgdal import GDAL_VERSION, lgdal
  File "/testbed/django/contrib/gis/gdal/libgdal.py", line 42, in <module>
    % '", "'.join(lib_names)
django.core.exceptions.ImproperlyConfigured: Could not find the GDAL library (tried "gdal", "GDAL", "gdal2.4.0", "gdal2.3.0", "gdal2.2.0", "gdal2.1.0", "gdal2.0.0"). Is GDAL installed? If it is, try setting GDAL_LIBRARY_PATH in your settings.


======================================================================
ERROR: gis_tests.geo3d.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: gis_tests.geo3d.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/gis_tests/geo3d/tests.py", line 4, in <module>
    from django.contrib.gis.db.models import Extent3D, Union
  File "/testbed/django/contrib/gis/db/models/__init__.py", line 3, in <module>
    import django.contrib.gis.db.models.functions  # NOQA
  File "/testbed/django/contrib/gis/db/models/functions.py", line 3, in <module>
    from django.contrib.gis.db.models.fields import BaseSpatialField, GeometryField
  File "/testbed/django/contrib/gis/db/models/fields.py", line 3, in <module>
    from django.contrib.gis import forms, gdal
  File "/testbed/django/contrib/gis/forms/__init__.py", line 3, in <module>
    from .fields import (  # NOQA
  File "/testbed/django/contrib/gis/forms/fields.py", line 2, in <module>
    from django.contrib.gis.gdal import GDALException
  File "/testbed/django/contrib/gis/gdal/__init__.py", line 28, in <module>
    from django.contrib.gis.gdal.datasource import DataSource
  File "/testbed/django/contrib/gis/gdal/datasource.py", line 39, in <module>
    from django.contrib.gis.gdal.driver import Driver
  File "/testbed/django/contrib/gis/gdal/driver.py", line 5, in <module>
    from django.contrib.gis.gdal.prototypes import ds as vcapi, raster as rcapi
  File "/testbed/django/contrib/gis/gdal/prototypes/ds.py", line 9, in <module>
    from django.contrib.gis.gdal.libgdal import GDAL_VERSION, lgdal
  File "/testbed/django/contrib/gis/gdal/libgdal.py", line 42, in <module>
    % '", "'.join(lib_names)
django.core.exceptions.ImproperlyConfigured: Could not find the GDAL library (tried "gdal", "GDAL", "gdal2.4.0", "gdal2.3.0", "gdal2.2.0", "gdal2.1.0", "gdal2.0.0"). Is GDAL installed? If it is, try setting GDAL_LIBRARY_PATH in your settings.


======================================================================
ERROR: gis_tests.geoadmin.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: gis_tests.geoadmin.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/gis_tests/geoadmin/tests.py", line 1, in <module>
    from django.contrib.gis import admin
  File "/testbed/django/contrib/gis/admin/__init__.py", line 5, in <module>
    from django.contrib.gis.admin.options import GeoModelAdmin, OSMGeoAdmin
  File "/testbed/django/contrib/gis/admin/options.py", line 2, in <module>
    from django.contrib.gis.admin.widgets import OpenLayersWidget
  File "/testbed/django/contrib/gis/admin/widgets.py", line 3, in <module>
    from django.contrib.gis.gdal import GDALException
  File "/testbed/django/contrib/gis/gdal/__init__.py", line 28, in <module>
    from django.contrib.gis.gdal.datasource import DataSource
  File "/testbed/django/contrib/gis/gdal/datasource.py", line 39, in <module>
    from django.contrib.gis.gdal.driver import Driver
  File "/testbed/django/contrib/gis/gdal/driver.py", line 5, in <module>
    from django.contrib.gis.gdal.prototypes import ds as vcapi, raster as rcapi
  File "/testbed/django/contrib/gis/gdal/prototypes/ds.py", line 9, in <module>
    from django.contrib.gis.gdal.libgdal import GDAL_VERSION, lgdal
  File "/testbed/django/contrib/gis/gdal/libgdal.py", line 42, in <module>
    % '", "'.join(lib_names)
django.core.exceptions.ImproperlyConfigured: Could not find the GDAL library (tried "gdal", "GDAL", "gdal2.4.0", "gdal2.3.0", "gdal2.2.0", "gdal2.1.0", "gdal2.0.0"). Is GDAL installed? If it is, try setting GDAL_LIBRARY_PATH in your settings.


======================================================================
ERROR: gis_tests.geoapp.test_expressions (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: gis_tests.geoapp.test_expressions
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/gis_tests/geoapp/test_expressions.py", line 3, in <module>
    from django.contrib.gis.db.models import F, GeometryField, Value, functions
  File "/testbed/django/contrib/gis/db/models/__init__.py", line 3, in <module>
    import django.contrib.gis.db.models.functions  # NOQA
  File "/testbed/django/contrib/gis/db/models/functions.py", line 3, in <module>
    from django.contrib.gis.db.models.fields import BaseSpatialField, GeometryField
  File "/testbed/django/contrib/gis/db/models/fields.py", line 3, in <module>
    from django.contrib.gis import forms, gdal
  File "/testbed/django/contrib/gis/forms/__init__.py", line 3, in <module>
    from .fields import (  # NOQA
  File "/testbed/django/contrib/gis/forms/fields.py", line 2, in <module>
    from django.contrib.gis.gdal import GDALException
  File "/testbed/django/contrib/gis/gdal/__init__.py", line 28, in <module>
    from django.contrib.gis.gdal.datasource import DataSource
  File "/testbed/django/contrib/gis/gdal/datasource.py", line 39, in <module>
    from django.contrib.gis.gdal.driver import Driver
  File "/testbed/django/contrib/gis/gdal/driver.py", line 5, in <module>
    from django.contrib.gis.gdal.prototypes import ds as vcapi, raster as rcapi
  File "/testbed/django/contrib/gis/gdal/prototypes/ds.py", line 9, in <module>
    from django.contrib.gis.gdal.libgdal import GDAL_VERSION, lgdal
  File "/testbed/django/contrib/gis/gdal/libgdal.py", line 42, in <module>
    % '", "'.join(lib_names)
django.core.exceptions.ImproperlyConfigured: Could not find the GDAL library (tried "gdal", "GDAL", "gdal2.4.0", "gdal2.3.0", "gdal2.2.0", "gdal2.1.0", "gdal2.0.0"). Is GDAL installed? If it is, try setting GDAL_LIBRARY_PATH in your settings.


======================================================================
ERROR: gis_tests.geoapp.test_feeds (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: gis_tests.geoapp.test_feeds
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/gis_tests/geoapp/test_feeds.py", line 7, in <module>
    from .models import City
  File "/testbed/tests/gis_tests/geoapp/models.py", line 1, in <module>
    from django.contrib.gis.db import models
  File "/testbed/django/contrib/gis/db/models/__init__.py", line 3, in <module>
    import django.contrib.gis.db.models.functions  # NOQA
  File "/testbed/django/contrib/gis/db/models/functions.py", line 3, in <module>
    from django.contrib.gis.db.models.fields import BaseSpatialField, GeometryField
  File "/testbed/django/contrib/gis/db/models/fields.py", line 3, in <module>
    from django.contrib.gis import forms, gdal
  File "/testbed/django/contrib/gis/forms/__init__.py", line 3, in <module>
    from .fields import (  # NOQA
  File "/testbed/django/contrib/gis/forms/fields.py", line 2, in <module>
    from django.contrib.gis.gdal import GDALException
  File "/testbed/django/contrib/gis/gdal/__init__.py", line 28, in <module>
    from django.contrib.gis.gdal.datasource import DataSource
  File "/testbed/django/contrib/gis/gdal/datasource.py", line 39, in <module>
    from django.contrib.gis.gdal.driver import Driver
  File "/testbed/django/contrib/gis/gdal/driver.py", line 5, in <module>
    from django.contrib.gis.gdal.prototypes import ds as vcapi, raster as rcapi
  File "/testbed/django/contrib/gis/gdal/prototypes/ds.py", line 9, in <module>
    from django.contrib.gis.gdal.libgdal import GDAL_VERSION, lgdal
  File "/testbed/django/contrib/gis/gdal/libgdal.py", line 42, in <module>
    % '", "'.join(lib_names)
django.core.exceptions.ImproperlyConfigured: Could not find the GDAL library (tried "gdal", "GDAL", "gdal2.4.0", "gdal2.3.0", "gdal2.2.0", "gdal2.1.0", "gdal2.0.0"). Is GDAL installed? If it is, try setting GDAL_LIBRARY_PATH in your settings.


======================================================================
ERROR: gis_tests.geoapp.test_functions (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: gis_tests.geoapp.test_functions
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/gis_tests/geoapp/test_functions.py", line 6, in <module>
    from django.contrib.gis.db.models import GeometryField, PolygonField, functions
  File "/testbed/django/contrib/gis/db/models/__init__.py", line 3, in <module>
    import django.contrib.gis.db.models.functions  # NOQA
  File "/testbed/django/contrib/gis/db/models/functions.py", line 3, in <module>
    from django.contrib.gis.db.models.fields import BaseSpatialField, GeometryField
  File "/testbed/django/contrib/gis/db/models/fields.py", line 3, in <module>
    from django.contrib.gis import forms, gdal
  File "/testbed/django/contrib/gis/forms/__init__.py", line 3, in <module>
    from .fields import (  # NOQA
  File "/testbed/django/contrib/gis/forms/fields.py", line 2, in <module>
    from django.contrib.gis.gdal import GDALException
  File "/testbed/django/contrib/gis/gdal/__init__.py", line 28, in <module>
    from django.contrib.gis.gdal.datasource import DataSource
  File "/testbed/django/contrib/gis/gdal/datasource.py", line 39, in <module>
    from django.contrib.gis.gdal.driver import Driver
  File "/testbed/django/contrib/gis/gdal/driver.py", line 5, in <module>
    from django.contrib.gis.gdal.prototypes import ds as vcapi, raster as rcapi
  File "/testbed/django/contrib/gis/gdal/prototypes/ds.py", line 9, in <module>
    from django.contrib.gis.gdal.libgdal import GDAL_VERSION, lgdal
  File "/testbed/django/contrib/gis/gdal/libgdal.py", line 42, in <module>
    % '", "'.join(lib_names)
django.core.exceptions.ImproperlyConfigured: Could not find the GDAL library (tried "gdal", "GDAL", "gdal2.4.0", "gdal2.3.0", "gdal2.2.0", "gdal2.1.0", "gdal2.0.0"). Is GDAL installed? If it is, try setting GDAL_LIBRARY_PATH in your settings.


======================================================================
ERROR: gis_tests.geoapp.test_indexes (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: gis_tests.geoapp.test_indexes
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/gis_tests/geoapp/test_indexes.py", line 8, in <module>
    from .models import City
  File "/testbed/tests/gis_tests/geoapp/models.py", line 1, in <module>
    from django.contrib.gis.db import models
  File "/testbed/django/contrib/gis/db/models/__init__.py", line 3, in <module>
    import django.contrib.gis.db.models.functions  # NOQA
  File "/testbed/django/contrib/gis/db/models/functions.py", line 3, in <module>
    from django.contrib.gis.db.models.fields import BaseSpatialField, GeometryField
  File "/testbed/django/contrib/gis/db/models/fields.py", line 3, in <module>
    from django.contrib.gis import forms, gdal
  File "/testbed/django/contrib/gis/forms/__init__.py", line 3, in <module>
    from .fields import (  # NOQA
  File "/testbed/django/contrib/gis/forms/fields.py", line 2, in <module>
    from django.contrib.gis.gdal import GDALException
  File "/testbed/django/contrib/gis/gdal/__init__.py", line 28, in <module>
    from django.contrib.gis.gdal.datasource import DataSource
  File "/testbed/django/contrib/gis/gdal/datasource.py", line 39, in <module>
    from django.contrib.gis.gdal.driver import Driver
  File "/testbed/django/contrib/gis/gdal/driver.py", line 5, in <module>
    from django.contrib.gis.gdal.prototypes import ds as vcapi, raster as rcapi
  File "/testbed/django/contrib/gis/gdal/prototypes/ds.py", line 9, in <module>
    from django.contrib.gis.gdal.libgdal import GDAL_VERSION, lgdal
  File "/testbed/django/contrib/gis/gdal/libgdal.py", line 42, in <module>
    % '", "'.join(lib_names)
django.core.exceptions.ImproperlyConfigured: Could not find the GDAL library (tried "gdal", "GDAL", "gdal2.4.0", "gdal2.3.0", "gdal2.2.0", "gdal2.1.0", "gdal2.0.0"). Is GDAL installed? If it is, try setting GDAL_LIBRARY_PATH in your settings.


======================================================================
ERROR: gis_tests.geoapp.test_regress (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: gis_tests.geoapp.test_regress
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/gis_tests/geoapp/test_regress.py", line 3, in <module>
    from django.contrib.gis.db.models import Extent
  File "/testbed/django/contrib/gis/db/models/__init__.py", line 3, in <module>
    import django.contrib.gis.db.models.functions  # NOQA
  File "/testbed/django/contrib/gis/db/models/functions.py", line 3, in <module>
    from django.contrib.gis.db.models.fields import BaseSpatialField, GeometryField
  File "/testbed/django/contrib/gis/db/models/fields.py", line 3, in <module>
    from django.contrib.gis import forms, gdal
  File "/testbed/django/contrib/gis/forms/__init__.py", line 3, in <module>
    from .fields import (  # NOQA
  File "/testbed/django/contrib/gis/forms/fields.py", line 2, in <module>
    from django.contrib.gis.gdal import GDALException
  File "/testbed/django/contrib/gis/gdal/__init__.py", line 28, in <module>
    from django.contrib.gis.gdal.datasource import DataSource
  File "/testbed/django/contrib/gis/gdal/datasource.py", line 39, in <module>
    from django.contrib.gis.gdal.driver import Driver
  File "/testbed/django/contrib/gis/gdal/driver.py", line 5, in <module>
    from django.contrib.gis.gdal.prototypes import ds as vcapi, raster as rcapi
  File "/testbed/django/contrib/gis/gdal/prototypes/ds.py", line 9, in <module>
    from django.contrib.gis.gdal.libgdal import GDAL_VERSION, lgdal
  File "/testbed/django/contrib/gis/gdal/libgdal.py", line 42, in <module>
    % '", "'.join(lib_names)
django.core.exceptions.ImproperlyConfigured: Could not find the GDAL library (tried "gdal", "GDAL", "gdal2.4.0", "gdal2.3.0", "gdal2.2.0", "gdal2.1.0", "gdal2.0.0"). Is GDAL installed? If it is, try setting GDAL_LIBRARY_PATH in your settings.


======================================================================
ERROR: gis_tests.geoapp.test_serializers (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: gis_tests.geoapp.test_serializers
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/gis_tests/geoapp/test_serializers.py", line 3, in <module>
    from django.contrib.gis.geos import LinearRing, Point, Polygon
  File "/testbed/django/contrib/gis/geos/__init__.py", line 5, in <module>
    from .collections import (  # NOQA
  File "/testbed/django/contrib/gis/geos/collections.py", line 8, in <module>
    from django.contrib.gis.geos.geometry import GEOSGeometry, LinearGeometryMixin
  File "/testbed/django/contrib/gis/geos/geometry.py", line 8, in <module>
    from django.contrib.gis import gdal
  File "/testbed/django/contrib/gis/gdal/__init__.py", line 28, in <module>
    from django.contrib.gis.gdal.datasource import DataSource
  File "/testbed/django/contrib/gis/gdal/datasource.py", line 39, in <module>
    from django.contrib.gis.gdal.driver import Driver
  File "/testbed/django/contrib/gis/gdal/driver.py", line 5, in <module>
    from django.contrib.gis.gdal.prototypes import ds as vcapi, raster as rcapi
  File "/testbed/django/contrib/gis/gdal/prototypes/ds.py", line 9, in <module>
    from django.contrib.gis.gdal.libgdal import GDAL_VERSION, lgdal
  File "/testbed/django/contrib/gis/gdal/libgdal.py", line 42, in <module>
    % '", "'.join(lib_names)
django.core.exceptions.ImproperlyConfigured: Could not find the GDAL library (tried "gdal", "GDAL", "gdal2.4.0", "gdal2.3.0", "gdal2.2.0", "gdal2.1.0", "gdal2.0.0"). Is GDAL installed? If it is, try setting GDAL_LIBRARY_PATH in your settings.


======================================================================
ERROR: gis_tests.geoapp.test_sitemaps (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: gis_tests.geoapp.test_sitemaps
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/gis_tests/geoapp/test_sitemaps.py", line 9, in <module>
    from .models import City, Country
  File "/testbed/tests/gis_tests/geoapp/models.py", line 1, in <module>
    from django.contrib.gis.db import models
  File "/testbed/django/contrib/gis/db/models/__init__.py", line 3, in <module>
    import django.contrib.gis.db.models.functions  # NOQA
  File "/testbed/django/contrib/gis/db/models/functions.py", line 3, in <module>
    from django.contrib.gis.db.models.fields import BaseSpatialField, GeometryField
  File "/testbed/django/contrib/gis/db/models/fields.py", line 3, in <module>
    from django.contrib.gis import forms, gdal
  File "/testbed/django/contrib/gis/forms/__init__.py", line 3, in <module>
    from .fields import (  # NOQA
  File "/testbed/django/contrib/gis/forms/fields.py", line 2, in <module>
    from django.contrib.gis.gdal import GDALException
  File "/testbed/django/contrib/gis/gdal/__init__.py", line 28, in <module>
    from django.contrib.gis.gdal.datasource import DataSource
  File "/testbed/django/contrib/gis/gdal/datasource.py", line 39, in <module>
    from django.contrib.gis.gdal.driver import Driver
  File "/testbed/django/contrib/gis/gdal/driver.py", line 5, in <module>
    from django.contrib.gis.gdal.prototypes import ds as vcapi, raster as rcapi
  File "/testbed/django/contrib/gis/gdal/prototypes/ds.py", line 9, in <module>
    from django.contrib.gis.gdal.libgdal import GDAL_VERSION, lgdal
  File "/testbed/django/contrib/gis/gdal/libgdal.py", line 42, in <module>
    % '", "'.join(lib_names)
django.core.exceptions.ImproperlyConfigured: Could not find the GDAL library (tried "gdal", "GDAL", "gdal2.4.0", "gdal2.3.0", "gdal2.2.0", "gdal2.1.0", "gdal2.0.0"). Is GDAL installed? If it is, try setting GDAL_LIBRARY_PATH in your settings.


======================================================================
ERROR: gis_tests.geoapp.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: gis_tests.geoapp.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/gis_tests/geoapp/tests.py", line 5, in <module>
    from django.contrib.gis import gdal
  File "/testbed/django/contrib/gis/gdal/__init__.py", line 28, in <module>
    from django.contrib.gis.gdal.datasource import DataSource
  File "/testbed/django/contrib/gis/gdal/datasource.py", line 39, in <module>
    from django.contrib.gis.gdal.driver import Driver
  File "/testbed/django/contrib/gis/gdal/driver.py", line 5, in <module>
    from django.contrib.gis.gdal.prototypes import ds as vcapi, raster as rcapi
  File "/testbed/django/contrib/gis/gdal/prototypes/ds.py", line 9, in <module>
    from django.contrib.gis.gdal.libgdal import GDAL_VERSION, lgdal
  File "/testbed/django/contrib/gis/gdal/libgdal.py", line 42, in <module>
    % '", "'.join(lib_names)
django.core.exceptions.ImproperlyConfigured: Could not find the GDAL library (tried "gdal", "GDAL", "gdal2.4.0", "gdal2.3.0", "gdal2.2.0", "gdal2.1.0", "gdal2.0.0"). Is GDAL installed? If it is, try setting GDAL_LIBRARY_PATH in your settings.


======================================================================
ERROR: gis_tests.geogapp.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: gis_tests.geogapp.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/gis_tests/geogapp/tests.py", line 7, in <module>
    from django.contrib.gis.db import models
  File "/testbed/django/contrib/gis/db/models/__init__.py", line 3, in <module>
    import django.contrib.gis.db.models.functions  # NOQA
  File "/testbed/django/contrib/gis/db/models/functions.py", line 3, in <module>
    from django.contrib.gis.db.models.fields import BaseSpatialField, GeometryField
  File "/testbed/django/contrib/gis/db/models/fields.py", line 3, in <module>
    from django.contrib.gis import forms, gdal
  File "/testbed/django/contrib/gis/forms/__init__.py", line 3, in <module>
    from .fields import (  # NOQA
  File "/testbed/django/contrib/gis/forms/fields.py", line 2, in <module>
    from django.contrib.gis.gdal import GDALException
  File "/testbed/django/contrib/gis/gdal/__init__.py", line 28, in <module>
    from django.contrib.gis.gdal.datasource import DataSource
  File "/testbed/django/contrib/gis/gdal/datasource.py", line 39, in <module>
    from django.contrib.gis.gdal.driver import Driver
  File "/testbed/django/contrib/gis/gdal/driver.py", line 5, in <module>
    from django.contrib.gis.gdal.prototypes import ds as vcapi, raster as rcapi
  File "/testbed/django/contrib/gis/gdal/prototypes/ds.py", line 9, in <module>
    from django.contrib.gis.gdal.libgdal import GDAL_VERSION, lgdal
  File "/testbed/django/contrib/gis/gdal/libgdal.py", line 42, in <module>
    % '", "'.join(lib_names)
django.core.exceptions.ImproperlyConfigured: Could not find the GDAL library (tried "gdal", "GDAL", "gdal2.4.0", "gdal2.3.0", "gdal2.2.0", "gdal2.1.0", "gdal2.0.0"). Is GDAL installed? If it is, try setting GDAL_LIBRARY_PATH in your settings.


======================================================================
ERROR: gis_tests.geos_tests.test_coordseq (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: gis_tests.geos_tests.test_coordseq
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/gis_tests/geos_tests/test_coordseq.py", line 1, in <module>
    from django.contrib.gis.geos import LineString
  File "/testbed/django/contrib/gis/geos/__init__.py", line 5, in <module>
    from .collections import (  # NOQA
  File "/testbed/django/contrib/gis/geos/collections.py", line 8, in <module>
    from django.contrib.gis.geos.geometry import GEOSGeometry, LinearGeometryMixin
  File "/testbed/django/contrib/gis/geos/geometry.py", line 8, in <module>
    from django.contrib.gis import gdal
  File "/testbed/django/contrib/gis/gdal/__init__.py", line 28, in <module>
    from django.contrib.gis.gdal.datasource import DataSource
  File "/testbed/django/contrib/gis/gdal/datasource.py", line 39, in <module>
    from django.contrib.gis.gdal.driver import Driver
  File "/testbed/django/contrib/gis/gdal/driver.py", line 5, in <module>
    from django.contrib.gis.gdal.prototypes import ds as vcapi, raster as rcapi
  File "/testbed/django/contrib/gis/gdal/prototypes/ds.py", line 9, in <module>
    from django.contrib.gis.gdal.libgdal import GDAL_VERSION, lgdal
  File "/testbed/django/contrib/gis/gdal/libgdal.py", line 42, in <module>
    % '", "'.join(lib_names)
django.core.exceptions.ImproperlyConfigured: Could not find the GDAL library (tried "gdal", "GDAL", "gdal2.4.0", "gdal2.3.0", "gdal2.2.0", "gdal2.1.0", "gdal2.0.0"). Is GDAL installed? If it is, try setting GDAL_LIBRARY_PATH in your settings.


======================================================================
ERROR: gis_tests.geos_tests.test_geos (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: gis_tests.geos_tests.test_geos
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/gis_tests/geos_tests/test_geos.py", line 10, in <module>
    from django.contrib.gis import gdal
  File "/testbed/django/contrib/gis/gdal/__init__.py", line 28, in <module>
    from django.contrib.gis.gdal.datasource import DataSource
  File "/testbed/django/contrib/gis/gdal/datasource.py", line 39, in <module>
    from django.contrib.gis.gdal.driver import Driver
  File "/testbed/django/contrib/gis/gdal/driver.py", line 5, in <module>
    from django.contrib.gis.gdal.prototypes import ds as vcapi, raster as rcapi
  File "/testbed/django/contrib/gis/gdal/prototypes/ds.py", line 9, in <module>
    from django.contrib.gis.gdal.libgdal import GDAL_VERSION, lgdal
  File "/testbed/django/contrib/gis/gdal/libgdal.py", line 42, in <module>
    % '", "'.join(lib_names)
django.core.exceptions.ImproperlyConfigured: Could not find the GDAL library (tried "gdal", "GDAL", "gdal2.4.0", "gdal2.3.0", "gdal2.2.0", "gdal2.1.0", "gdal2.0.0"). Is GDAL installed? If it is, try setting GDAL_LIBRARY_PATH in your settings.


======================================================================
ERROR: gis_tests.geos_tests.test_geos_mutation (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: gis_tests.geos_tests.test_geos_mutation
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/gis_tests/geos_tests/test_geos_mutation.py", line 7, in <module>
    from django.contrib.gis.geos import (
  File "/testbed/django/contrib/gis/geos/__init__.py", line 5, in <module>
    from .collections import (  # NOQA
  File "/testbed/django/contrib/gis/geos/collections.py", line 8, in <module>
    from django.contrib.gis.geos.geometry import GEOSGeometry, LinearGeometryMixin
  File "/testbed/django/contrib/gis/geos/geometry.py", line 8, in <module>
    from django.contrib.gis import gdal
  File "/testbed/django/contrib/gis/gdal/__init__.py", line 28, in <module>
    from django.contrib.gis.gdal.datasource import DataSource
  File "/testbed/django/contrib/gis/gdal/datasource.py", line 39, in <module>
    from django.contrib.gis.gdal.driver import Driver
  File "/testbed/django/contrib/gis/gdal/driver.py", line 5, in <module>
    from django.contrib.gis.gdal.prototypes import ds as vcapi, raster as rcapi
  File "/testbed/django/contrib/gis/gdal/prototypes/ds.py", line 9, in <module>
    from django.contrib.gis.gdal.libgdal import GDAL_VERSION, lgdal
  File "/testbed/django/contrib/gis/gdal/libgdal.py", line 42, in <module>
    % '", "'.join(lib_names)
django.core.exceptions.ImproperlyConfigured: Could not find the GDAL library (tried "gdal", "GDAL", "gdal2.4.0", "gdal2.3.0", "gdal2.2.0", "gdal2.1.0", "gdal2.0.0"). Is GDAL installed? If it is, try setting GDAL_LIBRARY_PATH in your settings.


======================================================================
ERROR: gis_tests.geos_tests.test_io (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: gis_tests.geos_tests.test_io
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/gis_tests/geos_tests/test_io.py", line 3, in <module>
    from django.contrib.gis.geos import (
  File "/testbed/django/contrib/gis/geos/__init__.py", line 5, in <module>
    from .collections import (  # NOQA
  File "/testbed/django/contrib/gis/geos/collections.py", line 8, in <module>
    from django.contrib.gis.geos.geometry import GEOSGeometry, LinearGeometryMixin
  File "/testbed/django/contrib/gis/geos/geometry.py", line 8, in <module>
    from django.contrib.gis import gdal
  File "/testbed/django/contrib/gis/gdal/__init__.py", line 28, in <module>
    from django.contrib.gis.gdal.datasource import DataSource
  File "/testbed/django/contrib/gis/gdal/datasource.py", line 39, in <module>
    from django.contrib.gis.gdal.driver import Driver
  File "/testbed/django/contrib/gis/gdal/driver.py", line 5, in <module>
    from django.contrib.gis.gdal.prototypes import ds as vcapi, raster as rcapi
  File "/testbed/django/contrib/gis/gdal/prototypes/ds.py", line 9, in <module>
    from django.contrib.gis.gdal.libgdal import GDAL_VERSION, lgdal
  File "/testbed/django/contrib/gis/gdal/libgdal.py", line 42, in <module>
    % '", "'.join(lib_names)
django.core.exceptions.ImproperlyConfigured: Could not find the GDAL library (tried "gdal", "GDAL", "gdal2.4.0", "gdal2.3.0", "gdal2.2.0", "gdal2.1.0", "gdal2.0.0"). Is GDAL installed? If it is, try setting GDAL_LIBRARY_PATH in your settings.


======================================================================
ERROR: gis_tests.geos_tests.test_mutable_list (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: gis_tests.geos_tests.test_mutable_list
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/gis_tests/geos_tests/test_mutable_list.py", line 9, in <module>
    from django.contrib.gis.geos.mutable_list import ListMixin
  File "/testbed/django/contrib/gis/geos/__init__.py", line 5, in <module>
    from .collections import (  # NOQA
  File "/testbed/django/contrib/gis/geos/collections.py", line 8, in <module>
    from django.contrib.gis.geos.geometry import GEOSGeometry, LinearGeometryMixin
  File "/testbed/django/contrib/gis/geos/geometry.py", line 8, in <module>
    from django.contrib.gis import gdal
  File "/testbed/django/contrib/gis/gdal/__init__.py", line 28, in <module>
    from django.contrib.gis.gdal.datasource import DataSource
  File "/testbed/django/contrib/gis/gdal/datasource.py", line 39, in <module>
    from django.contrib.gis.gdal.driver import Driver
  File "/testbed/django/contrib/gis/gdal/driver.py", line 5, in <module>
    from django.contrib.gis.gdal.prototypes import ds as vcapi, raster as rcapi
  File "/testbed/django/contrib/gis/gdal/prototypes/ds.py", line 9, in <module>
    from django.contrib.gis.gdal.libgdal import GDAL_VERSION, lgdal
  File "/testbed/django/contrib/gis/gdal/libgdal.py", line 42, in <module>
    % '", "'.join(lib_names)
django.core.exceptions.ImproperlyConfigured: Could not find the GDAL library (tried "gdal", "GDAL", "gdal2.4.0", "gdal2.3.0", "gdal2.2.0", "gdal2.1.0", "gdal2.0.0"). Is GDAL installed? If it is, try setting GDAL_LIBRARY_PATH in your settings.


======================================================================
ERROR: gis_tests.gis_migrations.test_operations (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: gis_tests.gis_migrations.test_operations
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/gis_tests/gis_migrations/test_operations.py", line 3, in <module>
    from django.contrib.gis.db.models import fields
  File "/testbed/django/contrib/gis/db/models/__init__.py", line 3, in <module>
    import django.contrib.gis.db.models.functions  # NOQA
  File "/testbed/django/contrib/gis/db/models/functions.py", line 3, in <module>
    from django.contrib.gis.db.models.fields import BaseSpatialField, GeometryField
  File "/testbed/django/contrib/gis/db/models/fields.py", line 3, in <module>
    from django.contrib.gis import forms, gdal
  File "/testbed/django/contrib/gis/forms/__init__.py", line 3, in <module>
    from .fields import (  # NOQA
  File "/testbed/django/contrib/gis/forms/fields.py", line 2, in <module>
    from django.contrib.gis.gdal import GDALException
  File "/testbed/django/contrib/gis/gdal/__init__.py", line 28, in <module>
    from django.contrib.gis.gdal.datasource import DataSource
  File "/testbed/django/contrib/gis/gdal/datasource.py", line 39, in <module>
    from django.contrib.gis.gdal.driver import Driver
  File "/testbed/django/contrib/gis/gdal/driver.py", line 5, in <module>
    from django.contrib.gis.gdal.prototypes import ds as vcapi, raster as rcapi
  File "/testbed/django/contrib/gis/gdal/prototypes/ds.py", line 9, in <module>
    from django.contrib.gis.gdal.libgdal import GDAL_VERSION, lgdal
  File "/testbed/django/contrib/gis/gdal/libgdal.py", line 42, in <module>
    % '", "'.join(lib_names)
django.core.exceptions.ImproperlyConfigured: Could not find the GDAL library (tried "gdal", "GDAL", "gdal2.4.0", "gdal2.3.0", "gdal2.2.0", "gdal2.1.0", "gdal2.0.0"). Is GDAL installed? If it is, try setting GDAL_LIBRARY_PATH in your settings.


======================================================================
ERROR: gis_tests.inspectapp.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: gis_tests.inspectapp.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/gis_tests/inspectapp/tests.py", line 5, in <module>
    from django.contrib.gis.gdal import GDAL_VERSION, Driver, GDALException
  File "/testbed/django/contrib/gis/gdal/__init__.py", line 28, in <module>
    from django.contrib.gis.gdal.datasource import DataSource
  File "/testbed/django/contrib/gis/gdal/datasource.py", line 39, in <module>
    from django.contrib.gis.gdal.driver import Driver
  File "/testbed/django/contrib/gis/gdal/driver.py", line 5, in <module>
    from django.contrib.gis.gdal.prototypes import ds as vcapi, raster as rcapi
  File "/testbed/django/contrib/gis/gdal/prototypes/ds.py", line 9, in <module>
    from django.contrib.gis.gdal.libgdal import GDAL_VERSION, lgdal
  File "/testbed/django/contrib/gis/gdal/libgdal.py", line 42, in <module>
    % '", "'.join(lib_names)
django.core.exceptions.ImproperlyConfigured: Could not find the GDAL library (tried "gdal", "GDAL", "gdal2.4.0", "gdal2.3.0", "gdal2.2.0", "gdal2.1.0", "gdal2.0.0"). Is GDAL installed? If it is, try setting GDAL_LIBRARY_PATH in your settings.


======================================================================
ERROR: gis_tests.layermap.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: gis_tests.layermap.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/gis_tests/layermap/tests.py", line 8, in <module>
    from django.contrib.gis.gdal import DataSource
  File "/testbed/django/contrib/gis/gdal/__init__.py", line 28, in <module>
    from django.contrib.gis.gdal.datasource import DataSource
  File "/testbed/django/contrib/gis/gdal/datasource.py", line 39, in <module>
    from django.contrib.gis.gdal.driver import Driver
  File "/testbed/django/contrib/gis/gdal/driver.py", line 5, in <module>
    from django.contrib.gis.gdal.prototypes import ds as vcapi, raster as rcapi
  File "/testbed/django/contrib/gis/gdal/prototypes/ds.py", line 9, in <module>
    from django.contrib.gis.gdal.libgdal import GDAL_VERSION, lgdal
  File "/testbed/django/contrib/gis/gdal/libgdal.py", line 42, in <module>
    % '", "'.join(lib_names)
django.core.exceptions.ImproperlyConfigured: Could not find the GDAL library (tried "gdal", "GDAL", "gdal2.4.0", "gdal2.3.0", "gdal2.2.0", "gdal2.1.0", "gdal2.0.0"). Is GDAL installed? If it is, try setting GDAL_LIBRARY_PATH in your settings.


======================================================================
ERROR: gis_tests.rasterapp.test_rasterfield (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: gis_tests.rasterapp.test_rasterfield
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/gis_tests/rasterapp/test_rasterfield.py", line 3, in <module>
    from django.contrib.gis.db.models.fields import BaseSpatialField
  File "/testbed/django/contrib/gis/db/models/__init__.py", line 3, in <module>
    import django.contrib.gis.db.models.functions  # NOQA
  File "/testbed/django/contrib/gis/db/models/functions.py", line 3, in <module>
    from django.contrib.gis.db.models.fields import BaseSpatialField, GeometryField
  File "/testbed/django/contrib/gis/db/models/fields.py", line 3, in <module>
    from django.contrib.gis import forms, gdal
  File "/testbed/django/contrib/gis/forms/__init__.py", line 3, in <module>
    from .fields import (  # NOQA
  File "/testbed/django/contrib/gis/forms/fields.py", line 2, in <module>
    from django.contrib.gis.gdal import GDALException
  File "/testbed/django/contrib/gis/gdal/__init__.py", line 28, in <module>
    from django.contrib.gis.gdal.datasource import DataSource
  File "/testbed/django/contrib/gis/gdal/datasource.py", line 39, in <module>
    from django.contrib.gis.gdal.driver import Driver
  File "/testbed/django/contrib/gis/gdal/driver.py", line 5, in <module>
    from django.contrib.gis.gdal.prototypes import ds as vcapi, raster as rcapi
  File "/testbed/django/contrib/gis/gdal/prototypes/ds.py", line 9, in <module>
    from django.contrib.gis.gdal.libgdal import GDAL_VERSION, lgdal
  File "/testbed/django/contrib/gis/gdal/libgdal.py", line 42, in <module>
    % '", "'.join(lib_names)
django.core.exceptions.ImproperlyConfigured: Could not find the GDAL library (tried "gdal", "GDAL", "gdal2.4.0", "gdal2.3.0", "gdal2.2.0", "gdal2.1.0", "gdal2.0.0"). Is GDAL installed? If it is, try setting GDAL_LIBRARY_PATH in your settings.


======================================================================
ERROR: gis_tests.relatedapp.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: gis_tests.relatedapp.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/gis_tests/relatedapp/tests.py", line 1, in <module>
    from django.contrib.gis.db.models import Collect, Count, Extent, F, Union
  File "/testbed/django/contrib/gis/db/models/__init__.py", line 3, in <module>
    import django.contrib.gis.db.models.functions  # NOQA
  File "/testbed/django/contrib/gis/db/models/functions.py", line 3, in <module>
    from django.contrib.gis.db.models.fields import BaseSpatialField, GeometryField
  File "/testbed/django/contrib/gis/db/models/fields.py", line 3, in <module>
    from django.contrib.gis import forms, gdal
  File "/testbed/django/contrib/gis/forms/__init__.py", line 3, in <module>
    from .fields import (  # NOQA
  File "/testbed/django/contrib/gis/forms/fields.py", line 2, in <module>
    from django.contrib.gis.gdal import GDALException
  File "/testbed/django/contrib/gis/gdal/__init__.py", line 28, in <module>
    from django.contrib.gis.gdal.datasource import DataSource
  File "/testbed/django/contrib/gis/gdal/datasource.py", line 39, in <module>
    from django.contrib.gis.gdal.driver import Driver
  File "/testbed/django/contrib/gis/gdal/driver.py", line 5, in <module>
    from django.contrib.gis.gdal.prototypes import ds as vcapi, raster as rcapi
  File "/testbed/django/contrib/gis/gdal/prototypes/ds.py", line 9, in <module>
    from django.contrib.gis.gdal.libgdal import GDAL_VERSION, lgdal
  File "/testbed/django/contrib/gis/gdal/libgdal.py", line 42, in <module>
    % '", "'.join(lib_names)
django.core.exceptions.ImproperlyConfigured: Could not find the GDAL library (tried "gdal", "GDAL", "gdal2.4.0", "gdal2.3.0", "gdal2.2.0", "gdal2.1.0", "gdal2.0.0"). Is GDAL installed? If it is, try setting GDAL_LIBRARY_PATH in your settings.


======================================================================
ERROR: gis_tests.test_fields (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: gis_tests.test_fields
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/gis_tests/test_fields.py", line 3, in <module>
    from django.contrib.gis.db.models import GeometryField
  File "/testbed/django/contrib/gis/db/models/__init__.py", line 3, in <module>
    import django.contrib.gis.db.models.functions  # NOQA
  File "/testbed/django/contrib/gis/db/models/functions.py", line 3, in <module>
    from django.contrib.gis.db.models.fields import BaseSpatialField, GeometryField
  File "/testbed/django/contrib/gis/db/models/fields.py", line 3, in <module>
    from django.contrib.gis import forms, gdal
  File "/testbed/django/contrib/gis/forms/__init__.py", line 3, in <module>
    from .fields import (  # NOQA
  File "/testbed/django/contrib/gis/forms/fields.py", line 2, in <module>
    from django.contrib.gis.gdal import GDALException
  File "/testbed/django/contrib/gis/gdal/__init__.py", line 28, in <module>
    from django.contrib.gis.gdal.datasource import DataSource
  File "/testbed/django/contrib/gis/gdal/datasource.py", line 39, in <module>
    from django.contrib.gis.gdal.driver import Driver
  File "/testbed/django/contrib/gis/gdal/driver.py", line 5, in <module>
    from django.contrib.gis.gdal.prototypes import ds as vcapi, raster as rcapi
  File "/testbed/django/contrib/gis/gdal/prototypes/ds.py", line 9, in <module>
    from django.contrib.gis.gdal.libgdal import GDAL_VERSION, lgdal
  File "/testbed/django/contrib/gis/gdal/libgdal.py", line 42, in <module>
    % '", "'.join(lib_names)
django.core.exceptions.ImproperlyConfigured: Could not find the GDAL library (tried "gdal", "GDAL", "gdal2.4.0", "gdal2.3.0", "gdal2.2.0", "gdal2.1.0", "gdal2.0.0"). Is GDAL installed? If it is, try setting GDAL_LIBRARY_PATH in your settings.


======================================================================
ERROR: gis_tests.test_geoforms (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: gis_tests.test_geoforms
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/gis_tests/test_geoforms.py", line 3, in <module>
    from django.contrib.gis import forms
  File "/testbed/django/contrib/gis/forms/__init__.py", line 3, in <module>
    from .fields import (  # NOQA
  File "/testbed/django/contrib/gis/forms/fields.py", line 2, in <module>
    from django.contrib.gis.gdal import GDALException
  File "/testbed/django/contrib/gis/gdal/__init__.py", line 28, in <module>
    from django.contrib.gis.gdal.datasource import DataSource
  File "/testbed/django/contrib/gis/gdal/datasource.py", line 39, in <module>
    from django.contrib.gis.gdal.driver import Driver
  File "/testbed/django/contrib/gis/gdal/driver.py", line 5, in <module>
    from django.contrib.gis.gdal.prototypes import ds as vcapi, raster as rcapi
  File "/testbed/django/contrib/gis/gdal/prototypes/ds.py", line 9, in <module>
    from django.contrib.gis.gdal.libgdal import GDAL_VERSION, lgdal
  File "/testbed/django/contrib/gis/gdal/libgdal.py", line 42, in <module>
    % '", "'.join(lib_names)
django.core.exceptions.ImproperlyConfigured: Could not find the GDAL library (tried "gdal", "GDAL", "gdal2.4.0", "gdal2.3.0", "gdal2.2.0", "gdal2.1.0", "gdal2.0.0"). Is GDAL installed? If it is, try setting GDAL_LIBRARY_PATH in your settings.


======================================================================
ERROR: gis_tests.test_geoip2 (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: gis_tests.test_geoip2
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/gis_tests/test_geoip2.py", line 7, in <module>
    from django.contrib.gis.geos import GEOSGeometry
  File "/testbed/django/contrib/gis/geos/__init__.py", line 5, in <module>
    from .collections import (  # NOQA
  File "/testbed/django/contrib/gis/geos/collections.py", line 8, in <module>
    from django.contrib.gis.geos.geometry import GEOSGeometry, LinearGeometryMixin
  File "/testbed/django/contrib/gis/geos/geometry.py", line 8, in <module>
    from django.contrib.gis import gdal
  File "/testbed/django/contrib/gis/gdal/__init__.py", line 28, in <module>
    from django.contrib.gis.gdal.datasource import DataSource
  File "/testbed/django/contrib/gis/gdal/datasource.py", line 39, in <module>
    from django.contrib.gis.gdal.driver import Driver
  File "/testbed/django/contrib/gis/gdal/driver.py", line 5, in <module>
    from django.contrib.gis.gdal.prototypes import ds as vcapi, raster as rcapi
  File "/testbed/django/contrib/gis/gdal/prototypes/ds.py", line 9, in <module>
    from django.contrib.gis.gdal.libgdal import GDAL_VERSION, lgdal
  File "/testbed/django/contrib/gis/gdal/libgdal.py", line 42, in <module>
    % '", "'.join(lib_names)
django.core.exceptions.ImproperlyConfigured: Could not find the GDAL library (tried "gdal", "GDAL", "gdal2.4.0", "gdal2.3.0", "gdal2.2.0", "gdal2.1.0", "gdal2.0.0"). Is GDAL installed? If it is, try setting GDAL_LIBRARY_PATH in your settings.


======================================================================
ERROR: gis_tests.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: gis_tests.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/gis_tests/tests.py", line 7, in <module>
    from django.contrib.gis.db.backends.postgis.operations import PostGISOperations
  File "/testbed/django/contrib/gis/db/backends/postgis/operations.py", line 4, in <module>
    from django.contrib.gis.db.backends.base.operations import (
  File "/testbed/django/contrib/gis/db/backends/base/operations.py", line 1, in <module>
    from django.contrib.gis.db.models import GeometryField
  File "/testbed/django/contrib/gis/db/models/__init__.py", line 3, in <module>
    import django.contrib.gis.db.models.functions  # NOQA
  File "/testbed/django/contrib/gis/db/models/functions.py", line 3, in <module>
    from django.contrib.gis.db.models.fields import BaseSpatialField, GeometryField
  File "/testbed/django/contrib/gis/db/models/fields.py", line 3, in <module>
    from django.contrib.gis import forms, gdal
  File "/testbed/django/contrib/gis/forms/__init__.py", line 3, in <module>
    from .fields import (  # NOQA
  File "/testbed/django/contrib/gis/forms/fields.py", line 2, in <module>
    from django.contrib.gis.gdal import GDALException
  File "/testbed/django/contrib/gis/gdal/__init__.py", line 28, in <module>
    from django.contrib.gis.gdal.datasource import DataSource
  File "/testbed/django/contrib/gis/gdal/datasource.py", line 39, in <module>
    from django.contrib.gis.gdal.driver import Driver
  File "/testbed/django/contrib/gis/gdal/driver.py", line 5, in <module>
    from django.contrib.gis.gdal.prototypes import ds as vcapi, raster as rcapi
  File "/testbed/django/contrib/gis/gdal/prototypes/ds.py", line 9, in <module>
    from django.contrib.gis.gdal.libgdal import GDAL_VERSION, lgdal
  File "/testbed/django/contrib/gis/gdal/libgdal.py", line 42, in <module>
    % '", "'.join(lib_names)
django.core.exceptions.ImproperlyConfigured: Could not find the GDAL library (tried "gdal", "GDAL", "gdal2.4.0", "gdal2.3.0", "gdal2.2.0", "gdal2.1.0", "gdal2.0.0"). Is GDAL installed? If it is, try setting GDAL_LIBRARY_PATH in your settings.


======================================================================
ERROR: i18n.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: i18n.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/i18n/tests.py", line 44, in <module>
    from .forms import CompanyForm, I18nForm, SelectDateForm
  File "/testbed/tests/i18n/forms.py", line 3, in <module>
    from .models import Company
  File "/testbed/tests/i18n/models.py", line 7, in <module>
    class TestModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class i18n.models.TestModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: import_error_package (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: import_error_package
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 462, in _find_test_path
    package = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/import_error_package/__init__.py", line 3, in <module>
    raise ImportError("Oops")
ImportError: Oops


======================================================================
ERROR: indexes.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: indexes.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/indexes/tests.py", line 12, in <module>
    from .models import (
  File "/testbed/tests/indexes/models.py", line 19, in <module>
    class ArticleTranslation(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class indexes.models.ArticleTranslation doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: inline_formsets.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: inline_formsets.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/inline_formsets/tests.py", line 4, in <module>
    from .models import Child, Parent, Poem, Poet, School
  File "/testbed/tests/inline_formsets/models.py", line 4, in <module>
    class School(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class inline_formsets.models.School doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: inspectdb.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: inspectdb.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/inspectdb/tests.py", line 10, in <module>
    from .models import PeopleMoreData
  File "/testbed/tests/inspectdb/models.py", line 4, in <module>
    class People(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class inspectdb.models.People doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: introspection.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: introspection.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/introspection/tests.py", line 7, in <module>
    from .models import (
  File "/testbed/tests/introspection/models.py", line 4, in <module>
    class City(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class introspection.models.City doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: known_related_objects.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: known_related_objects.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/known_related_objects/tests.py", line 3, in <module>
    from .models import Organiser, Pool, PoolStyle, Tournament
  File "/testbed/tests/known_related_objects/models.py", line 10, in <module>
    class Tournament(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class known_related_objects.models.Tournament doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: lookup.test_decimalfield (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: lookup.test_decimalfield
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/lookup/test_decimalfield.py", line 4, in <module>
    from .models import Product, Stock
  File "/testbed/tests/lookup/models.py", line 11, in <module>
    class Alarm(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class lookup.models.Alarm doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: lookup.test_timefield (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: lookup.test_timefield
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/lookup/test_timefield.py", line 3, in <module>
    from .models import Alarm
  File "/testbed/tests/lookup/models.py", line 11, in <module>
    class Alarm(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class lookup.models.Alarm doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: lookup.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: lookup.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/lookup/tests.py", line 13, in <module>
    from .models import (
  File "/testbed/tests/lookup/models.py", line 11, in <module>
    class Alarm(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class lookup.models.Alarm doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: m2m_and_m2o.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: m2m_and_m2o.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/m2m_and_m2o/tests.py", line 4, in <module>
    from .models import Issue, StringReferenceModel, User
  File "/testbed/tests/m2m_and_m2o/models.py", line 9, in <module>
    class User(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class m2m_and_m2o.models.User doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: m2m_intermediary.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: m2m_intermediary.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/m2m_intermediary/tests.py", line 5, in <module>
    from .models import Article, Reporter, Writer
  File "/testbed/tests/m2m_intermediary/models.py", line 15, in <module>
    class Reporter(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class m2m_intermediary.models.Reporter doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: m2m_multiple.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: m2m_multiple.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/m2m_multiple/tests.py", line 5, in <module>
    from .models import Article, Category
  File "/testbed/tests/m2m_multiple/models.py", line 13, in <module>
    class Category(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class m2m_multiple.models.Category doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: m2m_recursive.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: m2m_recursive.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/m2m_recursive/tests.py", line 5, in <module>
    from .models import Person
  File "/testbed/tests/m2m_recursive/models.py", line 22, in <module>
    class Person(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class m2m_recursive.models.Person doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: m2m_regress.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: m2m_regress.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/m2m_regress/tests.py", line 4, in <module>
    from .models import (
  File "/testbed/tests/m2m_regress/models.py", line 7, in <module>
    class SelfRefer(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class m2m_regress.models.SelfRefer doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: m2m_signals.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: m2m_signals.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/m2m_signals/tests.py", line 8, in <module>
    from .models import Car, Part, Person, SportsCar
  File "/testbed/tests/m2m_signals/models.py", line 4, in <module>
    class Part(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class m2m_signals.models.Part doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: m2m_through.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: m2m_through.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/m2m_through/tests.py", line 7, in <module>
    from .models import (
  File "/testbed/tests/m2m_through/models.py", line 7, in <module>
    class Person(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class m2m_through.models.Person doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: m2m_through_regress.test_multitable (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: m2m_through_regress.test_multitable
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/m2m_through_regress/test_multitable.py", line 3, in <module>
    from .models import (
  File "/testbed/tests/m2m_through_regress/models.py", line 6, in <module>
    class Membership(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class m2m_through_regress.models.Membership doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: m2m_through_regress.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: m2m_through_regress.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/m2m_through_regress/tests.py", line 7, in <module>
    from .models import (
  File "/testbed/tests/m2m_through_regress/models.py", line 6, in <module>
    class Membership(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class m2m_through_regress.models.Membership doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: m2o_recursive.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: m2o_recursive.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/m2o_recursive/tests.py", line 3, in <module>
    from .models import Category, Person
  File "/testbed/tests/m2o_recursive/models.py", line 16, in <module>
    class Category(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class m2o_recursive.models.Category doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: managers_regress.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: managers_regress.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/managers_regress/tests.py", line 6, in <module>
    from .models import (
  File "/testbed/tests/managers_regress/models.py", line 57, in <module>
    class Parent(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class managers_regress.models.Parent doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: many_to_many.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: many_to_many.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/many_to_many/tests.py", line 6, in <module>
    from .models import (
  File "/testbed/tests/many_to_many/models.py", line 12, in <module>
    class Publication(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class many_to_many.models.Publication doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: many_to_one.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: many_to_one.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/many_to_one/tests.py", line 9, in <module>
    from .models import (
  File "/testbed/tests/many_to_one/models.py", line 9, in <module>
    class Reporter(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class many_to_one.models.Reporter doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: many_to_one_null.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: many_to_one_null.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/many_to_one_null/tests.py", line 3, in <module>
    from .models import Article, Car, Driver, Reporter
  File "/testbed/tests/many_to_one_null/models.py", line 11, in <module>
    class Reporter(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class many_to_one_null.models.Reporter doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: max_lengths.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: max_lengths.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/max_lengths/tests.py", line 5, in <module>
    from .models import PersonWithCustomMaxLengths, PersonWithDefaultMaxLengths
  File "/testbed/tests/max_lengths/models.py", line 4, in <module>
    class PersonWithDefaultMaxLengths(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class max_lengths.models.PersonWithDefaultMaxLengths doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: migrate_signals.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: migrate_signals.tests
Traceback (most recent call last):
  File "/testbed/django/apps/registry.py", line 155, in get_app_config
    return self.app_configs[app_label]
KeyError: 'migrate_signals'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/migrate_signals/tests.py", line 9, in <module>
    APP_CONFIG = apps.get_app_config('migrate_signals')
  File "/testbed/django/apps/registry.py", line 162, in get_app_config
    raise LookupError(message)
LookupError: No installed app with label 'migrate_signals'.


======================================================================
ERROR: migration_test_data_persistence.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: migration_test_data_persistence.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/migration_test_data_persistence/tests.py", line 3, in <module>
    from .models import Book
  File "/testbed/tests/migration_test_data_persistence/models.py", line 4, in <module>
    class Book(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class migration_test_data_persistence.models.Book doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: migrations.test_autodetector (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: migrations.test_autodetector
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/migrations/test_autodetector.py", line 18, in <module>
    from .models import FoodManager, FoodQuerySet
  File "/testbed/tests/migrations/models.py", line 9, in <module>
    class ModelWithCustomBase(models.Model, metaclass=CustomModelBase):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class migrations.models.ModelWithCustomBase doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: migrations.test_commands (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: migrations.test_commands
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/migrations/test_commands.py", line 19, in <module>
    from .models import UnicodeModel, UnserializableModel
  File "/testbed/tests/migrations/models.py", line 9, in <module>
    class ModelWithCustomBase(models.Model, metaclass=CustomModelBase):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class migrations.models.ModelWithCustomBase doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: migrations.test_operations (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: migrations.test_operations
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/migrations/test_operations.py", line 12, in <module>
    from .models import FoodManager, FoodQuerySet, UnicodeModel
  File "/testbed/tests/migrations/models.py", line 9, in <module>
    class ModelWithCustomBase(models.Model, metaclass=CustomModelBase):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class migrations.models.ModelWithCustomBase doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: migrations.test_optimizer (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: migrations.test_optimizer
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/migrations/test_optimizer.py", line 7, in <module>
    from .models import EmptyManager, UnicodeModel
  File "/testbed/tests/migrations/models.py", line 9, in <module>
    class ModelWithCustomBase(models.Model, metaclass=CustomModelBase):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class migrations.models.ModelWithCustomBase doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: migrations.test_state (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: migrations.test_state
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/migrations/test_state.py", line 14, in <module>
    from .models import (
  File "/testbed/tests/migrations/models.py", line 9, in <module>
    class ModelWithCustomBase(models.Model, metaclass=CustomModelBase):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class migrations.models.ModelWithCustomBase doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: migrations.test_writer (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: migrations.test_writer
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/migrations/test_writer.py", line 26, in <module>
    from .models import FoodManager, FoodQuerySet
  File "/testbed/tests/migrations/models.py", line 9, in <module>
    class ModelWithCustomBase(models.Model, metaclass=CustomModelBase):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class migrations.models.ModelWithCustomBase doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: model_fields.test_autofield (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: model_fields.test_autofield
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/model_fields/test_autofield.py", line 4, in <module>
    from .models import AutoModel, BigAutoModel, SmallAutoModel
  File "/testbed/tests/model_fields/models.py", line 20, in <module>
    class Foo(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_fields.models.Foo doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: model_fields.test_binaryfield (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: model_fields.test_binaryfield
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/model_fields/test_binaryfield.py", line 5, in <module>
    from .models import DataModel
  File "/testbed/tests/model_fields/models.py", line 20, in <module>
    class Foo(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_fields.models.Foo doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: model_fields.test_booleanfield (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: model_fields.test_booleanfield
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/model_fields/test_booleanfield.py", line 6, in <module>
    from .models import BooleanModel, FksToBooleans, NullBooleanModel
  File "/testbed/tests/model_fields/models.py", line 20, in <module>
    class Foo(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_fields.models.Foo doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: model_fields.test_charfield (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: model_fields.test_charfield
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/model_fields/test_charfield.py", line 7, in <module>
    from .models import Post
  File "/testbed/tests/model_fields/models.py", line 20, in <module>
    class Foo(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_fields.models.Foo doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: model_fields.test_datetimefield (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: model_fields.test_datetimefield
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/model_fields/test_datetimefield.py", line 10, in <module>
    from .models import DateTimeModel
  File "/testbed/tests/model_fields/models.py", line 20, in <module>
    class Foo(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_fields.models.Foo doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: model_fields.test_decimalfield (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: model_fields.test_decimalfield
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/model_fields/test_decimalfield.py", line 9, in <module>
    from .models import BigD, Foo
  File "/testbed/tests/model_fields/models.py", line 20, in <module>
    class Foo(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_fields.models.Foo doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: model_fields.test_durationfield (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: model_fields.test_durationfield
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/model_fields/test_durationfield.py", line 9, in <module>
    from .models import DurationModel, NullDurationModel
  File "/testbed/tests/model_fields/models.py", line 20, in <module>
    class Foo(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_fields.models.Foo doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: model_fields.test_field_flags (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: model_fields.test_field_flags
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/model_fields/test_field_flags.py", line 7, in <module>
    from .models import AllFieldsModel
  File "/testbed/tests/model_fields/models.py", line 20, in <module>
    class Foo(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_fields.models.Foo doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: model_fields.test_filefield (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: model_fields.test_filefield
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/model_fields/test_filefield.py", line 14, in <module>
    from .models import Document
  File "/testbed/tests/model_fields/models.py", line 20, in <module>
    class Foo(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_fields.models.Foo doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: model_fields.test_floatfield (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: model_fields.test_floatfield
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/model_fields/test_floatfield.py", line 4, in <module>
    from .models import FloatModel
  File "/testbed/tests/model_fields/models.py", line 20, in <module>
    class Foo(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_fields.models.Foo doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: model_fields.test_foreignkey (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: model_fields.test_foreignkey
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/model_fields/test_foreignkey.py", line 10, in <module>
    from .models import Bar, FkToChar, Foo, PrimaryKeyCharModel
  File "/testbed/tests/model_fields/models.py", line 20, in <module>
    class Foo(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_fields.models.Foo doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: model_fields.test_genericipaddressfield (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: model_fields.test_genericipaddressfield
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/model_fields/test_genericipaddressfield.py", line 5, in <module>
    from .models import GenericIPAddress
  File "/testbed/tests/model_fields/models.py", line 20, in <module>
    class Foo(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_fields.models.Foo doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: model_fields.test_imagefield (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: model_fields.test_imagefield
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/model_fields/test_imagefield.py", line 12, in <module>
    from .models import Image
  File "/testbed/tests/model_fields/models.py", line 20, in <module>
    class Foo(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_fields.models.Foo doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: model_fields.test_integerfield (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: model_fields.test_integerfield
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/model_fields/test_integerfield.py", line 8, in <module>
    from .models import (
  File "/testbed/tests/model_fields/models.py", line 20, in <module>
    class Foo(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_fields.models.Foo doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: model_fields.test_manytomanyfield (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: model_fields.test_manytomanyfield
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/model_fields/test_manytomanyfield.py", line 6, in <module>
    from .models import ManyToMany
  File "/testbed/tests/model_fields/models.py", line 20, in <module>
    class Foo(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_fields.models.Foo doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: model_fields.test_slugfield (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: model_fields.test_slugfield
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/model_fields/test_slugfield.py", line 3, in <module>
    from .models import BigS, UnicodeSlugField
  File "/testbed/tests/model_fields/models.py", line 20, in <module>
    class Foo(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_fields.models.Foo doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: model_fields.test_textfield (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: model_fields.test_textfield
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/model_fields/test_textfield.py", line 7, in <module>
    from .models import Post
  File "/testbed/tests/model_fields/models.py", line 20, in <module>
    class Foo(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_fields.models.Foo doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: model_fields.test_uuid (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: model_fields.test_uuid
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/model_fields/test_uuid.py", line 12, in <module>
    from .models import (
  File "/testbed/tests/model_fields/models.py", line 20, in <module>
    class Foo(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_fields.models.Foo doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: model_fields.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: model_fields.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/model_fields/tests.py", line 9, in <module>
    from .models import (
  File "/testbed/tests/model_fields/models.py", line 20, in <module>
    class Foo(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_fields.models.Foo doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: model_forms.test_modelchoicefield (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: model_forms.test_modelchoicefield
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/model_forms/test_modelchoicefield.py", line 10, in <module>
    from .models import Article, Author, Book, Category, Writer
  File "/testbed/tests/model_forms/models.py", line 15, in <module>
    class Person(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_forms.models.Person doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: model_forms.test_uuid (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: model_forms.test_uuid
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/model_forms/test_uuid.py", line 5, in <module>
    from .models import UUIDPK
  File "/testbed/tests/model_forms/models.py", line 15, in <module>
    class Person(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_forms.models.Person doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: model_forms.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: model_forms.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/model_forms/tests.py", line 21, in <module>
    from .models import (
  File "/testbed/tests/model_forms/models.py", line 15, in <module>
    class Person(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_forms.models.Person doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: model_formsets.test_uuid (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: model_formsets.test_uuid
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/model_formsets/test_uuid.py", line 4, in <module>
    from .models import (
  File "/testbed/tests/model_formsets/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_formsets.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: model_formsets.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: model_formsets.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/model_formsets/tests.py", line 16, in <module>
    from .models import (
  File "/testbed/tests/model_formsets/models.py", line 7, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_formsets.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: model_formsets_regress.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: model_formsets_regress.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/model_formsets_regress/tests.py", line 10, in <module>
    from .models import (
  File "/testbed/tests/model_formsets_regress/models.py", line 4, in <module>
    class User(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_formsets_regress.models.User doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: model_indexes.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: model_indexes.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/model_indexes/tests.py", line 8, in <module>
    from .models import Book, ChildModel1, ChildModel2
  File "/testbed/tests/model_indexes/models.py", line 4, in <module>
    class Book(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_indexes.models.Book doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: model_inheritance.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: model_inheritance.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/model_inheritance/tests.py", line 8, in <module>
    from .models import (
  File "/testbed/tests/model_inheritance/models.py", line 33, in <module>
    class Worker(CommonInfo):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_inheritance.models.Worker doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: model_inheritance_regress.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: model_inheritance_regress.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/model_inheritance_regress/tests.py", line 11, in <module>
    from .models import (
  File "/testbed/tests/model_inheritance_regress/models.py", line 6, in <module>
    class Place(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_inheritance_regress.models.Place doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: model_meta.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: model_meta.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/model_meta/tests.py", line 12, in <module>
    from .models import (
  File "/testbed/tests/model_meta/models.py", line 8, in <module>
    class Relation(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_meta.models.Relation doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: model_options.test_default_related_name (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: model_options.test_default_related_name
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/model_options/test_default_related_name.py", line 4, in <module>
    from .models.default_related_name import Author, Book, Editor
  File "/testbed/tests/model_options/models/default_related_name.py", line 4, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_options.models.default_related_name.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: model_options.test_tablespaces (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: model_options.test_tablespaces
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/model_options/test_tablespaces.py", line 8, in <module>
    from .models.tablespaces import (
  File "/testbed/tests/model_options/models/tablespaces.py", line 11, in <module>
    class ScientistRef(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_options.models.tablespaces.ScientistRef doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: model_package.models (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: model_package.models
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 462, in _find_test_path
    package = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/model_package/models/__init__.py", line 2, in <module>
    from .article import Article
  File "/testbed/tests/model_package/models/article.py", line 4, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_package.models.article.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: model_package.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: model_package.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/model_package/tests.py", line 5, in <module>
    from .models.article import Article, Site
  File "/testbed/tests/model_package/models/__init__.py", line 2, in <module>
    from .article import Article
  File "/testbed/tests/model_package/models/article.py", line 4, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_package.models.article.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: model_regress.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: model_regress.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/model_regress/tests.py", line 11, in <module>
    from .models import (
  File "/testbed/tests/model_regress/models.py", line 4, in <module>
    class Article(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class model_regress.models.Article doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: modeladmin.test_actions (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: modeladmin.test_actions
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/modeladmin/test_actions.py", line 6, in <module>
    from .models import Band
  File "/testbed/tests/modeladmin/models.py", line 5, in <module>
    class Band(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class modeladmin.models.Band doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: modeladmin.test_checks (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: modeladmin.test_checks
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/modeladmin/test_checks.py", line 11, in <module>
    from .models import (
  File "/testbed/tests/modeladmin/models.py", line 5, in <module>
    class Band(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class modeladmin.models.Band doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: modeladmin.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: modeladmin.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/modeladmin/tests.py", line 20, in <module>
    from .models import Band, Concert, Song
  File "/testbed/tests/modeladmin/models.py", line 5, in <module>
    class Band(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class modeladmin.models.Band doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: multiple_database.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: multiple_database.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/multiple_database/tests.py", line 15, in <module>
    from .models import Book, Person, Pet, Review, UserProfile
  File "/testbed/tests/multiple_database/models.py", line 9, in <module>
    class Review(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class multiple_database.models.Review doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: mutually_referential.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: mutually_referential.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/mutually_referential/tests.py", line 3, in <module>
    from .models import Parent
  File "/testbed/tests/mutually_referential/models.py", line 10, in <module>
    class Parent(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class mutually_referential.models.Parent doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: nested_foreign_keys.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: nested_foreign_keys.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/nested_foreign_keys/tests.py", line 3, in <module>
    from .models import (
  File "/testbed/tests/nested_foreign_keys/models.py", line 4, in <module>
    class Person(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class nested_foreign_keys.models.Person doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: null_fk.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: null_fk.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/null_fk/tests.py", line 4, in <module>
    from .models import (
  File "/testbed/tests/null_fk/models.py", line 8, in <module>
    class SystemDetails(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class null_fk.models.SystemDetails doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: null_fk_ordering.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: null_fk_ordering.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/null_fk_ordering/tests.py", line 3, in <module>
    from .models import Article, Author, Comment, Forum, Post, SystemInfo
  File "/testbed/tests/null_fk_ordering/models.py", line 12, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class null_fk_ordering.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: null_queries.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: null_queries.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/null_queries/tests.py", line 4, in <module>
    from .models import Choice, Inner, OuterA, OuterB, Poll
  File "/testbed/tests/null_queries/models.py", line 4, in <module>
    class Poll(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class null_queries.models.Poll doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: one_to_one.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: one_to_one.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/one_to_one/tests.py", line 4, in <module>
    from .models import (
  File "/testbed/tests/one_to_one/models.py", line 11, in <module>
    class Place(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class one_to_one.models.Place doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: or_lookups.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: or_lookups.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/or_lookups/tests.py", line 7, in <module>
    from .models import Article
  File "/testbed/tests/or_lookups/models.py", line 14, in <module>
    class Article(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class or_lookups.models.Article doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: order_with_respect_to.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: order_with_respect_to.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/order_with_respect_to/tests.py", line 8, in <module>
    from .models import Answer, Dimension, Entity, Post, Question
  File "/testbed/tests/order_with_respect_to/models.py", line 8, in <module>
    class Question(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class order_with_respect_to.models.Question doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: ordering.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: ordering.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/ordering/tests.py", line 11, in <module>
    from .models import Article, Author, ChildArticle, OrderedByFArticle, Reference
  File "/testbed/tests/ordering/models.py", line 19, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class ordering.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: pagination.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: pagination.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/pagination/tests.py", line 11, in <module>
    from .models import Article
  File "/testbed/tests/pagination/models.py", line 4, in <module>
    class Article(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class pagination.models.Article doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: postgres_tests.test_aggregates (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: postgres_tests.test_aggregates
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/postgres_tests/test_aggregates.py", line 8, in <module>
    from .models import AggregateTestModel, StatTestModel
  File "/testbed/tests/postgres_tests/models.py", line 43, in <module>
    class IntegerArrayModel(PostgreSQLModel):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class postgres_tests.models.IntegerArrayModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: postgres_tests.test_array (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: postgres_tests.test_array
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/postgres_tests/test_array.py", line 21, in <module>
    from .models import (
  File "/testbed/tests/postgres_tests/models.py", line 43, in <module>
    class IntegerArrayModel(PostgreSQLModel):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class postgres_tests.models.IntegerArrayModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: postgres_tests.test_bulk_update (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: postgres_tests.test_bulk_update
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/postgres_tests/test_bulk_update.py", line 4, in <module>
    from .models import (
  File "/testbed/tests/postgres_tests/models.py", line 43, in <module>
    class IntegerArrayModel(PostgreSQLModel):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class postgres_tests.models.IntegerArrayModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: postgres_tests.test_citext (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: postgres_tests.test_citext
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/postgres_tests/test_citext.py", line 10, in <module>
    from .models import CITestModel
  File "/testbed/tests/postgres_tests/models.py", line 43, in <module>
    class IntegerArrayModel(PostgreSQLModel):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class postgres_tests.models.IntegerArrayModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: postgres_tests.test_constraints (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: postgres_tests.test_constraints
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/postgres_tests/test_constraints.py", line 9, in <module>
    from .models import HotelReservation, RangesModel, Room
  File "/testbed/tests/postgres_tests/models.py", line 43, in <module>
    class IntegerArrayModel(PostgreSQLModel):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class postgres_tests.models.IntegerArrayModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: postgres_tests.test_functions (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: postgres_tests.test_functions
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/postgres_tests/test_functions.py", line 8, in <module>
    from .models import NowTestModel, UUIDTestModel
  File "/testbed/tests/postgres_tests/models.py", line 43, in <module>
    class IntegerArrayModel(PostgreSQLModel):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class postgres_tests.models.IntegerArrayModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: postgres_tests.test_hstore (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: postgres_tests.test_hstore
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/postgres_tests/test_hstore.py", line 11, in <module>
    from .models import HStoreModel, PostgreSQLModel
  File "/testbed/tests/postgres_tests/models.py", line 43, in <module>
    class IntegerArrayModel(PostgreSQLModel):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class postgres_tests.models.IntegerArrayModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: postgres_tests.test_indexes (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: postgres_tests.test_indexes
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/postgres_tests/test_indexes.py", line 14, in <module>
    from .models import CharFieldModel, IntegerArrayModel
  File "/testbed/tests/postgres_tests/models.py", line 43, in <module>
    class IntegerArrayModel(PostgreSQLModel):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class postgres_tests.models.IntegerArrayModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: postgres_tests.test_json (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: postgres_tests.test_json
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/postgres_tests/test_json.py", line 17, in <module>
    from .models import JSONModel, PostgreSQLModel
  File "/testbed/tests/postgres_tests/models.py", line 43, in <module>
    class IntegerArrayModel(PostgreSQLModel):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class postgres_tests.models.IntegerArrayModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: postgres_tests.test_ranges (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: postgres_tests.test_ranges
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/postgres_tests/test_ranges.py", line 14, in <module>
    from .models import (
  File "/testbed/tests/postgres_tests/models.py", line 43, in <module>
    class IntegerArrayModel(PostgreSQLModel):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class postgres_tests.models.IntegerArrayModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: postgres_tests.test_search (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: postgres_tests.test_search
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/postgres_tests/test_search.py", line 16, in <module>
    from .models import Character, Line, Scene
  File "/testbed/tests/postgres_tests/models.py", line 43, in <module>
    class IntegerArrayModel(PostgreSQLModel):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class postgres_tests.models.IntegerArrayModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: postgres_tests.test_trigram (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: postgres_tests.test_trigram
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/postgres_tests/test_trigram.py", line 5, in <module>
    from .models import CharFieldModel, TextFieldModel
  File "/testbed/tests/postgres_tests/models.py", line 43, in <module>
    class IntegerArrayModel(PostgreSQLModel):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class postgres_tests.models.IntegerArrayModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: postgres_tests.test_unaccent (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: postgres_tests.test_unaccent
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/postgres_tests/test_unaccent.py", line 5, in <module>
    from .models import CharFieldModel, TextFieldModel
  File "/testbed/tests/postgres_tests/models.py", line 43, in <module>
    class IntegerArrayModel(PostgreSQLModel):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class postgres_tests.models.IntegerArrayModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: prefetch_related.test_prefetch_related_objects (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: prefetch_related.test_prefetch_related_objects
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/prefetch_related/test_prefetch_related_objects.py", line 4, in <module>
    from .models import Author, Book, Reader
  File "/testbed/tests/prefetch_related/models.py", line 12, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class prefetch_related.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: prefetch_related.test_uuid (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: prefetch_related.test_uuid
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/prefetch_related/test_uuid.py", line 3, in <module>
    from .models import Flea, House, Person, Pet, Room
  File "/testbed/tests/prefetch_related/models.py", line 12, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class prefetch_related.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: prefetch_related.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: prefetch_related.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/prefetch_related/tests.py", line 12, in <module>
    from .models import (
  File "/testbed/tests/prefetch_related/models.py", line 12, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class prefetch_related.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: properties.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: properties.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/properties/tests.py", line 3, in <module>
    from .models import Person
  File "/testbed/tests/properties/models.py", line 10, in <module>
    class Person(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class properties.models.Person doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: proxy_model_inheritance.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: proxy_model_inheritance.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/proxy_model_inheritance/tests.py", line 7, in <module>
    from .models import (
  File "/testbed/tests/proxy_model_inheritance/models.py", line 5, in <module>
    class ConcreteModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class proxy_model_inheritance.models.ConcreteModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: proxy_models.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: proxy_models.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/proxy_models/tests.py", line 11, in <module>
    from .admin import admin as force_admin_model_registration  # NOQA
  File "/testbed/tests/proxy_models/admin.py", line 3, in <module>
    from .models import ProxyTrackerUser, TrackerUser
  File "/testbed/tests/proxy_models/models.py", line 22, in <module>
    class Person(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class proxy_models.models.Person doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: queries.test_bulk_update (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: queries.test_bulk_update
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/queries/test_bulk_update.py", line 8, in <module>
    from .models import (
  File "/testbed/tests/queries/models.py", line 10, in <module>
    class DumbCategory(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class queries.models.DumbCategory doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: queries.test_db_returning (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: queries.test_db_returning
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/queries/test_db_returning.py", line 7, in <module>
    from .models import DumbCategory, NonIntegerPKReturningModel, ReturningModel
  File "/testbed/tests/queries/models.py", line 10, in <module>
    class DumbCategory(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class queries.models.DumbCategory doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: queries.test_explain (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: queries.test_explain
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/queries/test_explain.py", line 8, in <module>
    from .models import Tag
  File "/testbed/tests/queries/models.py", line 10, in <module>
    class DumbCategory(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class queries.models.DumbCategory doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: queries.test_iterator (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: queries.test_iterator
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/queries/test_iterator.py", line 8, in <module>
    from .models import Article
  File "/testbed/tests/queries/models.py", line 10, in <module>
    class DumbCategory(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class queries.models.DumbCategory doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: queries.test_qs_combinators (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: queries.test_qs_combinators
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/queries/test_qs_combinators.py", line 5, in <module>
    from .models import Number, ReservedName
  File "/testbed/tests/queries/models.py", line 10, in <module>
    class DumbCategory(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class queries.models.DumbCategory doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: queries.test_query (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: queries.test_query
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/queries/test_query.py", line 14, in <module>
    from .models import Author, Item, ObjectC, Ranking
  File "/testbed/tests/queries/models.py", line 10, in <module>
    class DumbCategory(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class queries.models.DumbCategory doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: queries.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: queries.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/queries/tests.py", line 15, in <module>
    from .models import (
  File "/testbed/tests/queries/models.py", line 10, in <module>
    class DumbCategory(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class queries.models.DumbCategory doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: queryset_pickle.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: queryset_pickle.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/queryset_pickle/tests.py", line 8, in <module>
    from .models import Container, Event, Group, Happening, M2MModel, MyEvent
  File "/testbed/tests/queryset_pickle/models.py", line 31, in <module>
    class Group(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class queryset_pickle.models.Group doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: raw_query.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: raw_query.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/raw_query/tests.py", line 8, in <module>
    from .models import (
  File "/testbed/tests/raw_query/models.py", line 4, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class raw_query.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: redirects_tests.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: redirects_tests.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/redirects_tests/tests.py", line 2, in <module>
    from django.contrib.redirects.middleware import RedirectFallbackMiddleware
  File "/testbed/django/contrib/redirects/middleware.py", line 3, in <module>
    from django.contrib.redirects.models import Redirect
  File "/testbed/django/contrib/redirects/models.py", line 6, in <module>
    class Redirect(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class django.contrib.redirects.models.Redirect doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: reserved_names.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: reserved_names.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/reserved_names/tests.py", line 5, in <module>
    from .models import Thing
  File "/testbed/tests/reserved_names/models.py", line 13, in <module>
    class Thing(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class reserved_names.models.Thing doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: resolve_url.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: resolve_url.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/resolve_url/tests.py", line 5, in <module>
    from .models import UnimportantThing
  File "/testbed/tests/resolve_url/models.py", line 8, in <module>
    class UnimportantThing(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class resolve_url.models.UnimportantThing doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: reverse_lookup.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: reverse_lookup.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/reverse_lookup/tests.py", line 4, in <module>
    from .models import Choice, Poll, User
  File "/testbed/tests/reverse_lookup/models.py", line 10, in <module>
    class User(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class reverse_lookup.models.User doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: save_delete_hooks.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: save_delete_hooks.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/save_delete_hooks/tests.py", line 3, in <module>
    from .models import Person
  File "/testbed/tests/save_delete_hooks/models.py", line 10, in <module>
    class Person(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class save_delete_hooks.models.Person doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: schema.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: schema.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/schema/tests.py", line 28, in <module>
    from .models import (
  File "/testbed/tests/schema/models.py", line 11, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class schema.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: select_for_update.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: select_for_update.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/select_for_update/tests.py", line 18, in <module>
    from .models import City, Country, EUCity, EUCountry, Person, PersonProfile
  File "/testbed/tests/select_for_update/models.py", line 4, in <module>
    class Entity(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class select_for_update.models.Entity doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: select_related.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: select_related.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/select_related/tests.py", line 4, in <module>
    from .models import (
  File "/testbed/tests/select_related/models.py", line 19, in <module>
    class Domain(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class select_related.models.Domain doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: select_related_onetoone.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: select_related_onetoone.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/select_related_onetoone/tests.py", line 5, in <module>
    from .models import (
  File "/testbed/tests/select_related_onetoone/models.py", line 4, in <module>
    class User(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class select_related_onetoone.models.User doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: select_related_regress.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: select_related_regress.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/select_related_regress/tests.py", line 3, in <module>
    from .models import (
  File "/testbed/tests/select_related_regress/models.py", line 4, in <module>
    class Building(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class select_related_regress.models.Building doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: serializers.models (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: serializers.models
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 462, in _find_test_path
    package = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/serializers/models/__init__.py", line 1, in <module>
    from .base import *  # NOQA
  File "/testbed/tests/serializers/models/base.py", line 18, in <module>
    class CategoryMetaData(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class serializers.models.base.CategoryMetaData doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: serializers.test_data (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: serializers.test_data
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/serializers/test_data.py", line 17, in <module>
    from .models import (
  File "/testbed/tests/serializers/models/__init__.py", line 1, in <module>
    from .base import *  # NOQA
  File "/testbed/tests/serializers/models/base.py", line 18, in <module>
    class CategoryMetaData(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class serializers.models.base.CategoryMetaData doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: serializers.test_deserializedobject (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: serializers.test_deserializedobject
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/serializers/test_deserializedobject.py", line 4, in <module>
    from .models import Author
  File "/testbed/tests/serializers/models/__init__.py", line 1, in <module>
    from .base import *  # NOQA
  File "/testbed/tests/serializers/models/base.py", line 18, in <module>
    class CategoryMetaData(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class serializers.models.base.CategoryMetaData doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: serializers.test_json (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: serializers.test_json
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/serializers/test_json.py", line 14, in <module>
    from .models import Score
  File "/testbed/tests/serializers/models/__init__.py", line 1, in <module>
    from .base import *  # NOQA
  File "/testbed/tests/serializers/models/base.py", line 18, in <module>
    class CategoryMetaData(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class serializers.models.base.CategoryMetaData doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: serializers.test_natural (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: serializers.test_natural
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/serializers/test_natural.py", line 5, in <module>
    from .models import (
  File "/testbed/tests/serializers/models/__init__.py", line 1, in <module>
    from .base import *  # NOQA
  File "/testbed/tests/serializers/models/base.py", line 18, in <module>
    class CategoryMetaData(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class serializers.models.base.CategoryMetaData doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: serializers.test_xml (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: serializers.test_xml
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/serializers/test_xml.py", line 7, in <module>
    from .tests import SerializersTestBase, SerializersTransactionTestBase
  File "/testbed/tests/serializers/tests.py", line 14, in <module>
    from .models import (
  File "/testbed/tests/serializers/models/__init__.py", line 1, in <module>
    from .base import *  # NOQA
  File "/testbed/tests/serializers/models/base.py", line 18, in <module>
    class CategoryMetaData(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class serializers.models.base.CategoryMetaData doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: serializers.test_yaml (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: serializers.test_yaml
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/serializers/test_yaml.py", line 9, in <module>
    from .models import Author
  File "/testbed/tests/serializers/models/__init__.py", line 1, in <module>
    from .base import *  # NOQA
  File "/testbed/tests/serializers/models/base.py", line 18, in <module>
    class CategoryMetaData(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class serializers.models.base.CategoryMetaData doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: serializers.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: serializers.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/serializers/tests.py", line 14, in <module>
    from .models import (
  File "/testbed/tests/serializers/models/__init__.py", line 1, in <module>
    from .base import *  # NOQA
  File "/testbed/tests/serializers/models/base.py", line 18, in <module>
    class CategoryMetaData(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class serializers.models.base.CategoryMetaData doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: servers.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: servers.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/servers/tests.py", line 16, in <module>
    from .models import Person
  File "/testbed/tests/servers/models.py", line 4, in <module>
    class Person(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class servers.models.Person doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: sessions_tests.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: sessions_tests.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/sessions_tests/tests.py", line 38, in <module>
    from .models import SessionStore as CustomDatabaseSession
  File "/testbed/tests/sessions_tests/models.py", line 11, in <module>
    class CustomSession(AbstractBaseSession):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class sessions_tests.models.CustomSession doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: signals.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: signals.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/signals/tests.py", line 10, in <module>
    from .models import Author, Book, Car, Person
  File "/testbed/tests/signals/models.py", line 7, in <module>
    class Person(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class signals.models.Person doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: sitemaps_tests.test_generic (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: sitemaps_tests.test_generic
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/sitemaps_tests/test_generic.py", line 6, in <module>
    from .base import SitemapTestsBase
  File "/testbed/tests/sitemaps_tests/base.py", line 6, in <module>
    from .models import I18nTestModel, TestModel
  File "/testbed/tests/sitemaps_tests/models.py", line 5, in <module>
    class TestModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class sitemaps_tests.models.TestModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: sitemaps_tests.test_http (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: sitemaps_tests.test_http
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/sitemaps_tests/test_http.py", line 13, in <module>
    from .base import SitemapTestsBase
  File "/testbed/tests/sitemaps_tests/base.py", line 6, in <module>
    from .models import I18nTestModel, TestModel
  File "/testbed/tests/sitemaps_tests/models.py", line 5, in <module>
    class TestModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class sitemaps_tests.models.TestModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: sitemaps_tests.test_https (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: sitemaps_tests.test_https
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/sitemaps_tests/test_https.py", line 5, in <module>
    from .base import SitemapTestsBase
  File "/testbed/tests/sitemaps_tests/base.py", line 6, in <module>
    from .models import I18nTestModel, TestModel
  File "/testbed/tests/sitemaps_tests/models.py", line 5, in <module>
    class TestModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class sitemaps_tests.models.TestModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: sitemaps_tests.test_management (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: sitemaps_tests.test_management
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/sitemaps_tests/test_management.py", line 5, in <module>
    from .base import SitemapTestsBase
  File "/testbed/tests/sitemaps_tests/base.py", line 6, in <module>
    from .models import I18nTestModel, TestModel
  File "/testbed/tests/sitemaps_tests/models.py", line 5, in <module>
    class TestModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class sitemaps_tests.models.TestModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: sitemaps_tests.test_utils (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: sitemaps_tests.test_utils
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/sitemaps_tests/test_utils.py", line 10, in <module>
    from .base import SitemapTestsBase
  File "/testbed/tests/sitemaps_tests/base.py", line 6, in <module>
    from .models import I18nTestModel, TestModel
  File "/testbed/tests/sitemaps_tests/models.py", line 5, in <module>
    class TestModel(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class sitemaps_tests.models.TestModel doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: sites_framework.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: sites_framework.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/sites_framework/tests.py", line 9, in <module>
    from .models import CustomArticle, ExclusiveArticle, SyndicatedArticle
  File "/testbed/tests/sites_framework/models.py", line 19, in <module>
    class SyndicatedArticle(AbstractArticle):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class sites_framework.models.SyndicatedArticle doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: str.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: str.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/str/tests.py", line 7, in <module>
    from .models import InternationalArticle
  File "/testbed/tests/str/models.py", line 14, in <module>
    class InternationalArticle(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class str.models.InternationalArticle doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: string_lookup.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: string_lookup.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/string_lookup/tests.py", line 3, in <module>
    from .models import Article, Bar, Base, Child, Foo, Whiz
  File "/testbed/tests/string_lookup/models.py", line 4, in <module>
    class Foo(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class string_lookup.models.Foo doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: swappable_models.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: swappable_models.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/swappable_models/tests.py", line 8, in <module>
    from .models import Article
  File "/testbed/tests/swappable_models/models.py", line 4, in <module>
    class Article(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class swappable_models.models.Article doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: syndication_tests.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: syndication_tests.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/syndication_tests/tests.py", line 12, in <module>
    from .models import Article, Entry
  File "/testbed/tests/syndication_tests/models.py", line 4, in <module>
    class Entry(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class syndication_tests.models.Entry doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: template_tests.test_custom (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: template_tests.test_custom
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/template_tests/test_custom.py", line 9, in <module>
    from .templatetags import custom, inclusion
  File "/testbed/tests/template_tests/templatetags/inclusion.py", line 18, in <module>
    @register.inclusion_tag(engine.get_template('inclusion.html'))
  File "/testbed/django/template/engine.py", line 143, in get_template
    template, origin = self.find_template(template_name)
  File "/testbed/django/template/engine.py", line 129, in find_template
    raise TemplateDoesNotExist(name, tried=tried)
django.template.exceptions.TemplateDoesNotExist: inclusion.html


======================================================================
ERROR: test_runner.test_debug_sql (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: test_runner.test_debug_sql
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/test_runner/test_debug_sql.py", line 8, in <module>
    from .models import Person
  File "/testbed/tests/test_runner/models.py", line 4, in <module>
    class Person(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class test_runner.models.Person doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: test_runner.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: test_runner.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/test_runner/tests.py", line 19, in <module>
    from .models import B, Person, Through
  File "/testbed/tests/test_runner/models.py", line 4, in <module>
    class Person(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class test_runner.models.Person doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: test_utils.test_testcase (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: test_utils.test_testcase
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/test_utils/test_testcase.py", line 4, in <module>
    from .models import Car, PossessedCar
  File "/testbed/tests/test_utils/models.py", line 4, in <module>
    class Car(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class test_utils.models.Car doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: test_utils.test_transactiontestcase (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: test_utils.test_transactiontestcase
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/test_utils/test_transactiontestcase.py", line 6, in <module>
    from .models import Car
  File "/testbed/tests/test_utils/models.py", line 4, in <module>
    class Car(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class test_utils.models.Car doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: test_utils.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: test_utils.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/test_utils/tests.py", line 27, in <module>
    from .models import Car, Person, PossessedCar
  File "/testbed/tests/test_utils/models.py", line 4, in <module>
    class Car(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class test_utils.models.Car doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: timezones.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: timezones.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/timezones/tests.py", line 27, in <module>
    from .forms import (
  File "/testbed/tests/timezones/forms.py", line 3, in <module>
    from .models import Event
  File "/testbed/tests/timezones/models.py", line 4, in <module>
    class Event(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class timezones.models.Event doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: transaction_hooks.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: transaction_hooks.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/transaction_hooks/tests.py", line 4, in <module>
    from .models import Thing
  File "/testbed/tests/transaction_hooks/models.py", line 4, in <module>
    class Thing(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class transaction_hooks.models.Thing doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: transactions.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: transactions.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/transactions/tests.py", line 14, in <module>
    from .models import Reporter
  File "/testbed/tests/transactions/models.py", line 12, in <module>
    class Reporter(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class transactions.models.Reporter doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: unmanaged_models.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: unmanaged_models.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/unmanaged_models/tests.py", line 4, in <module>
    from .models import A01, A02, B01, B02, C01, C02, Managed1, Unmanaged2
  File "/testbed/tests/unmanaged_models/models.py", line 11, in <module>
    class A01(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class unmanaged_models.models.A01 doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: update.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: update.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/update/tests.py", line 6, in <module>
    from .models import A, B, Bar, D, DataPoint, Foo, RelatedPoint
  File "/testbed/tests/update/models.py", line 9, in <module>
    class DataPoint(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class update.models.DataPoint doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: update_only_fields.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: update_only_fields.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/update_only_fields/tests.py", line 4, in <module>
    from .models import Account, Employee, Person, Profile, ProxyEmployee
  File "/testbed/tests/update_only_fields/models.py", line 5, in <module>
    class Account(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class update_only_fields.models.Account doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: utils_tests.test_lazyobject (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: utils_tests.test_lazyobject
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/utils_tests/test_lazyobject.py", line 9, in <module>
    from .models import Category, CategoryInfo
  File "/testbed/tests/utils_tests/models.py", line 4, in <module>
    class Category(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class utils_tests.models.Category doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: validation.test_custom_messages (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: validation.test_custom_messages
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/validation/test_custom_messages.py", line 4, in <module>
    from .models import CustomMessagesModel
  File "/testbed/tests/validation/models.py", line 12, in <module>
    class ModelToValidate(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class validation.models.ModelToValidate doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: validation.test_unique (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: validation.test_unique
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/validation/test_unique.py", line 9, in <module>
    from .models import (
  File "/testbed/tests/validation/models.py", line 12, in <module>
    class ModelToValidate(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class validation.models.ModelToValidate doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: validation.test_validators (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: validation.test_validators
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/validation/test_validators.py", line 4, in <module>
    from .models import ModelToValidate
  File "/testbed/tests/validation/models.py", line 12, in <module>
    class ModelToValidate(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class validation.models.ModelToValidate doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: validation.tests (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: validation.tests
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/validation/tests.py", line 7, in <module>
    from .models import (
  File "/testbed/tests/validation/models.py", line 12, in <module>
    class ModelToValidate(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class validation.models.ModelToValidate doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
ERROR: view_tests.tests.test_defaults (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: view_tests.tests.test_defaults
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 428, in _find_test_path
    module = self._get_module_from_name(name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/unittest/loader.py", line 369, in _get_module_from_name
    __import__(name)
  File "/testbed/tests/view_tests/tests/test_defaults.py", line 12, in <module>
    from ..models import Article, Author, UrlArticle
  File "/testbed/tests/view_tests/models.py", line 8, in <module>
    class Author(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class view_tests.models.Author doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


======================================================================
FAIL: test_access_warning (auth_tests.test_password_reset_timeout_days.DeprecationTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/auth_tests/test_password_reset_timeout_days.py", line 62, in test_access_warning
    settings.PASSWORD_RESET_TIMEOUT_DAYS
  File "/opt/miniconda3/envs/testbed/lib/python3.6/contextlib.py", line 88, in __exit__
    next(self.gen)
  File "/testbed/django/test/testcases.py", line 682, in _assert_raises_or_warns_cm
    yield cm
AssertionError: RemovedInDjango40Warning not raised

======================================================================
FAIL: test_override_settings_warning (auth_tests.test_password_reset_timeout_days.DeprecationTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/auth_tests/test_password_reset_timeout_days.py", line 47, in test_override_settings_warning
    pass
  File "/opt/miniconda3/envs/testbed/lib/python3.6/contextlib.py", line 88, in __exit__
    next(self.gen)
  File "/testbed/django/test/testcases.py", line 682, in _assert_raises_or_warns_cm
    yield cm
AssertionError: RemovedInDjango40Warning not raised

======================================================================
FAIL: test_settings_init_warning (auth_tests.test_password_reset_timeout_days.DeprecationTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/auth_tests/test_password_reset_timeout_days.py", line 56, in test_settings_init_warning
    Settings('fake_settings_module')
  File "/opt/miniconda3/envs/testbed/lib/python3.6/contextlib.py", line 88, in __exit__
    next(self.gen)
  File "/testbed/django/test/testcases.py", line 682, in _assert_raises_or_warns_cm
    yield cm
AssertionError: RemovedInDjango40Warning not raised

======================================================================
FAIL: test_ignore_files (migrations.test_loader.LoaderTests)
Files prefixed with underscore, tilde, or dot aren't loaded.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/migrations/test_loader.py", line 509, in test_ignore_files
    self.assertEqual(migrations, ['0001_initial'])
AssertionError: Lists differ: [] != ['0001_initial']

Second list contains 1 additional elements.
First extra element 0:
'0001_initial'

- []
+ ['0001_initial']

======================================================================
FAIL: test_load_empty_dir (migrations.test_loader.LoaderTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/migrations/test_loader.py", line 197, in test_load_empty_dir
    "App missing __init__.py in migrations module not in unmigrated apps."
AssertionError: 'migrations' not found in {'staticfiles', 'sitemaps', 'messages', 'test_app'} : App missing __init__.py in migrations module not in unmigrated apps.

======================================================================
FAIL: test_load_import_error (migrations.test_loader.LoaderTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/migrations/test_loader.py", line 182, in test_load_import_error
    MigrationLoader(connection)
AssertionError: ImportError not raised

======================================================================
FAIL: test_load_module_file (migrations.test_loader.LoaderTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/migrations/test_loader.py", line 189, in test_load_module_file
    "App with migrations module file not in unmigrated apps."
AssertionError: 'migrations' not found in {'staticfiles', 'sitemaps', 'messages', 'test_app'} : App with migrations module file not in unmigrated apps.

======================================================================
FAIL: test_loading_squashed (migrations.test_loader.LoaderTests)
Tests loading a squashed migration
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/migrations/test_loader.py", line 248, in test_loading_squashed
    1,
AssertionError: 0 != 1

======================================================================
FAIL: test_lang_from_translated_i18n_pattern (view_tests.tests.test_i18n.SetLanguageTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/view_tests/tests/test_i18n.py", line 225, in test_lang_from_translated_i18n_pattern
    self.assertRedirects(response, '/nl/vertaald/')
  File "/testbed/django/test/testcases.py", line 390, in assertRedirects
    msg_prefix + "Response redirected to '%s', expected '%s'" % (url, expected_url)
  File "/testbed/django/test/testcases.py", line 410, in assertURLEqual
    msg_prefix + "Expected '%s' to equal '%s'." % (url1, url2)
AssertionError: '/nl/translated/' != '/nl/vertaald/'
- /nl/translated/
+ /nl/vertaald/
 : Response redirected to '/nl/translated/', expected '/nl/vertaald/'Expected '/nl/translated/' to equal '/nl/vertaald/'.

======================================================================
FAIL: test_double_call_autodiscover (admin_autodiscover.tests.AdminAutoDiscoverTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/admin_autodiscover/tests.py", line 13, in test_double_call_autodiscover
    admin.autodiscover()
  File "/opt/miniconda3/envs/testbed/lib/python3.6/contextlib.py", line 88, in __exit__
    next(self.gen)
  File "/testbed/django/test/testcases.py", line 682, in _assert_raises_or_warns_cm
    yield cm
AssertionError: Exception not raised

======================================================================
FAIL: test_unified (admin_scripts.tests.DiffSettings)
--output=unified emits settings diff in unified mode.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/admin_scripts/tests.py", line 2231, in test_unified
    self.assertOutput(out, "+ SECRET_KEY = 'django_tests_secret_key'")
  File "/testbed/tests/admin_scripts/tests.py", line 159, in assertOutput
    self.assertIn(msg, stream, "'%s' does not match actual output text '%s'" % (msg, stream))
AssertionError: "+ SECRET_KEY = 'django_tests_secret_key'" not found in "- DATABASES = {}\n+ DATABASES = {'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': 'file:memorydb_default?mode=memory&cache=shared', 'ATOMIC_REQUESTS': False, 'AUTOCOMMIT': True, 'CONN_MAX_AGE': 0, 'OPTIONS': {}, 'TIME_ZONE': None, 'USER': '', 'PASSWORD': '', 'HOST': '', 'PORT': '', 'TEST': {'CHARSET': None, 'COLLATION': None, 'MIGRATE': True, 'MIRROR': None, 'NAME': None}}}\n+ FOO = 'bar'\n- INSTALLED_APPS = []\n+ INSTALLED_APPS = ['django.contrib.auth', 'django.contrib.contenttypes', 'admin_scripts']\n+ ROOT_URLCONF = 'flatpages_tests.urls'\n- SECRET_KEY = ''\n+ SECRET_KEY = 'dummy-key-for-tests'\n+ SETTINGS_MODULE = 'settings_to_diff'\n" : '+ SECRET_KEY = 'django_tests_secret_key'' does not match actual output text '- DATABASES = {}
+ DATABASES = {'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': 'file:memorydb_default?mode=memory&cache=shared', 'ATOMIC_REQUESTS': False, 'AUTOCOMMIT': True, 'CONN_MAX_AGE': 0, 'OPTIONS': {}, 'TIME_ZONE': None, 'USER': '', 'PASSWORD': '', 'HOST': '', 'PORT': '', 'TEST': {'CHARSET': None, 'COLLATION': None, 'MIGRATE': True, 'MIRROR': None, 'NAME': None}}}
+ FOO = 'bar'
- INSTALLED_APPS = []
+ INSTALLED_APPS = ['django.contrib.auth', 'django.contrib.contenttypes', 'admin_scripts']
+ ROOT_URLCONF = 'flatpages_tests.urls'
- SECRET_KEY = ''
+ SECRET_KEY = 'dummy-key-for-tests'
+ SETTINGS_MODULE = 'settings_to_diff'
'

======================================================================
FAIL: test_builtin_with_environment (admin_scripts.tests.DjangoAdminAlternateSettings)
alternate: django-admin builtin commands succeed if settings are provided in the environment
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/admin_scripts/tests.py", line 432, in test_builtin_with_environment
    self.assertNoOutput(err)
  File "/testbed/tests/admin_scripts/tests.py", line 149, in assertNoOutput
    self.assertEqual(len(stream), 0, "Stream should be empty: actually contains '%s'" % stream)
AssertionError: 4159 != 0 : Stream should be empty: actually contains 'Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/testbed/django/__main__.py", line 9, in <module>
    management.execute_from_command_line()
  File "/testbed/django/core/management/__init__.py", line 401, in execute_from_command_line
    utility.execute()
  File "/testbed/django/core/management/__init__.py", line 395, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "/testbed/django/core/management/base.py", line 328, in run_from_argv
    self.execute(*args, **cmd_options)
  File "/testbed/django/core/management/base.py", line 369, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/core/management/commands/check.py", line 69, in handle
    databases=options['databases'],
  File "/testbed/django/core/management/base.py", line 394, in check
    databases=databases,
  File "/testbed/django/core/checks/registry.py", line 68, in run_checks
    new_errors = check(app_configs=app_configs, databases=databases)
  File "/testbed/django/core/checks/urls.py", line 40, in check_url_namespaces_unique
    all_namespaces = _load_all_namespaces(resolver)
  File "/testbed/django/core/checks/urls.py", line 57, in _load_all_namespaces
    url_patterns = getattr(resolver, 'url_patterns', [])
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 589, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 582, in urlconf_module
    return import_module(self.urlconf_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/flatpages_tests/urls.py", line 11, in <module>
    path('flatpage_root/', include('django.contrib.flatpages.urls')),
  File "/testbed/django/urls/conf.py", line 34, in include
    urlconf_module = import_module(urlconf_module)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/django/contrib/flatpages/urls.py", line 1, in <module>
    from django.contrib.flatpages import views
  File "/testbed/django/contrib/flatpages/views.py", line 2, in <module>
    from django.contrib.flatpages.models import FlatPage
  File "/testbed/django/contrib/flatpages/models.py", line 1, in <module>
    from django.contrib.sites.models import Site
  File "/testbed/django/contrib/sites/models.py", line 78, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class django.contrib.sites.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.
'

======================================================================
FAIL: test_builtin_with_settings (admin_scripts.tests.DjangoAdminAlternateSettings)
alternate: django-admin builtin commands succeed if settings are provided as argument
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/admin_scripts/tests.py", line 425, in test_builtin_with_settings
    self.assertNoOutput(err)
  File "/testbed/tests/admin_scripts/tests.py", line 149, in assertNoOutput
    self.assertEqual(len(stream), 0, "Stream should be empty: actually contains '%s'" % stream)
AssertionError: 4159 != 0 : Stream should be empty: actually contains 'Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/testbed/django/__main__.py", line 9, in <module>
    management.execute_from_command_line()
  File "/testbed/django/core/management/__init__.py", line 401, in execute_from_command_line
    utility.execute()
  File "/testbed/django/core/management/__init__.py", line 395, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "/testbed/django/core/management/base.py", line 328, in run_from_argv
    self.execute(*args, **cmd_options)
  File "/testbed/django/core/management/base.py", line 369, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/core/management/commands/check.py", line 69, in handle
    databases=options['databases'],
  File "/testbed/django/core/management/base.py", line 394, in check
    databases=databases,
  File "/testbed/django/core/checks/registry.py", line 68, in run_checks
    new_errors = check(app_configs=app_configs, databases=databases)
  File "/testbed/django/core/checks/urls.py", line 40, in check_url_namespaces_unique
    all_namespaces = _load_all_namespaces(resolver)
  File "/testbed/django/core/checks/urls.py", line 57, in _load_all_namespaces
    url_patterns = getattr(resolver, 'url_patterns', [])
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 589, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 582, in urlconf_module
    return import_module(self.urlconf_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/flatpages_tests/urls.py", line 11, in <module>
    path('flatpage_root/', include('django.contrib.flatpages.urls')),
  File "/testbed/django/urls/conf.py", line 34, in include
    urlconf_module = import_module(urlconf_module)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/django/contrib/flatpages/urls.py", line 1, in <module>
    from django.contrib.flatpages import views
  File "/testbed/django/contrib/flatpages/views.py", line 2, in <module>
    from django.contrib.flatpages.models import FlatPage
  File "/testbed/django/contrib/flatpages/models.py", line 1, in <module>
    from django.contrib.sites.models import Site
  File "/testbed/django/contrib/sites/models.py", line 78, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class django.contrib.sites.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.
'

======================================================================
FAIL: test_builtin_with_environment (admin_scripts.tests.DjangoAdminDefaultSettings)
default: django-admin builtin commands succeed if settings are provided in the environment
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/admin_scripts/tests.py", line 233, in test_builtin_with_environment
    self.assertNoOutput(err)
  File "/testbed/tests/admin_scripts/tests.py", line 149, in assertNoOutput
    self.assertEqual(len(stream), 0, "Stream should be empty: actually contains '%s'" % stream)
AssertionError: 4159 != 0 : Stream should be empty: actually contains 'Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/testbed/django/__main__.py", line 9, in <module>
    management.execute_from_command_line()
  File "/testbed/django/core/management/__init__.py", line 401, in execute_from_command_line
    utility.execute()
  File "/testbed/django/core/management/__init__.py", line 395, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "/testbed/django/core/management/base.py", line 328, in run_from_argv
    self.execute(*args, **cmd_options)
  File "/testbed/django/core/management/base.py", line 369, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/core/management/commands/check.py", line 69, in handle
    databases=options['databases'],
  File "/testbed/django/core/management/base.py", line 394, in check
    databases=databases,
  File "/testbed/django/core/checks/registry.py", line 68, in run_checks
    new_errors = check(app_configs=app_configs, databases=databases)
  File "/testbed/django/core/checks/urls.py", line 40, in check_url_namespaces_unique
    all_namespaces = _load_all_namespaces(resolver)
  File "/testbed/django/core/checks/urls.py", line 57, in _load_all_namespaces
    url_patterns = getattr(resolver, 'url_patterns', [])
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 589, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 582, in urlconf_module
    return import_module(self.urlconf_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/flatpages_tests/urls.py", line 11, in <module>
    path('flatpage_root/', include('django.contrib.flatpages.urls')),
  File "/testbed/django/urls/conf.py", line 34, in include
    urlconf_module = import_module(urlconf_module)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/django/contrib/flatpages/urls.py", line 1, in <module>
    from django.contrib.flatpages import views
  File "/testbed/django/contrib/flatpages/views.py", line 2, in <module>
    from django.contrib.flatpages.models import FlatPage
  File "/testbed/django/contrib/flatpages/models.py", line 1, in <module>
    from django.contrib.sites.models import Site
  File "/testbed/django/contrib/sites/models.py", line 78, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class django.contrib.sites.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.
'

======================================================================
FAIL: test_builtin_with_settings (admin_scripts.tests.DjangoAdminDefaultSettings)
default: django-admin builtin commands succeed if settings are provided as argument
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/admin_scripts/tests.py", line 226, in test_builtin_with_settings
    self.assertNoOutput(err)
  File "/testbed/tests/admin_scripts/tests.py", line 149, in assertNoOutput
    self.assertEqual(len(stream), 0, "Stream should be empty: actually contains '%s'" % stream)
AssertionError: 4159 != 0 : Stream should be empty: actually contains 'Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/testbed/django/__main__.py", line 9, in <module>
    management.execute_from_command_line()
  File "/testbed/django/core/management/__init__.py", line 401, in execute_from_command_line
    utility.execute()
  File "/testbed/django/core/management/__init__.py", line 395, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "/testbed/django/core/management/base.py", line 328, in run_from_argv
    self.execute(*args, **cmd_options)
  File "/testbed/django/core/management/base.py", line 369, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/core/management/commands/check.py", line 69, in handle
    databases=options['databases'],
  File "/testbed/django/core/management/base.py", line 394, in check
    databases=databases,
  File "/testbed/django/core/checks/registry.py", line 68, in run_checks
    new_errors = check(app_configs=app_configs, databases=databases)
  File "/testbed/django/core/checks/urls.py", line 40, in check_url_namespaces_unique
    all_namespaces = _load_all_namespaces(resolver)
  File "/testbed/django/core/checks/urls.py", line 57, in _load_all_namespaces
    url_patterns = getattr(resolver, 'url_patterns', [])
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 589, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 582, in urlconf_module
    return import_module(self.urlconf_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/flatpages_tests/urls.py", line 11, in <module>
    path('flatpage_root/', include('django.contrib.flatpages.urls')),
  File "/testbed/django/urls/conf.py", line 34, in include
    urlconf_module = import_module(urlconf_module)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/django/contrib/flatpages/urls.py", line 1, in <module>
    from django.contrib.flatpages import views
  File "/testbed/django/contrib/flatpages/views.py", line 2, in <module>
    from django.contrib.flatpages.models import FlatPage
  File "/testbed/django/contrib/flatpages/models.py", line 1, in <module>
    from django.contrib.sites.models import Site
  File "/testbed/django/contrib/sites/models.py", line 78, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class django.contrib.sites.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.
'

======================================================================
FAIL: test_builtin_with_environment (admin_scripts.tests.DjangoAdminFullPathDefaultSettings)
fulldefault: django-admin builtin commands succeed if the environment contains settings
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/admin_scripts/tests.py", line 300, in test_builtin_with_environment
    self.assertNoOutput(err)
  File "/testbed/tests/admin_scripts/tests.py", line 149, in assertNoOutput
    self.assertEqual(len(stream), 0, "Stream should be empty: actually contains '%s'" % stream)
AssertionError: 4159 != 0 : Stream should be empty: actually contains 'Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/testbed/django/__main__.py", line 9, in <module>
    management.execute_from_command_line()
  File "/testbed/django/core/management/__init__.py", line 401, in execute_from_command_line
    utility.execute()
  File "/testbed/django/core/management/__init__.py", line 395, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "/testbed/django/core/management/base.py", line 328, in run_from_argv
    self.execute(*args, **cmd_options)
  File "/testbed/django/core/management/base.py", line 369, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/core/management/commands/check.py", line 69, in handle
    databases=options['databases'],
  File "/testbed/django/core/management/base.py", line 394, in check
    databases=databases,
  File "/testbed/django/core/checks/registry.py", line 68, in run_checks
    new_errors = check(app_configs=app_configs, databases=databases)
  File "/testbed/django/core/checks/urls.py", line 40, in check_url_namespaces_unique
    all_namespaces = _load_all_namespaces(resolver)
  File "/testbed/django/core/checks/urls.py", line 57, in _load_all_namespaces
    url_patterns = getattr(resolver, 'url_patterns', [])
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 589, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 582, in urlconf_module
    return import_module(self.urlconf_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/flatpages_tests/urls.py", line 11, in <module>
    path('flatpage_root/', include('django.contrib.flatpages.urls')),
  File "/testbed/django/urls/conf.py", line 34, in include
    urlconf_module = import_module(urlconf_module)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/django/contrib/flatpages/urls.py", line 1, in <module>
    from django.contrib.flatpages import views
  File "/testbed/django/contrib/flatpages/views.py", line 2, in <module>
    from django.contrib.flatpages.models import FlatPage
  File "/testbed/django/contrib/flatpages/models.py", line 1, in <module>
    from django.contrib.sites.models import Site
  File "/testbed/django/contrib/sites/models.py", line 78, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class django.contrib.sites.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.
'

======================================================================
FAIL: test_builtin_with_settings (admin_scripts.tests.DjangoAdminFullPathDefaultSettings)
fulldefault: django-admin builtin commands succeed if a settings file is provided
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/admin_scripts/tests.py", line 293, in test_builtin_with_settings
    self.assertNoOutput(err)
  File "/testbed/tests/admin_scripts/tests.py", line 149, in assertNoOutput
    self.assertEqual(len(stream), 0, "Stream should be empty: actually contains '%s'" % stream)
AssertionError: 4159 != 0 : Stream should be empty: actually contains 'Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/testbed/django/__main__.py", line 9, in <module>
    management.execute_from_command_line()
  File "/testbed/django/core/management/__init__.py", line 401, in execute_from_command_line
    utility.execute()
  File "/testbed/django/core/management/__init__.py", line 395, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "/testbed/django/core/management/base.py", line 328, in run_from_argv
    self.execute(*args, **cmd_options)
  File "/testbed/django/core/management/base.py", line 369, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/core/management/commands/check.py", line 69, in handle
    databases=options['databases'],
  File "/testbed/django/core/management/base.py", line 394, in check
    databases=databases,
  File "/testbed/django/core/checks/registry.py", line 68, in run_checks
    new_errors = check(app_configs=app_configs, databases=databases)
  File "/testbed/django/core/checks/urls.py", line 40, in check_url_namespaces_unique
    all_namespaces = _load_all_namespaces(resolver)
  File "/testbed/django/core/checks/urls.py", line 57, in _load_all_namespaces
    url_patterns = getattr(resolver, 'url_patterns', [])
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 589, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 582, in urlconf_module
    return import_module(self.urlconf_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/flatpages_tests/urls.py", line 11, in <module>
    path('flatpage_root/', include('django.contrib.flatpages.urls')),
  File "/testbed/django/urls/conf.py", line 34, in include
    urlconf_module = import_module(urlconf_module)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/django/contrib/flatpages/urls.py", line 1, in <module>
    from django.contrib.flatpages import views
  File "/testbed/django/contrib/flatpages/views.py", line 2, in <module>
    from django.contrib.flatpages.models import FlatPage
  File "/testbed/django/contrib/flatpages/models.py", line 1, in <module>
    from django.contrib.sites.models import Site
  File "/testbed/django/contrib/sites/models.py", line 78, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class django.contrib.sites.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.
'

======================================================================
FAIL: test_builtin_with_environment (admin_scripts.tests.DjangoAdminMultipleSettings)
alternate: django-admin builtin commands succeed if settings are provided in the environment
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/admin_scripts/tests.py", line 501, in test_builtin_with_environment
    self.assertNoOutput(err)
  File "/testbed/tests/admin_scripts/tests.py", line 149, in assertNoOutput
    self.assertEqual(len(stream), 0, "Stream should be empty: actually contains '%s'" % stream)
AssertionError: 4159 != 0 : Stream should be empty: actually contains 'Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/testbed/django/__main__.py", line 9, in <module>
    management.execute_from_command_line()
  File "/testbed/django/core/management/__init__.py", line 401, in execute_from_command_line
    utility.execute()
  File "/testbed/django/core/management/__init__.py", line 395, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "/testbed/django/core/management/base.py", line 328, in run_from_argv
    self.execute(*args, **cmd_options)
  File "/testbed/django/core/management/base.py", line 369, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/core/management/commands/check.py", line 69, in handle
    databases=options['databases'],
  File "/testbed/django/core/management/base.py", line 394, in check
    databases=databases,
  File "/testbed/django/core/checks/registry.py", line 68, in run_checks
    new_errors = check(app_configs=app_configs, databases=databases)
  File "/testbed/django/core/checks/urls.py", line 40, in check_url_namespaces_unique
    all_namespaces = _load_all_namespaces(resolver)
  File "/testbed/django/core/checks/urls.py", line 57, in _load_all_namespaces
    url_patterns = getattr(resolver, 'url_patterns', [])
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 589, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 582, in urlconf_module
    return import_module(self.urlconf_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/flatpages_tests/urls.py", line 11, in <module>
    path('flatpage_root/', include('django.contrib.flatpages.urls')),
  File "/testbed/django/urls/conf.py", line 34, in include
    urlconf_module = import_module(urlconf_module)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/django/contrib/flatpages/urls.py", line 1, in <module>
    from django.contrib.flatpages import views
  File "/testbed/django/contrib/flatpages/views.py", line 2, in <module>
    from django.contrib.flatpages.models import FlatPage
  File "/testbed/django/contrib/flatpages/models.py", line 1, in <module>
    from django.contrib.sites.models import Site
  File "/testbed/django/contrib/sites/models.py", line 78, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class django.contrib.sites.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.
'

======================================================================
FAIL: test_builtin_with_settings (admin_scripts.tests.DjangoAdminMultipleSettings)
alternate: django-admin builtin commands succeed if settings are provided as argument
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/admin_scripts/tests.py", line 494, in test_builtin_with_settings
    self.assertNoOutput(err)
  File "/testbed/tests/admin_scripts/tests.py", line 149, in assertNoOutput
    self.assertEqual(len(stream), 0, "Stream should be empty: actually contains '%s'" % stream)
AssertionError: 4159 != 0 : Stream should be empty: actually contains 'Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/testbed/django/__main__.py", line 9, in <module>
    management.execute_from_command_line()
  File "/testbed/django/core/management/__init__.py", line 401, in execute_from_command_line
    utility.execute()
  File "/testbed/django/core/management/__init__.py", line 395, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "/testbed/django/core/management/base.py", line 328, in run_from_argv
    self.execute(*args, **cmd_options)
  File "/testbed/django/core/management/base.py", line 369, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/core/management/commands/check.py", line 69, in handle
    databases=options['databases'],
  File "/testbed/django/core/management/base.py", line 394, in check
    databases=databases,
  File "/testbed/django/core/checks/registry.py", line 68, in run_checks
    new_errors = check(app_configs=app_configs, databases=databases)
  File "/testbed/django/core/checks/urls.py", line 40, in check_url_namespaces_unique
    all_namespaces = _load_all_namespaces(resolver)
  File "/testbed/django/core/checks/urls.py", line 57, in _load_all_namespaces
    url_patterns = getattr(resolver, 'url_patterns', [])
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 589, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 582, in urlconf_module
    return import_module(self.urlconf_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/flatpages_tests/urls.py", line 11, in <module>
    path('flatpage_root/', include('django.contrib.flatpages.urls')),
  File "/testbed/django/urls/conf.py", line 34, in include
    urlconf_module = import_module(urlconf_module)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/django/contrib/flatpages/urls.py", line 1, in <module>
    from django.contrib.flatpages import views
  File "/testbed/django/contrib/flatpages/views.py", line 2, in <module>
    from django.contrib.flatpages.models import FlatPage
  File "/testbed/django/contrib/flatpages/models.py", line 1, in <module>
    from django.contrib.sites.models import Site
  File "/testbed/django/contrib/sites/models.py", line 78, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class django.contrib.sites.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.
'

======================================================================
FAIL: test_builtin_with_environment (admin_scripts.tests.DjangoAdminSettingsDirectory)
directory: django-admin builtin commands succeed if settings are provided in the environment
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/admin_scripts/tests.py", line 623, in test_builtin_with_environment
    self.assertNoOutput(err)
  File "/testbed/tests/admin_scripts/tests.py", line 149, in assertNoOutput
    self.assertEqual(len(stream), 0, "Stream should be empty: actually contains '%s'" % stream)
AssertionError: 4159 != 0 : Stream should be empty: actually contains 'Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/testbed/django/__main__.py", line 9, in <module>
    management.execute_from_command_line()
  File "/testbed/django/core/management/__init__.py", line 401, in execute_from_command_line
    utility.execute()
  File "/testbed/django/core/management/__init__.py", line 395, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "/testbed/django/core/management/base.py", line 328, in run_from_argv
    self.execute(*args, **cmd_options)
  File "/testbed/django/core/management/base.py", line 369, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/core/management/commands/check.py", line 69, in handle
    databases=options['databases'],
  File "/testbed/django/core/management/base.py", line 394, in check
    databases=databases,
  File "/testbed/django/core/checks/registry.py", line 68, in run_checks
    new_errors = check(app_configs=app_configs, databases=databases)
  File "/testbed/django/core/checks/urls.py", line 40, in check_url_namespaces_unique
    all_namespaces = _load_all_namespaces(resolver)
  File "/testbed/django/core/checks/urls.py", line 57, in _load_all_namespaces
    url_patterns = getattr(resolver, 'url_patterns', [])
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 589, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 582, in urlconf_module
    return import_module(self.urlconf_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/flatpages_tests/urls.py", line 11, in <module>
    path('flatpage_root/', include('django.contrib.flatpages.urls')),
  File "/testbed/django/urls/conf.py", line 34, in include
    urlconf_module = import_module(urlconf_module)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/django/contrib/flatpages/urls.py", line 1, in <module>
    from django.contrib.flatpages import views
  File "/testbed/django/contrib/flatpages/views.py", line 2, in <module>
    from django.contrib.flatpages.models import FlatPage
  File "/testbed/django/contrib/flatpages/models.py", line 1, in <module>
    from django.contrib.sites.models import Site
  File "/testbed/django/contrib/sites/models.py", line 78, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class django.contrib.sites.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.
'

======================================================================
FAIL: test_builtin_with_settings (admin_scripts.tests.DjangoAdminSettingsDirectory)
directory: django-admin builtin commands succeed if settings are provided as argument
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/admin_scripts/tests.py", line 616, in test_builtin_with_settings
    self.assertNoOutput(err)
  File "/testbed/tests/admin_scripts/tests.py", line 149, in assertNoOutput
    self.assertEqual(len(stream), 0, "Stream should be empty: actually contains '%s'" % stream)
AssertionError: 4159 != 0 : Stream should be empty: actually contains 'Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/testbed/django/__main__.py", line 9, in <module>
    management.execute_from_command_line()
  File "/testbed/django/core/management/__init__.py", line 401, in execute_from_command_line
    utility.execute()
  File "/testbed/django/core/management/__init__.py", line 395, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "/testbed/django/core/management/base.py", line 328, in run_from_argv
    self.execute(*args, **cmd_options)
  File "/testbed/django/core/management/base.py", line 369, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/core/management/commands/check.py", line 69, in handle
    databases=options['databases'],
  File "/testbed/django/core/management/base.py", line 394, in check
    databases=databases,
  File "/testbed/django/core/checks/registry.py", line 68, in run_checks
    new_errors = check(app_configs=app_configs, databases=databases)
  File "/testbed/django/core/checks/urls.py", line 40, in check_url_namespaces_unique
    all_namespaces = _load_all_namespaces(resolver)
  File "/testbed/django/core/checks/urls.py", line 57, in _load_all_namespaces
    url_patterns = getattr(resolver, 'url_patterns', [])
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 589, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 582, in urlconf_module
    return import_module(self.urlconf_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/flatpages_tests/urls.py", line 11, in <module>
    path('flatpage_root/', include('django.contrib.flatpages.urls')),
  File "/testbed/django/urls/conf.py", line 34, in include
    urlconf_module = import_module(urlconf_module)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/django/contrib/flatpages/urls.py", line 1, in <module>
    from django.contrib.flatpages import views
  File "/testbed/django/contrib/flatpages/views.py", line 2, in <module>
    from django.contrib.flatpages.models import FlatPage
  File "/testbed/django/contrib/flatpages/models.py", line 1, in <module>
    from django.contrib.sites.models import Site
  File "/testbed/django/contrib/sites/models.py", line 78, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class django.contrib.sites.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.
'

======================================================================
FAIL: test_pks_parsing (admin_scripts.tests.Dumpdata)
Regression for #20509
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/admin_scripts/tests.py", line 2262, in test_pks_parsing
    self.assertOutput(err, "You can only use --pks option with one model")
  File "/testbed/tests/admin_scripts/tests.py", line 159, in assertOutput
    self.assertIn(msg, stream, "'%s' does not match actual output text '%s'" % (msg, stream))
AssertionError: 'You can only use --pks option with one model' not found in 'Traceback (most recent call last):\n  File "./manage.py", line 22, in <module>\n    main()\n  File "./manage.py", line 18, in main\n    execute_from_command_line(sys.argv)\n  File "/testbed/django/core/management/__init__.py", line 401, in execute_from_command_line\n    utility.execute()\n  File "/testbed/django/core/management/__init__.py", line 395, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File "/testbed/django/core/management/base.py", line 328, in run_from_argv\n    self.execute(*args, **cmd_options)\n  File "/testbed/django/core/management/base.py", line 366, in execute\n    self.check()\n  File "/testbed/django/core/management/base.py", line 394, in check\n    databases=databases,\n  File "/testbed/django/core/checks/registry.py", line 68, in run_checks\n    new_errors = check(app_configs=app_configs, databases=databases)\n  File "/testbed/django/core/checks/urls.py", line 40, in check_url_namespaces_unique\n    all_namespaces = _load_all_namespaces(resolver)\n  File "/testbed/django/core/checks/urls.py", line 57, in _load_all_namespaces\n    url_patterns = getattr(resolver, \'url_patterns\', [])\n  File "/testbed/django/utils/functional.py", line 48, in __get__\n    res = instance.__dict__[self.name] = self.func(instance)\n  File "/testbed/django/urls/resolvers.py", line 589, in url_patterns\n    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)\n  File "/testbed/django/utils/functional.py", line 48, in __get__\n    res = instance.__dict__[self.name] = self.func(instance)\n  File "/testbed/django/urls/resolvers.py", line 582, in urlconf_module\n    return import_module(self.urlconf_name)\n  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n  File "<frozen importlib._bootstrap>", line 994, in _gcd_import\n  File "<frozen importlib._bootstrap>", line 971, in _find_and_load\n  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked\n  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked\n  File "<frozen importlib._bootstrap_external>", line 678, in exec_module\n  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed\n  File "/testbed/tests/flatpages_tests/urls.py", line 11, in <module>\n    path(\'flatpage_root/\', include(\'django.contrib.flatpages.urls\')),\n  File "/testbed/django/urls/conf.py", line 34, in include\n    urlconf_module = import_module(urlconf_module)\n  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n  File "<frozen importlib._bootstrap>", line 994, in _gcd_import\n  File "<frozen importlib._bootstrap>", line 971, in _find_and_load\n  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked\n  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked\n  File "<frozen importlib._bootstrap_external>", line 678, in exec_module\n  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed\n  File "/testbed/django/contrib/flatpages/urls.py", line 1, in <module>\n    from django.contrib.flatpages import views\n  File "/testbed/django/contrib/flatpages/views.py", line 2, in <module>\n    from django.contrib.flatpages.models import FlatPage\n  File "/testbed/django/contrib/flatpages/models.py", line 1, in <module>\n    from django.contrib.sites.models import Site\n  File "/testbed/django/contrib/sites/models.py", line 78, in <module>\n    class Site(models.Model):\n  File "/testbed/django/db/models/base.py", line 116, in __new__\n    "INSTALLED_APPS." % (module, name)\nRuntimeError: Model class django.contrib.sites.models.Site doesn\'t declare an explicit app_label and isn\'t in an application in INSTALLED_APPS.\n' : 'You can only use --pks option with one model' does not match actual output text 'Traceback (most recent call last):
  File "./manage.py", line 22, in <module>
    main()
  File "./manage.py", line 18, in main
    execute_from_command_line(sys.argv)
  File "/testbed/django/core/management/__init__.py", line 401, in execute_from_command_line
    utility.execute()
  File "/testbed/django/core/management/__init__.py", line 395, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "/testbed/django/core/management/base.py", line 328, in run_from_argv
    self.execute(*args, **cmd_options)
  File "/testbed/django/core/management/base.py", line 366, in execute
    self.check()
  File "/testbed/django/core/management/base.py", line 394, in check
    databases=databases,
  File "/testbed/django/core/checks/registry.py", line 68, in run_checks
    new_errors = check(app_configs=app_configs, databases=databases)
  File "/testbed/django/core/checks/urls.py", line 40, in check_url_namespaces_unique
    all_namespaces = _load_all_namespaces(resolver)
  File "/testbed/django/core/checks/urls.py", line 57, in _load_all_namespaces
    url_patterns = getattr(resolver, 'url_patterns', [])
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 589, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 582, in urlconf_module
    return import_module(self.urlconf_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/flatpages_tests/urls.py", line 11, in <module>
    path('flatpage_root/', include('django.contrib.flatpages.urls')),
  File "/testbed/django/urls/conf.py", line 34, in include
    urlconf_module = import_module(urlconf_module)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/django/contrib/flatpages/urls.py", line 1, in <module>
    from django.contrib.flatpages import views
  File "/testbed/django/contrib/flatpages/views.py", line 2, in <module>
    from django.contrib.flatpages.models import FlatPage
  File "/testbed/django/contrib/flatpages/models.py", line 1, in <module>
    from django.contrib.sites.models import Site
  File "/testbed/django/contrib/sites/models.py", line 78, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class django.contrib.sites.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.
'

======================================================================
FAIL: test_builtin_with_environment (admin_scripts.tests.ManageAlternateSettings)
alternate: manage.py builtin commands work if settings are provided in the environment
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/admin_scripts/tests.py", line 888, in test_builtin_with_environment
    self.assertOutput(out, SYSTEM_CHECK_MSG)
  File "/testbed/tests/admin_scripts/tests.py", line 159, in assertOutput
    self.assertIn(msg, stream, "'%s' does not match actual output text '%s'" % (msg, stream))
AssertionError: 'System check identified no issues' not found in '' : 'System check identified no issues' does not match actual output text ''

======================================================================
FAIL: test_builtin_with_settings (admin_scripts.tests.ManageAlternateSettings)
alternate: manage.py builtin commands work with settings provided as argument
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/admin_scripts/tests.py", line 881, in test_builtin_with_settings
    self.assertOutput(out, SYSTEM_CHECK_MSG)
  File "/testbed/tests/admin_scripts/tests.py", line 159, in assertOutput
    self.assertIn(msg, stream, "'%s' does not match actual output text '%s'" % (msg, stream))
AssertionError: 'System check identified no issues' not found in '' : 'System check identified no issues' does not match actual output text ''

======================================================================
FAIL: test_app_with_import (admin_scripts.tests.ManageCheck)
manage.py check does not raise errors when an app imports a base
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/admin_scripts/tests.py", line 1156, in test_app_with_import
    self.assertNoOutput(err)
  File "/testbed/tests/admin_scripts/tests.py", line 149, in assertNoOutput
    self.assertEqual(len(stream), 0, "Stream should be empty: actually contains '%s'" % stream)
AssertionError: 3850 != 0 : Stream should be empty: actually contains 'Traceback (most recent call last):
  File "./manage.py", line 22, in <module>
    main()
  File "./manage.py", line 18, in main
    execute_from_command_line(sys.argv)
  File "/testbed/django/core/management/__init__.py", line 401, in execute_from_command_line
    utility.execute()
  File "/testbed/django/core/management/__init__.py", line 395, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "/testbed/django/core/management/base.py", line 328, in run_from_argv
    self.execute(*args, **cmd_options)
  File "/testbed/django/core/management/base.py", line 369, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/core/management/commands/check.py", line 69, in handle
    databases=options['databases'],
  File "/testbed/django/core/management/base.py", line 394, in check
    databases=databases,
  File "/testbed/django/core/checks/registry.py", line 68, in run_checks
    new_errors = check(app_configs=app_configs, databases=databases)
  File "/testbed/django/core/checks/urls.py", line 40, in check_url_namespaces_unique
    all_namespaces = _load_all_namespaces(resolver)
  File "/testbed/django/core/checks/urls.py", line 57, in _load_all_namespaces
    url_patterns = getattr(resolver, 'url_patterns', [])
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 589, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 582, in urlconf_module
    return import_module(self.urlconf_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/flatpages_tests/urls.py", line 11, in <module>
    path('flatpage_root/', include('django.contrib.flatpages.urls')),
  File "/testbed/django/urls/conf.py", line 34, in include
    urlconf_module = import_module(urlconf_module)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/django/contrib/flatpages/urls.py", line 1, in <module>
    from django.contrib.flatpages import views
  File "/testbed/django/contrib/flatpages/views.py", line 2, in <module>
    from django.contrib.flatpages.models import FlatPage
  File "/testbed/django/contrib/flatpages/models.py", line 8, in <module>
    class FlatPage(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class django.contrib.flatpages.models.FlatPage doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.
'

======================================================================
FAIL: test_complex_app (admin_scripts.tests.ManageCheck)
manage.py check does not raise an ImportError validating a
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/admin_scripts/tests.py", line 1137, in test_complex_app
    self.assertNoOutput(err)
  File "/testbed/tests/admin_scripts/tests.py", line 149, in assertNoOutput
    self.assertEqual(len(stream), 0, "Stream should be empty: actually contains '%s'" % stream)
AssertionError: 3958 != 0 : Stream should be empty: actually contains 'Traceback (most recent call last):
  File "./manage.py", line 22, in <module>
    main()
  File "./manage.py", line 18, in main
    execute_from_command_line(sys.argv)
  File "/testbed/django/core/management/__init__.py", line 401, in execute_from_command_line
    utility.execute()
  File "/testbed/django/core/management/__init__.py", line 395, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "/testbed/django/core/management/base.py", line 328, in run_from_argv
    self.execute(*args, **cmd_options)
  File "/testbed/django/core/management/base.py", line 369, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/core/management/commands/check.py", line 69, in handle
    databases=options['databases'],
  File "/testbed/django/core/management/base.py", line 394, in check
    databases=databases,
  File "/testbed/django/core/checks/registry.py", line 68, in run_checks
    new_errors = check(app_configs=app_configs, databases=databases)
  File "/testbed/django/core/checks/urls.py", line 40, in check_url_namespaces_unique
    all_namespaces = _load_all_namespaces(resolver)
  File "/testbed/django/core/checks/urls.py", line 57, in _load_all_namespaces
    url_patterns = getattr(resolver, 'url_patterns', [])
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 589, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 582, in urlconf_module
    return import_module(self.urlconf_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/flatpages_tests/urls.py", line 11, in <module>
    path('flatpage_root/', include('django.contrib.flatpages.urls')),
  File "/testbed/django/urls/conf.py", line 34, in include
    urlconf_module = import_module(urlconf_module)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/django/contrib/flatpages/urls.py", line 1, in <module>
    from django.contrib.flatpages import views
  File "/testbed/django/contrib/flatpages/views.py", line 2, in <module>
    from django.contrib.flatpages.models import FlatPage
  File "/testbed/django/contrib/flatpages/models.py", line 1, in <module>
    from django.contrib.sites.models import Site
  File "/testbed/django/contrib/sites/models.py", line 78, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class django.contrib.sites.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.
'

======================================================================
FAIL: test_output_format (admin_scripts.tests.ManageCheck)
All errors/warnings should be sorted by level and by message.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/admin_scripts/tests.py", line 1187, in test_output_format
    self.assertEqual(err, expected_err)
AssertionError: 'Traceback (most recent call last):\n  Fil[3985 chars]S.\n' != 'SystemCheckError: System check identified[171 chars]).\n'
Diff is 4309 characters long. Set self.maxDiff to None to see it.

======================================================================
FAIL: test_warning_does_not_halt (admin_scripts.tests.ManageCheck)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/admin_scripts/tests.py", line 1218, in test_warning_does_not_halt
    self.assertEqual(err, expected_err)
AssertionError: 'Traceback (most recent call last):\n  Fil[3985 chars]S.\n' != 'System check identified some issues:\n\nW[69 chars]).\n'
Diff is 4203 characters long. Set self.maxDiff to None to see it.

======================================================================
FAIL: test_builtin_command (admin_scripts.tests.ManageDefaultSettings)
default: manage.py builtin commands succeed when default settings are appropriate
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/admin_scripts/tests.py", line 679, in test_builtin_command
    self.assertNoOutput(err)
  File "/testbed/tests/admin_scripts/tests.py", line 149, in assertNoOutput
    self.assertEqual(len(stream), 0, "Stream should be empty: actually contains '%s'" % stream)
AssertionError: 3958 != 0 : Stream should be empty: actually contains 'Traceback (most recent call last):
  File "./manage.py", line 22, in <module>
    main()
  File "./manage.py", line 18, in main
    execute_from_command_line(sys.argv)
  File "/testbed/django/core/management/__init__.py", line 401, in execute_from_command_line
    utility.execute()
  File "/testbed/django/core/management/__init__.py", line 395, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "/testbed/django/core/management/base.py", line 328, in run_from_argv
    self.execute(*args, **cmd_options)
  File "/testbed/django/core/management/base.py", line 369, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/core/management/commands/check.py", line 69, in handle
    databases=options['databases'],
  File "/testbed/django/core/management/base.py", line 394, in check
    databases=databases,
  File "/testbed/django/core/checks/registry.py", line 68, in run_checks
    new_errors = check(app_configs=app_configs, databases=databases)
  File "/testbed/django/core/checks/urls.py", line 40, in check_url_namespaces_unique
    all_namespaces = _load_all_namespaces(resolver)
  File "/testbed/django/core/checks/urls.py", line 57, in _load_all_namespaces
    url_patterns = getattr(resolver, 'url_patterns', [])
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 589, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 582, in urlconf_module
    return import_module(self.urlconf_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/flatpages_tests/urls.py", line 11, in <module>
    path('flatpage_root/', include('django.contrib.flatpages.urls')),
  File "/testbed/django/urls/conf.py", line 34, in include
    urlconf_module = import_module(urlconf_module)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/django/contrib/flatpages/urls.py", line 1, in <module>
    from django.contrib.flatpages import views
  File "/testbed/django/contrib/flatpages/views.py", line 2, in <module>
    from django.contrib.flatpages.models import FlatPage
  File "/testbed/django/contrib/flatpages/models.py", line 1, in <module>
    from django.contrib.sites.models import Site
  File "/testbed/django/contrib/sites/models.py", line 78, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class django.contrib.sites.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.
'

======================================================================
FAIL: test_builtin_with_environment (admin_scripts.tests.ManageDefaultSettings)
default: manage.py builtin commands succeed if settings are provided in the environment
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/admin_scripts/tests.py", line 693, in test_builtin_with_environment
    self.assertNoOutput(err)
  File "/testbed/tests/admin_scripts/tests.py", line 149, in assertNoOutput
    self.assertEqual(len(stream), 0, "Stream should be empty: actually contains '%s'" % stream)
AssertionError: 3958 != 0 : Stream should be empty: actually contains 'Traceback (most recent call last):
  File "./manage.py", line 22, in <module>
    main()
  File "./manage.py", line 18, in main
    execute_from_command_line(sys.argv)
  File "/testbed/django/core/management/__init__.py", line 401, in execute_from_command_line
    utility.execute()
  File "/testbed/django/core/management/__init__.py", line 395, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "/testbed/django/core/management/base.py", line 328, in run_from_argv
    self.execute(*args, **cmd_options)
  File "/testbed/django/core/management/base.py", line 369, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/core/management/commands/check.py", line 69, in handle
    databases=options['databases'],
  File "/testbed/django/core/management/base.py", line 394, in check
    databases=databases,
  File "/testbed/django/core/checks/registry.py", line 68, in run_checks
    new_errors = check(app_configs=app_configs, databases=databases)
  File "/testbed/django/core/checks/urls.py", line 40, in check_url_namespaces_unique
    all_namespaces = _load_all_namespaces(resolver)
  File "/testbed/django/core/checks/urls.py", line 57, in _load_all_namespaces
    url_patterns = getattr(resolver, 'url_patterns', [])
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 589, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 582, in urlconf_module
    return import_module(self.urlconf_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/flatpages_tests/urls.py", line 11, in <module>
    path('flatpage_root/', include('django.contrib.flatpages.urls')),
  File "/testbed/django/urls/conf.py", line 34, in include
    urlconf_module = import_module(urlconf_module)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/django/contrib/flatpages/urls.py", line 1, in <module>
    from django.contrib.flatpages import views
  File "/testbed/django/contrib/flatpages/views.py", line 2, in <module>
    from django.contrib.flatpages.models import FlatPage
  File "/testbed/django/contrib/flatpages/models.py", line 1, in <module>
    from django.contrib.sites.models import Site
  File "/testbed/django/contrib/sites/models.py", line 78, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class django.contrib.sites.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.
'

======================================================================
FAIL: test_builtin_with_settings (admin_scripts.tests.ManageDefaultSettings)
default: manage.py builtin commands succeed if settings are provided as argument
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/admin_scripts/tests.py", line 686, in test_builtin_with_settings
    self.assertNoOutput(err)
  File "/testbed/tests/admin_scripts/tests.py", line 149, in assertNoOutput
    self.assertEqual(len(stream), 0, "Stream should be empty: actually contains '%s'" % stream)
AssertionError: 3958 != 0 : Stream should be empty: actually contains 'Traceback (most recent call last):
  File "./manage.py", line 22, in <module>
    main()
  File "./manage.py", line 18, in main
    execute_from_command_line(sys.argv)
  File "/testbed/django/core/management/__init__.py", line 401, in execute_from_command_line
    utility.execute()
  File "/testbed/django/core/management/__init__.py", line 395, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "/testbed/django/core/management/base.py", line 328, in run_from_argv
    self.execute(*args, **cmd_options)
  File "/testbed/django/core/management/base.py", line 369, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/core/management/commands/check.py", line 69, in handle
    databases=options['databases'],
  File "/testbed/django/core/management/base.py", line 394, in check
    databases=databases,
  File "/testbed/django/core/checks/registry.py", line 68, in run_checks
    new_errors = check(app_configs=app_configs, databases=databases)
  File "/testbed/django/core/checks/urls.py", line 40, in check_url_namespaces_unique
    all_namespaces = _load_all_namespaces(resolver)
  File "/testbed/django/core/checks/urls.py", line 57, in _load_all_namespaces
    url_patterns = getattr(resolver, 'url_patterns', [])
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 589, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 582, in urlconf_module
    return import_module(self.urlconf_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/flatpages_tests/urls.py", line 11, in <module>
    path('flatpage_root/', include('django.contrib.flatpages.urls')),
  File "/testbed/django/urls/conf.py", line 34, in include
    urlconf_module = import_module(urlconf_module)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/django/contrib/flatpages/urls.py", line 1, in <module>
    from django.contrib.flatpages import views
  File "/testbed/django/contrib/flatpages/views.py", line 2, in <module>
    from django.contrib.flatpages.models import FlatPage
  File "/testbed/django/contrib/flatpages/models.py", line 1, in <module>
    from django.contrib.sites.models import Site
  File "/testbed/django/contrib/sites/models.py", line 78, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class django.contrib.sites.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.
'

======================================================================
FAIL: test_builtin_command (admin_scripts.tests.ManageFullPathDefaultSettings)
fulldefault: manage.py builtin commands succeed when default settings are appropriate
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/admin_scripts/tests.py", line 744, in test_builtin_command
    self.assertNoOutput(err)
  File "/testbed/tests/admin_scripts/tests.py", line 149, in assertNoOutput
    self.assertEqual(len(stream), 0, "Stream should be empty: actually contains '%s'" % stream)
AssertionError: 3958 != 0 : Stream should be empty: actually contains 'Traceback (most recent call last):
  File "./manage.py", line 22, in <module>
    main()
  File "./manage.py", line 18, in main
    execute_from_command_line(sys.argv)
  File "/testbed/django/core/management/__init__.py", line 401, in execute_from_command_line
    utility.execute()
  File "/testbed/django/core/management/__init__.py", line 395, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "/testbed/django/core/management/base.py", line 328, in run_from_argv
    self.execute(*args, **cmd_options)
  File "/testbed/django/core/management/base.py", line 369, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/core/management/commands/check.py", line 69, in handle
    databases=options['databases'],
  File "/testbed/django/core/management/base.py", line 394, in check
    databases=databases,
  File "/testbed/django/core/checks/registry.py", line 68, in run_checks
    new_errors = check(app_configs=app_configs, databases=databases)
  File "/testbed/django/core/checks/urls.py", line 40, in check_url_namespaces_unique
    all_namespaces = _load_all_namespaces(resolver)
  File "/testbed/django/core/checks/urls.py", line 57, in _load_all_namespaces
    url_patterns = getattr(resolver, 'url_patterns', [])
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 589, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 582, in urlconf_module
    return import_module(self.urlconf_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/flatpages_tests/urls.py", line 11, in <module>
    path('flatpage_root/', include('django.contrib.flatpages.urls')),
  File "/testbed/django/urls/conf.py", line 34, in include
    urlconf_module = import_module(urlconf_module)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/django/contrib/flatpages/urls.py", line 1, in <module>
    from django.contrib.flatpages import views
  File "/testbed/django/contrib/flatpages/views.py", line 2, in <module>
    from django.contrib.flatpages.models import FlatPage
  File "/testbed/django/contrib/flatpages/models.py", line 1, in <module>
    from django.contrib.sites.models import Site
  File "/testbed/django/contrib/sites/models.py", line 78, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class django.contrib.sites.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.
'

======================================================================
FAIL: test_builtin_with_environment (admin_scripts.tests.ManageFullPathDefaultSettings)
fulldefault: manage.py builtin commands succeed if settings are provided in the environment
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/admin_scripts/tests.py", line 758, in test_builtin_with_environment
    self.assertNoOutput(err)
  File "/testbed/tests/admin_scripts/tests.py", line 149, in assertNoOutput
    self.assertEqual(len(stream), 0, "Stream should be empty: actually contains '%s'" % stream)
AssertionError: 3958 != 0 : Stream should be empty: actually contains 'Traceback (most recent call last):
  File "./manage.py", line 22, in <module>
    main()
  File "./manage.py", line 18, in main
    execute_from_command_line(sys.argv)
  File "/testbed/django/core/management/__init__.py", line 401, in execute_from_command_line
    utility.execute()
  File "/testbed/django/core/management/__init__.py", line 395, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "/testbed/django/core/management/base.py", line 328, in run_from_argv
    self.execute(*args, **cmd_options)
  File "/testbed/django/core/management/base.py", line 369, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/core/management/commands/check.py", line 69, in handle
    databases=options['databases'],
  File "/testbed/django/core/management/base.py", line 394, in check
    databases=databases,
  File "/testbed/django/core/checks/registry.py", line 68, in run_checks
    new_errors = check(app_configs=app_configs, databases=databases)
  File "/testbed/django/core/checks/urls.py", line 40, in check_url_namespaces_unique
    all_namespaces = _load_all_namespaces(resolver)
  File "/testbed/django/core/checks/urls.py", line 57, in _load_all_namespaces
    url_patterns = getattr(resolver, 'url_patterns', [])
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 589, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 582, in urlconf_module
    return import_module(self.urlconf_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/flatpages_tests/urls.py", line 11, in <module>
    path('flatpage_root/', include('django.contrib.flatpages.urls')),
  File "/testbed/django/urls/conf.py", line 34, in include
    urlconf_module = import_module(urlconf_module)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/django/contrib/flatpages/urls.py", line 1, in <module>
    from django.contrib.flatpages import views
  File "/testbed/django/contrib/flatpages/views.py", line 2, in <module>
    from django.contrib.flatpages.models import FlatPage
  File "/testbed/django/contrib/flatpages/models.py", line 1, in <module>
    from django.contrib.sites.models import Site
  File "/testbed/django/contrib/sites/models.py", line 78, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class django.contrib.sites.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.
'

======================================================================
FAIL: test_builtin_with_settings (admin_scripts.tests.ManageFullPathDefaultSettings)
fulldefault: manage.py builtin commands succeed if settings are provided as argument
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/admin_scripts/tests.py", line 751, in test_builtin_with_settings
    self.assertNoOutput(err)
  File "/testbed/tests/admin_scripts/tests.py", line 149, in assertNoOutput
    self.assertEqual(len(stream), 0, "Stream should be empty: actually contains '%s'" % stream)
AssertionError: 3958 != 0 : Stream should be empty: actually contains 'Traceback (most recent call last):
  File "./manage.py", line 22, in <module>
    main()
  File "./manage.py", line 18, in main
    execute_from_command_line(sys.argv)
  File "/testbed/django/core/management/__init__.py", line 401, in execute_from_command_line
    utility.execute()
  File "/testbed/django/core/management/__init__.py", line 395, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "/testbed/django/core/management/base.py", line 328, in run_from_argv
    self.execute(*args, **cmd_options)
  File "/testbed/django/core/management/base.py", line 369, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/core/management/commands/check.py", line 69, in handle
    databases=options['databases'],
  File "/testbed/django/core/management/base.py", line 394, in check
    databases=databases,
  File "/testbed/django/core/checks/registry.py", line 68, in run_checks
    new_errors = check(app_configs=app_configs, databases=databases)
  File "/testbed/django/core/checks/urls.py", line 40, in check_url_namespaces_unique
    all_namespaces = _load_all_namespaces(resolver)
  File "/testbed/django/core/checks/urls.py", line 57, in _load_all_namespaces
    url_patterns = getattr(resolver, 'url_patterns', [])
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 589, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 582, in urlconf_module
    return import_module(self.urlconf_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/flatpages_tests/urls.py", line 11, in <module>
    path('flatpage_root/', include('django.contrib.flatpages.urls')),
  File "/testbed/django/urls/conf.py", line 34, in include
    urlconf_module = import_module(urlconf_module)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/django/contrib/flatpages/urls.py", line 1, in <module>
    from django.contrib.flatpages import views
  File "/testbed/django/contrib/flatpages/views.py", line 2, in <module>
    from django.contrib.flatpages.models import FlatPage
  File "/testbed/django/contrib/flatpages/models.py", line 1, in <module>
    from django.contrib.sites.models import Site
  File "/testbed/django/contrib/sites/models.py", line 78, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class django.contrib.sites.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.
'

======================================================================
FAIL: test_builtin_with_environment (admin_scripts.tests.ManageMultipleSettings)
multiple: manage.py can execute builtin commands if settings are provided in the environment
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/admin_scripts/tests.py", line 978, in test_builtin_with_environment
    self.assertNoOutput(err)
  File "/testbed/tests/admin_scripts/tests.py", line 149, in assertNoOutput
    self.assertEqual(len(stream), 0, "Stream should be empty: actually contains '%s'" % stream)
AssertionError: 3958 != 0 : Stream should be empty: actually contains 'Traceback (most recent call last):
  File "./manage.py", line 22, in <module>
    main()
  File "./manage.py", line 18, in main
    execute_from_command_line(sys.argv)
  File "/testbed/django/core/management/__init__.py", line 401, in execute_from_command_line
    utility.execute()
  File "/testbed/django/core/management/__init__.py", line 395, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "/testbed/django/core/management/base.py", line 328, in run_from_argv
    self.execute(*args, **cmd_options)
  File "/testbed/django/core/management/base.py", line 369, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/core/management/commands/check.py", line 69, in handle
    databases=options['databases'],
  File "/testbed/django/core/management/base.py", line 394, in check
    databases=databases,
  File "/testbed/django/core/checks/registry.py", line 68, in run_checks
    new_errors = check(app_configs=app_configs, databases=databases)
  File "/testbed/django/core/checks/urls.py", line 40, in check_url_namespaces_unique
    all_namespaces = _load_all_namespaces(resolver)
  File "/testbed/django/core/checks/urls.py", line 57, in _load_all_namespaces
    url_patterns = getattr(resolver, 'url_patterns', [])
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 589, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 582, in urlconf_module
    return import_module(self.urlconf_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/flatpages_tests/urls.py", line 11, in <module>
    path('flatpage_root/', include('django.contrib.flatpages.urls')),
  File "/testbed/django/urls/conf.py", line 34, in include
    urlconf_module = import_module(urlconf_module)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/django/contrib/flatpages/urls.py", line 1, in <module>
    from django.contrib.flatpages import views
  File "/testbed/django/contrib/flatpages/views.py", line 2, in <module>
    from django.contrib.flatpages.models import FlatPage
  File "/testbed/django/contrib/flatpages/models.py", line 1, in <module>
    from django.contrib.sites.models import Site
  File "/testbed/django/contrib/sites/models.py", line 78, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class django.contrib.sites.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.
'

======================================================================
FAIL: test_builtin_with_settings (admin_scripts.tests.ManageMultipleSettings)
multiple: manage.py builtin commands succeed if settings are provided as argument
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/admin_scripts/tests.py", line 971, in test_builtin_with_settings
    self.assertNoOutput(err)
  File "/testbed/tests/admin_scripts/tests.py", line 149, in assertNoOutput
    self.assertEqual(len(stream), 0, "Stream should be empty: actually contains '%s'" % stream)
AssertionError: 3958 != 0 : Stream should be empty: actually contains 'Traceback (most recent call last):
  File "./manage.py", line 22, in <module>
    main()
  File "./manage.py", line 18, in main
    execute_from_command_line(sys.argv)
  File "/testbed/django/core/management/__init__.py", line 401, in execute_from_command_line
    utility.execute()
  File "/testbed/django/core/management/__init__.py", line 395, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "/testbed/django/core/management/base.py", line 328, in run_from_argv
    self.execute(*args, **cmd_options)
  File "/testbed/django/core/management/base.py", line 369, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/core/management/commands/check.py", line 69, in handle
    databases=options['databases'],
  File "/testbed/django/core/management/base.py", line 394, in check
    databases=databases,
  File "/testbed/django/core/checks/registry.py", line 68, in run_checks
    new_errors = check(app_configs=app_configs, databases=databases)
  File "/testbed/django/core/checks/urls.py", line 40, in check_url_namespaces_unique
    all_namespaces = _load_all_namespaces(resolver)
  File "/testbed/django/core/checks/urls.py", line 57, in _load_all_namespaces
    url_patterns = getattr(resolver, 'url_patterns', [])
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 589, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 582, in urlconf_module
    return import_module(self.urlconf_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/flatpages_tests/urls.py", line 11, in <module>
    path('flatpage_root/', include('django.contrib.flatpages.urls')),
  File "/testbed/django/urls/conf.py", line 34, in include
    urlconf_module = import_module(urlconf_module)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/django/contrib/flatpages/urls.py", line 1, in <module>
    from django.contrib.flatpages import views
  File "/testbed/django/contrib/flatpages/views.py", line 2, in <module>
    from django.contrib.flatpages.models import FlatPage
  File "/testbed/django/contrib/flatpages/models.py", line 1, in <module>
    from django.contrib.sites.models import Site
  File "/testbed/django/contrib/sites/models.py", line 78, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class django.contrib.sites.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.
'

======================================================================
FAIL: test_file_response (asgi.tests.ASGITest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/asgiref/sync.py", line 223, in __call__
    return call_result.result()
  File "/opt/miniconda3/envs/testbed/lib/python3.6/concurrent/futures/_base.py", line 425, in result
    return self.__get_result()
  File "/opt/miniconda3/envs/testbed/lib/python3.6/concurrent/futures/_base.py", line 384, in __get_result
    raise self._exception
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/asgiref/sync.py", line 292, in main_wrap
    result = await self.awaitable(*args, **kwargs)
  File "/testbed/tests/asgi/tests.py", line 82, in test_file_response
    (b'Content-Disposition', b'inline; filename="urls.py"'),
AssertionError: Items in the first set but not the second:
(b'X-Frame-Options', b'DENY')
(b'X-Content-Type-Options', b'nosniff')
(b'Referrer-Policy', b'same-origin')

======================================================================
FAIL: test_get_asgi_application (asgi.tests.ASGITest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/asgiref/sync.py", line 223, in __call__
    return call_result.result()
  File "/opt/miniconda3/envs/testbed/lib/python3.6/concurrent/futures/_base.py", line 425, in result
    return self.__get_result()
  File "/opt/miniconda3/envs/testbed/lib/python3.6/concurrent/futures/_base.py", line 384, in __get_result
    raise self._exception
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/asgiref/sync.py", line 292, in main_wrap
    result = await self.awaitable(*args, **kwargs)
  File "/testbed/tests/asgi/tests.py", line 54, in test_get_asgi_application
    (b'Content-Type', b'text/html; charset=utf-8'),
AssertionError: Items in the first set but not the second:
(b'X-Frame-Options', b'DENY')
(b'X-Content-Type-Options', b'nosniff')
(b'Referrer-Policy', b'same-origin')

======================================================================
FAIL: test_headers (asgi.tests.ASGITest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/asgiref/sync.py", line 223, in __call__
    return call_result.result()
  File "/opt/miniconda3/envs/testbed/lib/python3.6/concurrent/futures/_base.py", line 425, in result
    return self.__get_result()
  File "/opt/miniconda3/envs/testbed/lib/python3.6/concurrent/futures/_base.py", line 384, in __get_result
    raise self._exception
  File "/opt/miniconda3/envs/testbed/lib/python3.6/site-packages/asgiref/sync.py", line 292, in main_wrap
    result = await self.awaitable(*args, **kwargs)
  File "/testbed/tests/asgi/tests.py", line 112, in test_headers
    (b'Content-Type', b'text/plain; charset=utf-8'),
AssertionError: Items in the first set but not the second:
(b'X-Frame-Options', b'DENY')
(b'X-Content-Type-Options', b'nosniff')
(b'Referrer-Policy', b'same-origin')

======================================================================
FAIL: test_help_text (auth_tests.test_validators.CommonPasswordValidatorTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/auth_tests/test_validators.py", line 213, in test_help_text
    'Your password can’t be a commonly used password.'
AssertionError: 'Uw wachtwoord mag geen veelgebruikt wachtwoord zijn.' != 'Your password can’t be a commonly used password.'
- Uw wachtwoord mag geen veelgebruikt wachtwoord zijn.
+ Your password can’t be a commonly used password.


======================================================================
FAIL: test_validate (auth_tests.test_validators.CommonPasswordValidatorTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/auth_tests/test_validators.py", line 192, in test_validate
    self.assertEqual(cm.exception.messages, [expected_error])
AssertionError: Lists differ: ['Dit wachtwoord is te algemeen.'] != ['This password is too common.']

First differing element 0:
'Dit wachtwoord is te algemeen.'
'This password is too common.'

- ['Dit wachtwoord is te algemeen.']
+ ['This password is too common.']

======================================================================
FAIL: test_validate_custom_list (auth_tests.test_validators.CommonPasswordValidatorTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/auth_tests/test_validators.py", line 202, in test_validate_custom_list
    self.assertEqual(cm.exception.messages, [expected_error])
AssertionError: Lists differ: ['Dit wachtwoord is te algemeen.'] != ['This password is too common.']

First differing element 0:
'Dit wachtwoord is te algemeen.'
'This password is too common.'

- ['Dit wachtwoord is te algemeen.']
+ ['This password is too common.']

======================================================================
FAIL: test_help_text (auth_tests.test_validators.MinimumLengthValidatorTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/auth_tests/test_validators.py", line 116, in test_help_text
    "Your password must contain at least 8 characters."
AssertionError: 'Uw wachtwoord moet minstens 8 tekens lang zijn.' != 'Your password must contain at least 8 characters.'
- Uw wachtwoord moet minstens 8 tekens lang zijn.
+ Your password must contain at least 8 characters.


======================================================================
FAIL: test_validate (auth_tests.test_validators.MinimumLengthValidatorTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/auth_tests/test_validators.py", line 106, in test_validate
    self.assertEqual(cm.exception.messages, [expected_error % 8])
AssertionError: Lists differ: ['Dit wachtwoord is te kort. De minimale lengte is 8 tekens.'] != ['This password is too short. It must contain at least 8 characters.']

First differing element 0:
'Dit wachtwoord is te kort. De minimale lengte is 8 tekens.'
'This password is too short. It must contain at least 8 characters.'

- ['Dit wachtwoord is te kort. De minimale lengte is 8 tekens.']
+ ['This password is too short. It must contain at least 8 characters.']

======================================================================
FAIL: test_help_text (auth_tests.test_validators.NumericPasswordValidatorTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/auth_tests/test_validators.py", line 230, in test_help_text
    'Your password can’t be entirely numeric.'
AssertionError: 'Uw wachtwoord mag niet volledig uit cijfers bestaan.' != 'Your password can’t be entirely numeric.'
- Uw wachtwoord mag niet volledig uit cijfers bestaan.
+ Your password can’t be entirely numeric.


======================================================================
FAIL: test_validate (auth_tests.test_validators.NumericPasswordValidatorTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/auth_tests/test_validators.py", line 224, in test_validate
    self.assertEqual(cm.exception.messages, [expected_error])
AssertionError: Lists differ: ['Dit wachtwoord bevat alleen cijfers.'] != ['This password is entirely numeric.']

First differing element 0:
'Dit wachtwoord bevat alleen cijfers.'
'This password is entirely numeric.'

- ['Dit wachtwoord bevat alleen cijfers.']
+ ['This password is entirely numeric.']

======================================================================
FAIL: test_password_validators_help_text_html (auth_tests.test_validators.PasswordValidationTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/auth_tests/test_validators.py", line 82, in test_password_validators_help_text_html
    self.assertIn('12 characters', help_text)
AssertionError: '12 characters' not found in '<ul><li>Uw wachtwoord mag geen veelgebruikt wachtwoord zijn.</li><li>Uw wachtwoord moet minstens 12 tekens lang zijn.</li></ul>'

======================================================================
FAIL: test_password_validators_help_texts (auth_tests.test_validators.PasswordValidationTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/auth_tests/test_validators.py", line 75, in test_password_validators_help_texts
    self.assertIn('12 characters', help_texts[1])
AssertionError: '12 characters' not found in 'Uw wachtwoord moet minstens 12 tekens lang zijn.'

======================================================================
FAIL: test_validate_password (auth_tests.test_validators.PasswordValidationTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/auth_tests/test_validators.py", line 47, in test_validate_password
    self.assertEqual(cm.exception.messages, [msg_too_short])
AssertionError: Lists differ: ['Dit wachtwoord is te kort. De minimale lengte is 12 tekens.'] != ['This password is too short. It must contain at least 12 characters.']

First differing element 0:
'Dit wachtwoord is te kort. De minimale lengte is 12 tekens.'
'This password is too short. It must contain at least 12 characters.'

- ['Dit wachtwoord is te kort. De minimale lengte is 12 tekens.']
+ ['This password is too short. It must contain at least 12 characters.']

======================================================================
FAIL: test_adapt_timefield_value (backends.base.test_operations.SimpleDatabaseOperationTests)
----------------------------------------------------------------------
ValueError: Not naive datetime (tzinfo is already set)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/tests/backends/base/test_operations.py", line 77, in test_adapt_timefield_value
    self.ops.adapt_timefield_value(timezone.make_aware(timezone.now()))
  File "/opt/miniconda3/envs/testbed/lib/python3.6/contextlib.py", line 99, in __exit__
    self.gen.throw(type, value, traceback)
  File "/testbed/django/test/testcases.py", line 683, in _assert_raises_or_warns_cm
    self.assertIn(expected_message, str(getattr(cm, cm_attr)))
AssertionError: 'Django does not support timezone-aware times.' not found in 'Not naive datetime (tzinfo is already set)'

======================================================================
FAIL: test_datetimefield_changed (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_datetimefield.py", line 123, in test_datetimefield_changed
    self.assertFalse(f.has_changed(d, '2006 09 17 2:30 PM'))
AssertionError: True is not false

======================================================================
FAIL: test_datetimefield_clean (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) (value=datetime.date(2006, 10, 25))
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_datetimefield.py", line 65, in test_datetimefield_clean
    self.assertEqual(f.clean(value), expected_datetime)
AssertionError: datet[26 chars] 0, 0, tzinfo=<DstTzInfo 'America/Chicago' CDT[17 chars]DST>) != datet[26 chars] 0, 0)

======================================================================
FAIL: test_datetimefield_clean (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) (value=datetime.datetime(2006, 10, 25, 14, 30))
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_datetimefield.py", line 65, in test_datetimefield_clean
    self.assertEqual(f.clean(value), expected_datetime)
AssertionError: datet[28 chars]4, 30, tzinfo=<DstTzInfo 'America/Chicago' CDT[17 chars]DST>) != datet[28 chars]4, 30)

======================================================================
FAIL: test_datetimefield_clean (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) (value=datetime.datetime(2006, 10, 25, 14, 30, 59))
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_datetimefield.py", line 65, in test_datetimefield_clean
    self.assertEqual(f.clean(value), expected_datetime)
AssertionError: datet[32 chars]0, 59, tzinfo=<DstTzInfo 'America/Chicago' CDT[17 chars]DST>) != datet[32 chars]0, 59)

======================================================================
FAIL: test_datetimefield_clean (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) (value=datetime.datetime(2006, 10, 25, 14, 30, 59, 200))
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_datetimefield.py", line 65, in test_datetimefield_clean
    self.assertEqual(f.clean(value), expected_datetime)
AssertionError: datet[37 chars], 200, tzinfo=<DstTzInfo 'America/Chicago' CDT[17 chars]DST>) != datet[37 chars], 200)

======================================================================
FAIL: test_datetimefield_clean (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) (value='2006-10-25 14:30:45.000200')
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_datetimefield.py", line 65, in test_datetimefield_clean
    self.assertEqual(f.clean(value), expected_datetime)
AssertionError: datet[37 chars], 200, tzinfo=<DstTzInfo 'America/Chicago' CDT[17 chars]DST>) != datet[37 chars], 200)

======================================================================
FAIL: test_datetimefield_clean (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) (value='2006-10-25 14:30:45.0002')
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_datetimefield.py", line 65, in test_datetimefield_clean
    self.assertEqual(f.clean(value), expected_datetime)
AssertionError: datet[37 chars], 200, tzinfo=<DstTzInfo 'America/Chicago' CDT[17 chars]DST>) != datet[37 chars], 200)

======================================================================
FAIL: test_datetimefield_clean (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) (value='2006-10-25 14:30:45')
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_datetimefield.py", line 65, in test_datetimefield_clean
    self.assertEqual(f.clean(value), expected_datetime)
AssertionError: datet[32 chars]0, 45, tzinfo=<DstTzInfo 'America/Chicago' CDT[17 chars]DST>) != datet[32 chars]0, 45)

======================================================================
FAIL: test_datetimefield_clean (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) (value='2006-10-25 14:30:00')
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_datetimefield.py", line 65, in test_datetimefield_clean
    self.assertEqual(f.clean(value), expected_datetime)
AssertionError: datet[28 chars]4, 30, tzinfo=<DstTzInfo 'America/Chicago' CDT[17 chars]DST>) != datet[28 chars]4, 30)

======================================================================
FAIL: test_datetimefield_clean (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) (value='2006-10-25 14:30')
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_datetimefield.py", line 65, in test_datetimefield_clean
    self.assertEqual(f.clean(value), expected_datetime)
AssertionError: datet[28 chars]4, 30, tzinfo=<DstTzInfo 'America/Chicago' CDT[17 chars]DST>) != datet[28 chars]4, 30)

======================================================================
FAIL: test_datetimefield_clean (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) (value='2006-10-25')
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_datetimefield.py", line 65, in test_datetimefield_clean
    self.assertEqual(f.clean(value), expected_datetime)
AssertionError: datet[26 chars] 0, 0, tzinfo=<DstTzInfo 'America/Chicago' CDT[17 chars]DST>) != datet[26 chars] 0, 0)

======================================================================
FAIL: test_datetimefield_clean (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) (value='10/25/2006 14:30:45.000200')
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_datetimefield.py", line 65, in test_datetimefield_clean
    self.assertEqual(f.clean(value), expected_datetime)
AssertionError: datet[37 chars], 200, tzinfo=<DstTzInfo 'America/Chicago' CDT[17 chars]DST>) != datet[37 chars], 200)

======================================================================
FAIL: test_datetimefield_clean (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) (value='10/25/2006 14:30:45')
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_datetimefield.py", line 65, in test_datetimefield_clean
    self.assertEqual(f.clean(value), expected_datetime)
AssertionError: datet[32 chars]0, 45, tzinfo=<DstTzInfo 'America/Chicago' CDT[17 chars]DST>) != datet[32 chars]0, 45)

======================================================================
FAIL: test_datetimefield_clean (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) (value='10/25/2006 14:30:00')
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_datetimefield.py", line 65, in test_datetimefield_clean
    self.assertEqual(f.clean(value), expected_datetime)
AssertionError: datet[28 chars]4, 30, tzinfo=<DstTzInfo 'America/Chicago' CDT[17 chars]DST>) != datet[28 chars]4, 30)

======================================================================
FAIL: test_datetimefield_clean (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) (value='10/25/2006 14:30')
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_datetimefield.py", line 65, in test_datetimefield_clean
    self.assertEqual(f.clean(value), expected_datetime)
AssertionError: datet[28 chars]4, 30, tzinfo=<DstTzInfo 'America/Chicago' CDT[17 chars]DST>) != datet[28 chars]4, 30)

======================================================================
FAIL: test_datetimefield_clean (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) (value='10/25/2006')
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_datetimefield.py", line 65, in test_datetimefield_clean
    self.assertEqual(f.clean(value), expected_datetime)
AssertionError: datet[26 chars] 0, 0, tzinfo=<DstTzInfo 'America/Chicago' CDT[17 chars]DST>) != datet[26 chars] 0, 0)

======================================================================
FAIL: test_datetimefield_clean (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) (value='10/25/06 14:30:45.000200')
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_datetimefield.py", line 65, in test_datetimefield_clean
    self.assertEqual(f.clean(value), expected_datetime)
AssertionError: datet[37 chars], 200, tzinfo=<DstTzInfo 'America/Chicago' CDT[17 chars]DST>) != datet[37 chars], 200)

======================================================================
FAIL: test_datetimefield_clean (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) (value='10/25/06 14:30:45')
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_datetimefield.py", line 65, in test_datetimefield_clean
    self.assertEqual(f.clean(value), expected_datetime)
AssertionError: datet[32 chars]0, 45, tzinfo=<DstTzInfo 'America/Chicago' CDT[17 chars]DST>) != datet[32 chars]0, 45)

======================================================================
FAIL: test_datetimefield_clean (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) (value='10/25/06 14:30:00')
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_datetimefield.py", line 65, in test_datetimefield_clean
    self.assertEqual(f.clean(value), expected_datetime)
AssertionError: datet[28 chars]4, 30, tzinfo=<DstTzInfo 'America/Chicago' CDT[17 chars]DST>) != datet[28 chars]4, 30)

======================================================================
FAIL: test_datetimefield_clean (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) (value='10/25/06 14:30')
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_datetimefield.py", line 65, in test_datetimefield_clean
    self.assertEqual(f.clean(value), expected_datetime)
AssertionError: datet[28 chars]4, 30, tzinfo=<DstTzInfo 'America/Chicago' CDT[17 chars]DST>) != datet[28 chars]4, 30)

======================================================================
FAIL: test_datetimefield_clean (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) (value='10/25/06')
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_datetimefield.py", line 65, in test_datetimefield_clean
    self.assertEqual(f.clean(value), expected_datetime)
AssertionError: datet[26 chars] 0, 0, tzinfo=<DstTzInfo 'America/Chicago' CDT[17 chars]DST>) != datet[26 chars] 0, 0)

======================================================================
FAIL: test_datetimefield_clean (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) (value='2014-09-23T22:34:41.614804')
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_datetimefield.py", line 65, in test_datetimefield_clean
    self.assertEqual(f.clean(value), expected_datetime)
AssertionError: datet[39 chars]14804, tzinfo=<DstTzInfo 'America/Chicago' CDT[17 chars]DST>) != datet[39 chars]14804)

======================================================================
FAIL: test_datetimefield_clean (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) (value='2014-09-23T22:34:41')
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_datetimefield.py", line 65, in test_datetimefield_clean
    self.assertEqual(f.clean(value), expected_datetime)
AssertionError: datet[31 chars]4, 41, tzinfo=<DstTzInfo 'America/Chicago' CDT[17 chars]DST>) != datet[31 chars]4, 41)

======================================================================
FAIL: test_datetimefield_clean (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) (value='2014-09-23T22:34')
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_datetimefield.py", line 65, in test_datetimefield_clean
    self.assertEqual(f.clean(value), expected_datetime)
AssertionError: datet[27 chars]2, 34, tzinfo=<DstTzInfo 'America/Chicago' CDT[17 chars]DST>) != datet[27 chars]2, 34)

======================================================================
FAIL: test_datetimefield_clean (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) (value='2014-09-23')
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_datetimefield.py", line 65, in test_datetimefield_clean
    self.assertEqual(f.clean(value), expected_datetime)
AssertionError: datet[25 chars] 0, 0, tzinfo=<DstTzInfo 'America/Chicago' CDT[17 chars]DST>) != datet[25 chars] 0, 0)

======================================================================
FAIL: test_datetimefield_clean (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) (value=' 2006-10-25   14:30:45 ')
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_datetimefield.py", line 65, in test_datetimefield_clean
    self.assertEqual(f.clean(value), expected_datetime)
AssertionError: datet[32 chars]0, 45, tzinfo=<DstTzInfo 'America/Chicago' CDT[17 chars]DST>) != datet[32 chars]0, 45)

======================================================================
FAIL: test_datetimefield_clean (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) (value=' 2006-10-25 ')
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_datetimefield.py", line 65, in test_datetimefield_clean
    self.assertEqual(f.clean(value), expected_datetime)
AssertionError: datet[26 chars] 0, 0, tzinfo=<DstTzInfo 'America/Chicago' CDT[17 chars]DST>) != datet[26 chars] 0, 0)

======================================================================
FAIL: test_datetimefield_clean (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) (value=' 10/25/2006 14:30:45 ')
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_datetimefield.py", line 65, in test_datetimefield_clean
    self.assertEqual(f.clean(value), expected_datetime)
AssertionError: datet[32 chars]0, 45, tzinfo=<DstTzInfo 'America/Chicago' CDT[17 chars]DST>) != datet[32 chars]0, 45)

======================================================================
FAIL: test_datetimefield_clean (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) (value=' 10/25/2006 14:30 ')
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_datetimefield.py", line 65, in test_datetimefield_clean
    self.assertEqual(f.clean(value), expected_datetime)
AssertionError: datet[28 chars]4, 30, tzinfo=<DstTzInfo 'America/Chicago' CDT[17 chars]DST>) != datet[28 chars]4, 30)

======================================================================
FAIL: test_datetimefield_clean (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) (value=' 10/25/2006 ')
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_datetimefield.py", line 65, in test_datetimefield_clean
    self.assertEqual(f.clean(value), expected_datetime)
AssertionError: datet[26 chars] 0, 0, tzinfo=<DstTzInfo 'America/Chicago' CDT[17 chars]DST>) != datet[26 chars] 0, 0)

======================================================================
FAIL: test_datetimefield_clean (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) (value=' 10/25/06 14:30:45 ')
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_datetimefield.py", line 65, in test_datetimefield_clean
    self.assertEqual(f.clean(value), expected_datetime)
AssertionError: datet[32 chars]0, 45, tzinfo=<DstTzInfo 'America/Chicago' CDT[17 chars]DST>) != datet[32 chars]0, 45)

======================================================================
FAIL: test_datetimefield_clean (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) (value=' 10/25/06 ')
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_datetimefield.py", line 65, in test_datetimefield_clean
    self.assertEqual(f.clean(value), expected_datetime)
AssertionError: datet[26 chars] 0, 0, tzinfo=<DstTzInfo 'America/Chicago' CDT[17 chars]DST>) != datet[26 chars] 0, 0)

======================================================================
FAIL: test_datetimefield_clean (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) (value=' 2014-09-23T22:34:41.614804 ')
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_datetimefield.py", line 65, in test_datetimefield_clean
    self.assertEqual(f.clean(value), expected_datetime)
AssertionError: datet[39 chars]14804, tzinfo=<DstTzInfo 'America/Chicago' CDT[17 chars]DST>) != datet[39 chars]14804)

======================================================================
FAIL: test_datetimefield_clean_input_formats (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) (input_format='%Y %m %d %I:%M %p', value=datetime.date(2006, 10, 25))
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_datetimefield.py", line 111, in test_datetimefield_clean_input_formats
    self.assertEqual(f.clean(value), expected_datetime)
AssertionError: datet[26 chars] 0, 0, tzinfo=<DstTzInfo 'America/Chicago' CDT[17 chars]DST>) != datet[26 chars] 0, 0)

======================================================================
FAIL: test_datetimefield_clean_input_formats (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) (input_format='%Y %m %d %I:%M %p', value=datetime.datetime(2006, 10, 25, 14, 30))
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_datetimefield.py", line 111, in test_datetimefield_clean_input_formats
    self.assertEqual(f.clean(value), expected_datetime)
AssertionError: datet[28 chars]4, 30, tzinfo=<DstTzInfo 'America/Chicago' CDT[17 chars]DST>) != datet[28 chars]4, 30)

======================================================================
FAIL: test_datetimefield_clean_input_formats (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) (input_format='%Y %m %d %I:%M %p', value=datetime.datetime(2006, 10, 25, 14, 30, 59))
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_datetimefield.py", line 111, in test_datetimefield_clean_input_formats
    self.assertEqual(f.clean(value), expected_datetime)
AssertionError: datet[32 chars]0, 59, tzinfo=<DstTzInfo 'America/Chicago' CDT[17 chars]DST>) != datet[32 chars]0, 59)

======================================================================
FAIL: test_datetimefield_clean_input_formats (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) (input_format='%Y %m %d %I:%M %p', value=datetime.datetime(2006, 10, 25, 14, 30, 59, 200))
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_datetimefield.py", line 111, in test_datetimefield_clean_input_formats
    self.assertEqual(f.clean(value), expected_datetime)
AssertionError: datet[37 chars], 200, tzinfo=<DstTzInfo 'America/Chicago' CDT[17 chars]DST>) != datet[37 chars], 200)

======================================================================
FAIL: test_datetimefield_clean_input_formats (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) (input_format='%Y %m %d %I:%M %p', value='2006 10 25 2:30 PM')
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_datetimefield.py", line 111, in test_datetimefield_clean_input_formats
    self.assertEqual(f.clean(value), expected_datetime)
AssertionError: datet[28 chars]4, 30, tzinfo=<DstTzInfo 'America/Chicago' CDT[17 chars]DST>) != datet[28 chars]4, 30)

======================================================================
FAIL: test_datetimefield_clean_input_formats (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) (input_format='%Y %m %d %I:%M %p', value='2006-10-25 14:30:45')
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_datetimefield.py", line 111, in test_datetimefield_clean_input_formats
    self.assertEqual(f.clean(value), expected_datetime)
AssertionError: datet[32 chars]0, 45, tzinfo=<DstTzInfo 'America/Chicago' CDT[17 chars]DST>) != datet[32 chars]0, 45)

======================================================================
FAIL: test_datetimefield_clean_input_formats (forms_tests.field_tests.test_datetimefield.DateTimeFieldTest) (input_format='%Y.%m.%d %H:%M:%S.%f', value='2006.10.25 14:30:45.0002')
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_datetimefield.py", line 111, in test_datetimefield_clean_input_formats
    self.assertEqual(f.clean(value), expected_datetime)
AssertionError: datet[37 chars], 200, tzinfo=<DstTzInfo 'America/Chicago' CDT[17 chars]DST>) != datet[37 chars], 200)

======================================================================
FAIL: test_clean (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_multivaluefield.py", line 62, in test_clean
    'some text,JP,2007-04-25 06:24:00',
AssertionError: 'some text,JP,2007-04-25 06:24:00-05:00' != 'some text,JP,2007-04-25 06:24:00'
- some text,JP,2007-04-25 06:24:00-05:00
?                                 ------
+ some text,JP,2007-04-25 06:24:00


======================================================================
FAIL: test_clean_disabled_multivalue (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest) (data='some text,JP,2007-04-25 06:24:00')
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_multivaluefield.py", line 78, in test_clean_disabled_multivalue
    self.assertEqual(form.cleaned_data, {'f': inputs[0]})
AssertionError: {'f': 'some text,JP,2007-04-25 06:24:00-05:00'} != {'f': 'some text,JP,2007-04-25 06:24:00'}
- {'f': 'some text,JP,2007-04-25 06:24:00-05:00'}
?                                        ------

+ {'f': 'some text,JP,2007-04-25 06:24:00'}

======================================================================
FAIL: test_clean_disabled_multivalue (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest) (data=['some text', ['J', 'P'], ['2007-04-25', '6:24:00']])
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_multivaluefield.py", line 78, in test_clean_disabled_multivalue
    self.assertEqual(form.cleaned_data, {'f': inputs[0]})
AssertionError: {'f': 'some text,JP,2007-04-25 06:24:00-05:00'} != {'f': 'some text,JP,2007-04-25 06:24:00'}
- {'f': 'some text,JP,2007-04-25 06:24:00-05:00'}
?                                        ------

+ {'f': 'some text,JP,2007-04-25 06:24:00'}

======================================================================
FAIL: test_form_cleaned_data (forms_tests.field_tests.test_multivaluefield.MultiValueFieldTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_multivaluefield.py", line 174, in test_form_cleaned_data
    self.assertEqual(form.cleaned_data['field1'], 'some text,JP,2007-04-25 06:24:00')
AssertionError: 'some text,JP,2007-04-25 06:24:00-05:00' != 'some text,JP,2007-04-25 06:24:00'
- some text,JP,2007-04-25 06:24:00-05:00
?                                 ------
+ some text,JP,2007-04-25 06:24:00


======================================================================
FAIL: test_splitdatetimefield_1 (forms_tests.field_tests.test_splitdatetimefield.SplitDateTimeFieldTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_splitdatetimefield.py", line 15, in test_splitdatetimefield_1
    f.clean([datetime.date(2006, 1, 10), datetime.time(7, 30)])
AssertionError: datet[26 chars]7, 30) != datet[26 chars]7, 30, tzinfo=<DstTzInfo 'America/Chicago' CST[17 chars]STD>)

======================================================================
FAIL: test_splitdatetimefield_2 (forms_tests.field_tests.test_splitdatetimefield.SplitDateTimeFieldTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/field_tests/test_splitdatetimefield.py", line 34, in test_splitdatetimefield_2
    f.clean([datetime.date(2006, 1, 10), datetime.time(7, 30)])
AssertionError: datet[26 chars]7, 30) != datet[26 chars]7, 30, tzinfo=<DstTzInfo 'America/Chicago' CST[17 chars]STD>)

======================================================================
FAIL: test_datetime_clean_initial_callable_disabled (forms_tests.tests.test_forms.FormsTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/tests/test_forms.py", line 2122, in test_datetime_clean_initial_callable_disabled
    self.assertEqual(form.cleaned_data, {'dt': now})
AssertionError: {'dt'[47 chars]23456, tzinfo=<DstTzInfo 'America/Chicago' CDT[18 chars]ST>)} != {'dt'[47 chars]23456)}
- {'dt': datetime.datetime(2006, 10, 25, 14, 30, 45, 123456, tzinfo=<DstTzInfo 'America/Chicago' CDT-1 day, 19:00:00 DST>)}
+ {'dt': datetime.datetime(2006, 10, 25, 14, 30, 45, 123456)}

======================================================================
FAIL: test_dateTimeField (forms_tests.tests.test_input_formats.CustomDateTimeInputFormatsTests)
DateTimeFields can parse dates in the default format
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/tests/test_input_formats.py", line 744, in test_dateTimeField
    self.assertEqual(result, datetime(2010, 12, 21, 13, 30, 5))
AssertionError: datet[31 chars]30, 5, tzinfo=<DstTzInfo 'America/Chicago' CST[17 chars]STD>) != datet[31 chars]30, 5)

======================================================================
FAIL: test_dateTimeField_with_inputformat (forms_tests.tests.test_input_formats.CustomDateTimeInputFormatsTests)
DateTimeFields with manually specified input formats can accept those formats
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/tests/test_input_formats.py", line 792, in test_dateTimeField_with_inputformat
    self.assertEqual(result, datetime(2010, 12, 21, 13, 30, 5))
AssertionError: datet[31 chars]30, 5, tzinfo=<DstTzInfo 'America/Chicago' CST[17 chars]STD>) != datet[31 chars]30, 5)

======================================================================
FAIL: test_localized_dateTimeField (forms_tests.tests.test_input_formats.CustomDateTimeInputFormatsTests)
Localized DateTimeFields act as unlocalized widgets
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/tests/test_input_formats.py", line 767, in test_localized_dateTimeField
    self.assertEqual(result, datetime(2010, 12, 21, 13, 30, 5))
AssertionError: datet[31 chars]30, 5, tzinfo=<DstTzInfo 'America/Chicago' CST[17 chars]STD>) != datet[31 chars]30, 5)

======================================================================
FAIL: test_localized_dateTimeField_with_inputformat (forms_tests.tests.test_input_formats.CustomDateTimeInputFormatsTests)
Localized DateTimeFields with manually specified input formats can accept those formats
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/tests/test_input_formats.py", line 817, in test_localized_dateTimeField_with_inputformat
    self.assertEqual(result, datetime(2010, 12, 21, 13, 30, 5))
AssertionError: datet[31 chars]30, 5, tzinfo=<DstTzInfo 'America/Chicago' CST[17 chars]STD>) != datet[31 chars]30, 5)

======================================================================
FAIL: test_dateTimeField (forms_tests.tests.test_input_formats.LocalizedDateTimeTests)
DateTimeFields can parse dates in the default format
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/tests/test_input_formats.py", line 633, in test_dateTimeField
    self.assertEqual(f.clean('2010-12-21 13:30:05'), datetime(2010, 12, 21, 13, 30, 5))
AssertionError: datet[31 chars]30, 5, tzinfo=<DstTzInfo 'America/Chicago' CST[17 chars]STD>) != datet[31 chars]30, 5)

======================================================================
FAIL: test_dateTimeField_with_inputformat (forms_tests.tests.test_input_formats.LocalizedDateTimeTests)
DateTimeFields with manually specified input formats can accept those formats
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/tests/test_input_formats.py", line 687, in test_dateTimeField_with_inputformat
    self.assertEqual(result, datetime(2010, 12, 21, 13, 30, 5))
AssertionError: datet[31 chars]30, 5, tzinfo=<DstTzInfo 'America/Chicago' CST[17 chars]STD>) != datet[31 chars]30, 5)

======================================================================
FAIL: test_localized_dateTimeField (forms_tests.tests.test_input_formats.LocalizedDateTimeTests)
Localized DateTimeFields act as unlocalized widgets
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/tests/test_input_formats.py", line 660, in test_localized_dateTimeField
    self.assertEqual(result, datetime(2010, 12, 21, 13, 30, 5))
AssertionError: datet[31 chars]30, 5, tzinfo=<DstTzInfo 'America/Chicago' CST[17 chars]STD>) != datet[31 chars]30, 5)

======================================================================
FAIL: test_localized_dateTimeField_with_inputformat (forms_tests.tests.test_input_formats.LocalizedDateTimeTests)
Localized DateTimeFields with manually specified input formats can accept those formats
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/tests/test_input_formats.py", line 714, in test_localized_dateTimeField_with_inputformat
    self.assertEqual(datetime(2010, 12, 21, 13, 30, 5), result)
AssertionError: datet[31 chars]30, 5) != datet[31 chars]30, 5, tzinfo=<DstTzInfo 'America/Chicago' CST[17 chars]STD>)

======================================================================
FAIL: test_dateTimeField (forms_tests.tests.test_input_formats.SimpleDateTimeFormatTests)
DateTimeFields can parse dates in the default format
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/tests/test_input_formats.py", line 842, in test_dateTimeField
    self.assertEqual(result, datetime(2010, 12, 21, 13, 30, 5))
AssertionError: datet[31 chars]30, 5, tzinfo=<DstTzInfo 'America/Chicago' CST[17 chars]STD>) != datet[31 chars]30, 5)

======================================================================
FAIL: test_dateTimeField_with_inputformat (forms_tests.tests.test_input_formats.SimpleDateTimeFormatTests)
DateTimeFields with manually specified input formats can accept those formats
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/tests/test_input_formats.py", line 888, in test_dateTimeField_with_inputformat
    self.assertEqual(result, datetime(2010, 12, 21, 13, 30, 5))
AssertionError: datet[31 chars]30, 5, tzinfo=<DstTzInfo 'America/Chicago' CST[17 chars]STD>) != datet[31 chars]30, 5)

======================================================================
FAIL: test_localized_dateTimeField (forms_tests.tests.test_input_formats.SimpleDateTimeFormatTests)
Localized DateTimeFields in a non-localized environment act as unlocalized widgets
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/tests/test_input_formats.py", line 865, in test_localized_dateTimeField
    self.assertEqual(result, datetime(2010, 12, 21, 13, 30, 5))
AssertionError: datet[31 chars]30, 5, tzinfo=<DstTzInfo 'America/Chicago' CST[17 chars]STD>) != datet[31 chars]30, 5)

======================================================================
FAIL: test_localized_dateTimeField_with_inputformat (forms_tests.tests.test_input_formats.SimpleDateTimeFormatTests)
Localized DateTimeFields with manually specified input formats can accept those formats
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/forms_tests/tests/test_input_formats.py", line 911, in test_localized_dateTimeField_with_inputformat
    self.assertEqual(result, datetime(2010, 12, 21, 13, 30, 5))
AssertionError: datet[31 chars]30, 5, tzinfo=<DstTzInfo 'America/Chicago' CST[17 chars]STD>) != datet[31 chars]30, 5)

======================================================================
FAIL: test_invalid_urls (handlers.tests.HandlerRequestTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/handlers/tests.py", line 167, in test_invalid_urls
    self.assertEqual(response.context['request_path'], '/~%25A9helloworld' if PY37 else '/%7E%25A9helloworld')
AssertionError: '~%A9helloworld' != '/%7E%25A9helloworld'
- ~%A9helloworld
? ^
+ /%7E%25A9helloworld
? ^ +++++


======================================================================
FAIL: test_emit_non_ascii (logging_tests.tests.AdminEmailHandlerTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/logging_tests/tests.py", line 397, in test_emit_non_ascii
    self.assertEqual(msg.subject, "[Django] ERROR (EXTERNAL IP): message")
AssertionError: '[Django] ERROR (internal IP): message' != '[Django] ERROR (EXTERNAL IP): message'
- [Django] ERROR (internal IP): message
?                 ^^^^^^^^
+ [Django] ERROR (EXTERNAL IP): message
?                 ^^^^^^^^


======================================================================
FAIL: test_django_logger (logging_tests.tests.DefaultLoggingTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/logging_tests/tests.py", line 91, in test_django_logger
    self.assertEqual(self.logger_output.getvalue(), '')
AssertionError: 'Hey, this is an error.\n' != ''
- Hey, this is an error.


======================================================================
FAIL: test_circular_dependency (logging_tests.tests.SettingsConfigTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/logging_tests/tests.py", line 471, in test_circular_dependency
    self.assertNoOutput(err)
  File "/testbed/tests/admin_scripts/tests.py", line 149, in assertNoOutput
    self.assertEqual(len(stream), 0, "Stream should be empty: actually contains '%s'" % stream)
AssertionError: 3958 != 0 : Stream should be empty: actually contains 'Traceback (most recent call last):
  File "./manage.py", line 22, in <module>
    main()
  File "./manage.py", line 18, in main
    execute_from_command_line(sys.argv)
  File "/testbed/django/core/management/__init__.py", line 401, in execute_from_command_line
    utility.execute()
  File "/testbed/django/core/management/__init__.py", line 395, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "/testbed/django/core/management/base.py", line 328, in run_from_argv
    self.execute(*args, **cmd_options)
  File "/testbed/django/core/management/base.py", line 369, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/core/management/commands/check.py", line 69, in handle
    databases=options['databases'],
  File "/testbed/django/core/management/base.py", line 394, in check
    databases=databases,
  File "/testbed/django/core/checks/registry.py", line 68, in run_checks
    new_errors = check(app_configs=app_configs, databases=databases)
  File "/testbed/django/core/checks/urls.py", line 40, in check_url_namespaces_unique
    all_namespaces = _load_all_namespaces(resolver)
  File "/testbed/django/core/checks/urls.py", line 57, in _load_all_namespaces
    url_patterns = getattr(resolver, 'url_patterns', [])
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 589, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 582, in urlconf_module
    return import_module(self.urlconf_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/flatpages_tests/urls.py", line 11, in <module>
    path('flatpage_root/', include('django.contrib.flatpages.urls')),
  File "/testbed/django/urls/conf.py", line 34, in include
    urlconf_module = import_module(urlconf_module)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/django/contrib/flatpages/urls.py", line 1, in <module>
    from django.contrib.flatpages import views
  File "/testbed/django/contrib/flatpages/views.py", line 2, in <module>
    from django.contrib.flatpages.models import FlatPage
  File "/testbed/django/contrib/flatpages/models.py", line 1, in <module>
    from django.contrib.sites.models import Site
  File "/testbed/django/contrib/sites/models.py", line 78, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class django.contrib.sites.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.
'

======================================================================
FAIL: test_custom_logging (logging_tests.tests.SettingsCustomLoggingTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/logging_tests/tests.py", line 563, in test_custom_logging
    self.assertNoOutput(err)
  File "/testbed/tests/admin_scripts/tests.py", line 149, in assertNoOutput
    self.assertEqual(len(stream), 0, "Stream should be empty: actually contains '%s'" % stream)
AssertionError: 3958 != 0 : Stream should be empty: actually contains 'Traceback (most recent call last):
  File "./manage.py", line 22, in <module>
    main()
  File "./manage.py", line 18, in main
    execute_from_command_line(sys.argv)
  File "/testbed/django/core/management/__init__.py", line 401, in execute_from_command_line
    utility.execute()
  File "/testbed/django/core/management/__init__.py", line 395, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "/testbed/django/core/management/base.py", line 328, in run_from_argv
    self.execute(*args, **cmd_options)
  File "/testbed/django/core/management/base.py", line 369, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/core/management/commands/check.py", line 69, in handle
    databases=options['databases'],
  File "/testbed/django/core/management/base.py", line 394, in check
    databases=databases,
  File "/testbed/django/core/checks/registry.py", line 68, in run_checks
    new_errors = check(app_configs=app_configs, databases=databases)
  File "/testbed/django/core/checks/urls.py", line 40, in check_url_namespaces_unique
    all_namespaces = _load_all_namespaces(resolver)
  File "/testbed/django/core/checks/urls.py", line 57, in _load_all_namespaces
    url_patterns = getattr(resolver, 'url_patterns', [])
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 589, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 582, in urlconf_module
    return import_module(self.urlconf_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/flatpages_tests/urls.py", line 11, in <module>
    path('flatpage_root/', include('django.contrib.flatpages.urls')),
  File "/testbed/django/urls/conf.py", line 34, in include
    urlconf_module = import_module(urlconf_module)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/django/contrib/flatpages/urls.py", line 1, in <module>
    from django.contrib.flatpages import views
  File "/testbed/django/contrib/flatpages/views.py", line 2, in <module>
    from django.contrib.flatpages.models import FlatPage
  File "/testbed/django/contrib/flatpages/models.py", line 1, in <module>
    from django.contrib.sites.models import Site
  File "/testbed/django/contrib/sites/models.py", line 78, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class django.contrib.sites.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.
'

======================================================================
FAIL: test_404_error_reporting (middleware.tests.BrokenLinkEmailsMiddlewareTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/middleware/tests.py", line 356, in test_404_error_reporting
    self.assertEqual(len(mail.outbox), 1)
AssertionError: 0 != 1

======================================================================
FAIL: test_custom_request_checker (middleware.tests.BrokenLinkEmailsMiddlewareTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/middleware/tests.py", line 385, in test_custom_request_checker
    self.assertEqual(len(mail.outbox), 1)
AssertionError: 0 != 1

======================================================================
FAIL: test_referer_equal_to_requested_url_on_another_domain (middleware.tests.BrokenLinkEmailsMiddlewareTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/middleware/tests.py", line 412, in test_referer_equal_to_requested_url_on_another_domain
    self.assertEqual(len(mail.outbox), 1)
AssertionError: 0 != 1

======================================================================
FAIL: test_referer_equal_to_requested_url_without_trailing_slash_when_append_slash_is_unset (middleware.tests.BrokenLinkEmailsMiddlewareTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/middleware/tests.py", line 426, in test_referer_equal_to_requested_url_without_trailing_slash_when_append_slash_is_unset
    self.assertEqual(len(mail.outbox), 1)
AssertionError: 0 != 1

======================================================================
FAIL: test_settings_delete (settings_tests.tests.SettingsTests)
----------------------------------------------------------------------
AttributeError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/tests/settings_tests/tests.py", line 239, in test_settings_delete
    getattr(settings, 'TEST')
  File "/opt/miniconda3/envs/testbed/lib/python3.6/contextlib.py", line 99, in __exit__
    self.gen.throw(type, value, traceback)
  File "/testbed/django/test/testcases.py", line 683, in _assert_raises_or_warns_cm
    self.assertIn(expected_message, str(getattr(cm, cm_attr)))
AssertionError: "'Settings' object has no attribute 'TEST'" not found in ''

======================================================================
FAIL: test_dirs_contains_static_root (staticfiles_tests.test_checks.FindersCheckTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/staticfiles_tests/test_checks.py", line 65, in test_dirs_contains_static_root
    id='staticfiles.E002',
AssertionError: Lists differ: [] != [<Error: level=40, msg='The STATICFILES_DI[96 chars]02'>]

Second list contains 1 additional elements.
First extra element 0:
<Error: level=40, msg='The STATICFILES_DIRS setting should not contain the STATIC_ROOT setting.', hint=None, obj=None, id='staticfiles.E002'>

- []
+ [<Error: level=40, msg='The STATICFILES_DIRS setting should not contain the STATIC_ROOT setting.', hint=None, obj=None, id='staticfiles.E002'>]

======================================================================
FAIL: test_dirs_contains_static_root_in_tuple (staticfiles_tests.test_checks.FindersCheckTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/staticfiles_tests/test_checks.py", line 75, in test_dirs_contains_static_root_in_tuple
    id='staticfiles.E002',
AssertionError: Lists differ: [] != [<Error: level=40, msg='The STATICFILES_DI[96 chars]02'>]

Second list contains 1 additional elements.
First extra element 0:
<Error: level=40, msg='The STATICFILES_DIRS setting should not contain the STATIC_ROOT setting.', hint=None, obj=None, id='staticfiles.E002'>

- []
+ [<Error: level=40, msg='The STATICFILES_DIRS setting should not contain the STATIC_ROOT setting.', hint=None, obj=None, id='staticfiles.E002'>]

======================================================================
FAIL: test_file_change_after_collectstatic (staticfiles_tests.test_storage.TestCollectionHashedFilesCache)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 524, in test_file_change_after_collectstatic
    self.assertIn(b'foo.acbd18db4cc2.png', content)
AssertionError: b'foo.acbd18db4cc2.png' not found in b'url("foo.png")\nurl("xyz.png")'

======================================================================
FAIL: test_css_import_case_insensitive (staticfiles_tests.test_storage.TestCollectionManifestStorage)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 209, in test_css_import_case_insensitive
    self.assertEqual(relpath, "cached/styles_insensitive.3fa427592a53.css")
AssertionError: 'cached/styles_insensitive.css' != 'cached/styles_insensitive.3fa427592a53.css'
- cached/styles_insensitive.css
+ cached/styles_insensitive.3fa427592a53.css
?                           +++++++++++++


======================================================================
FAIL: test_import_replacement (staticfiles_tests.test_storage.TestCollectionManifestStorage)
See #18050
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 145, in test_import_replacement
    self.assertEqual(relpath, "cached/import.f53576679e5a.css")
AssertionError: 'cached/import.css' != 'cached/import.f53576679e5a.css'
- cached/import.css
+ cached/import.f53576679e5a.css


======================================================================
FAIL: test_missing_entry (staticfiles_tests.test_storage.TestCollectionManifestStorage)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 362, in test_missing_entry
    self.hashed_file_path(missing_file_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/contextlib.py", line 88, in __exit__
    next(self.gen)
  File "/testbed/django/test/testcases.py", line 682, in _assert_raises_or_warns_cm
    yield cm
AssertionError: ValueError not raised

======================================================================
FAIL: test_path_ignored_completely (staticfiles_tests.test_storage.TestCollectionManifestStorage)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 65, in test_path_ignored_completely
    self.assertEqual(relpath, "cached/css/ignored.554da52152af.css")
AssertionError: 'cached/css/ignored.css' != 'cached/css/ignored.554da52152af.css'
- cached/css/ignored.css
+ cached/css/ignored.554da52152af.css
?                    +++++++++++++


======================================================================
FAIL: test_path_with_fragment (staticfiles_tests.test_storage.TestCollectionManifestStorage)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 87, in test_path_with_fragment
    self.assertEqual(relpath, "cached/styles.5e0040571e1a.css#eggs")
AssertionError: 'cached/styles.css#eggs' != 'cached/styles.5e0040571e1a.css#eggs'
- cached/styles.css#eggs
+ cached/styles.5e0040571e1a.css#eggs
?               +++++++++++++


======================================================================
FAIL: test_path_with_querystring (staticfiles_tests.test_storage.TestCollectionManifestStorage)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 78, in test_path_with_querystring
    self.assertEqual(relpath, "cached/styles.5e0040571e1a.css?spam=eggs")
AssertionError: 'cached/styles.css?spam=eggs' != 'cached/styles.5e0040571e1a.css?spam=eggs'
- cached/styles.css?spam=eggs
+ cached/styles.5e0040571e1a.css?spam=eggs
?              +++++++++++++


======================================================================
FAIL: test_path_with_querystring_and_fragment (staticfiles_tests.test_storage.TestCollectionManifestStorage)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 96, in test_path_with_querystring_and_fragment
    self.assertEqual(relpath, "cached/css/fragments.a60c0e74834f.css")
AssertionError: 'cached/css/fragments.css' != 'cached/css/fragments.a60c0e74834f.css'
- cached/css/fragments.css
+ cached/css/fragments.a60c0e74834f.css
?                      +++++++++++++


======================================================================
FAIL: test_template_tag_absolute (staticfiles_tests.test_storage.TestCollectionManifestStorage)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 108, in test_template_tag_absolute
    self.assertEqual(relpath, "cached/absolute.eb04def9f9a4.css")
AssertionError: 'cached/absolute.css' != 'cached/absolute.eb04def9f9a4.css'
- cached/absolute.css
+ cached/absolute.eb04def9f9a4.css
?                 +++++++++++++


======================================================================
FAIL: test_template_tag_absolute_root (staticfiles_tests.test_storage.TestCollectionManifestStorage)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 123, in test_template_tag_absolute_root
    self.assertEqual(relpath, "absolute_root.f821df1b64f7.css")
AssertionError: 'absolute_root.css' != 'absolute_root.f821df1b64f7.css'
- absolute_root.css
+ absolute_root.f821df1b64f7.css


======================================================================
FAIL: test_template_tag_deep_relative (staticfiles_tests.test_storage.TestCollectionManifestStorage)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 152, in test_template_tag_deep_relative
    self.assertEqual(relpath, "cached/css/window.5d5c10836967.css")
AssertionError: 'cached/css/window.css' != 'cached/css/window.5d5c10836967.css'
- cached/css/window.css
+ cached/css/window.5d5c10836967.css
?                   +++++++++++++


======================================================================
FAIL: test_template_tag_relative (staticfiles_tests.test_storage.TestCollectionManifestStorage)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 132, in test_template_tag_relative
    self.assertEqual(relpath, "cached/relative.c3e9e1ea6f2e.css")
AssertionError: 'cached/relative.css' != 'cached/relative.c3e9e1ea6f2e.css'
- cached/relative.css
+ cached/relative.c3e9e1ea6f2e.css
?                  +++++++++++++


======================================================================
FAIL: test_template_tag_return (staticfiles_tests.test_storage.TestCollectionManifestStorage)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 46, in test_template_tag_return
    self.assertStaticRaises(ValueError, "does/not/exist.png", "/static/does/not/exist.png")
  File "/testbed/tests/staticfiles_tests/cases.py", line 45, in assertStaticRaises
    self.assertStaticRenders(path, result, **kwargs)
AssertionError: ValueError not raised

======================================================================
FAIL: test_template_tag_simple_content (staticfiles_tests.test_storage.TestCollectionManifestStorage)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 56, in test_template_tag_simple_content
    self.assertEqual(relpath, "cached/styles.5e0040571e1a.css")
AssertionError: 'cached/styles.css' != 'cached/styles.5e0040571e1a.css'
- cached/styles.css
+ cached/styles.5e0040571e1a.css


======================================================================
FAIL: test_template_tag_url (staticfiles_tests.test_storage.TestCollectionManifestStorage)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 161, in test_template_tag_url
    self.assertEqual(relpath, "cached/url.902310b73412.css")
AssertionError: 'cached/url.css' != 'cached/url.902310b73412.css'
- cached/url.css
+ cached/url.902310b73412.css


======================================================================
FAIL: test_template_tag_return (staticfiles_tests.test_storage.TestCollectionSimpleStorage)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 398, in test_template_tag_return
    self.assertStaticRaises(ValueError, "does/not/exist.png", "/static/does/not/exist.png")
  File "/testbed/tests/staticfiles_tests/cases.py", line 45, in assertStaticRaises
    self.assertStaticRenders(path, result, **kwargs)
AssertionError: ValueError not raised

======================================================================
FAIL: test_template_tag_simple_content (staticfiles_tests.test_storage.TestCollectionSimpleStorage)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 406, in test_template_tag_simple_content
    self.assertEqual(relpath, "cached/styles.deploy12345.css")
AssertionError: 'cached/styles.css' != 'cached/styles.deploy12345.css'
- cached/styles.css
+ cached/styles.deploy12345.css
?               ++++++++++++


======================================================================
FAIL: test_multi_extension_patterns (staticfiles_tests.test_storage.TestExtraPatternsStorage)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 251, in test_multi_extension_patterns
    self.assertEqual(relpath, "cached/import.f53576679e5a.css")
AssertionError: 'cached/import.css' != 'cached/import.f53576679e5a.css'
- cached/import.css
+ cached/import.f53576679e5a.css


======================================================================
FAIL: test_date06 (template_tests.filter_tests.test_date.DateTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/template_tests/utils.py", line 55, in inner
    func(self)
  File "/testbed/tests/template_tests/filter_tests/test_date.py", line 59, in test_date06
    self.assertEqual(output, '+0030')
AssertionError: 'CDT' != '+0030'

======================================================================
FAIL: test_time01 (template_tests.filter_tests.test_time.TimeTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/template_tests/utils.py", line 55, in inner
    func(self)
  File "/testbed/tests/template_tests/filter_tests/test_time.py", line 31, in test_time01
    self.assertEqual(output, '+0315:+0315:+0315:11700')
AssertionError: 'CST:-0600:CST:-21600' != '+0315:+0315:+0315:11700'

======================================================================
FAIL: test_permissions_error (template_tests.test_loaders.FileSystemLoaderTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/template_tests/test_loaders.py", line 195, in test_permissions_error
    self.engine.get_template(tmpfile.name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/contextlib.py", line 88, in __exit__
    next(self.gen)
  File "/testbed/django/test/testcases.py", line 682, in _assert_raises_or_warns_cm
    yield cm
AssertionError: PermissionError not raised

======================================================================
FAIL: test_bad_404_template (test_client_regress.tests.TemplateExceptionTests)
Errors found when rendering 404 error templates are re-raised
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/test_client_regress/tests.py", line 870, in test_bad_404_template
    self.client.get("/no_such_view/")
AssertionError: TemplateSyntaxError not raised

======================================================================
FAIL: test_lazy_in_settings (urlpatterns_reverse.tests.ReverseLazySettingsTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/urlpatterns_reverse/tests.py", line 557, in test_lazy_in_settings
    self.assertNoOutput(err)
  File "/testbed/tests/admin_scripts/tests.py", line 149, in assertNoOutput
    self.assertEqual(len(stream), 0, "Stream should be empty: actually contains '%s'" % stream)
AssertionError: 3958 != 0 : Stream should be empty: actually contains 'Traceback (most recent call last):
  File "./manage.py", line 22, in <module>
    main()
  File "./manage.py", line 18, in main
    execute_from_command_line(sys.argv)
  File "/testbed/django/core/management/__init__.py", line 401, in execute_from_command_line
    utility.execute()
  File "/testbed/django/core/management/__init__.py", line 395, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "/testbed/django/core/management/base.py", line 328, in run_from_argv
    self.execute(*args, **cmd_options)
  File "/testbed/django/core/management/base.py", line 369, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/core/management/commands/check.py", line 69, in handle
    databases=options['databases'],
  File "/testbed/django/core/management/base.py", line 394, in check
    databases=databases,
  File "/testbed/django/core/checks/registry.py", line 68, in run_checks
    new_errors = check(app_configs=app_configs, databases=databases)
  File "/testbed/django/core/checks/urls.py", line 40, in check_url_namespaces_unique
    all_namespaces = _load_all_namespaces(resolver)
  File "/testbed/django/core/checks/urls.py", line 57, in _load_all_namespaces
    url_patterns = getattr(resolver, 'url_patterns', [])
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 589, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 582, in urlconf_module
    return import_module(self.urlconf_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/flatpages_tests/urls.py", line 11, in <module>
    path('flatpage_root/', include('django.contrib.flatpages.urls')),
  File "/testbed/django/urls/conf.py", line 34, in include
    urlconf_module = import_module(urlconf_module)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/django/contrib/flatpages/urls.py", line 1, in <module>
    from django.contrib.flatpages import views
  File "/testbed/django/contrib/flatpages/views.py", line 2, in <module>
    from django.contrib.flatpages.models import FlatPage
  File "/testbed/django/contrib/flatpages/models.py", line 1, in <module>
    from django.contrib.sites.models import Site
  File "/testbed/django/contrib/sites/models.py", line 78, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class django.contrib.sites.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.
'

======================================================================
FAIL: test_disallowed_abbreviated_options (user_commands.tests.CommandRunTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/user_commands/tests.py", line 288, in test_disallowed_abbreviated_options
    self.assertNoOutput(err)
  File "/testbed/tests/admin_scripts/tests.py", line 149, in assertNoOutput
    self.assertEqual(len(stream), 0, "Stream should be empty: actually contains '%s'" % stream)
AssertionError: 3817 != 0 : Stream should be empty: actually contains 'Traceback (most recent call last):
  File "./manage.py", line 22, in <module>
    main()
  File "./manage.py", line 18, in main
    execute_from_command_line(sys.argv)
  File "/testbed/django/core/management/__init__.py", line 401, in execute_from_command_line
    utility.execute()
  File "/testbed/django/core/management/__init__.py", line 395, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "/testbed/django/core/management/base.py", line 328, in run_from_argv
    self.execute(*args, **cmd_options)
  File "/testbed/django/core/management/base.py", line 366, in execute
    self.check()
  File "/testbed/django/core/management/base.py", line 394, in check
    databases=databases,
  File "/testbed/django/core/checks/registry.py", line 68, in run_checks
    new_errors = check(app_configs=app_configs, databases=databases)
  File "/testbed/django/core/checks/urls.py", line 40, in check_url_namespaces_unique
    all_namespaces = _load_all_namespaces(resolver)
  File "/testbed/django/core/checks/urls.py", line 57, in _load_all_namespaces
    url_patterns = getattr(resolver, 'url_patterns', [])
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 589, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "/testbed/django/utils/functional.py", line 48, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/testbed/django/urls/resolvers.py", line 582, in urlconf_module
    return import_module(self.urlconf_name)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/tests/flatpages_tests/urls.py", line 11, in <module>
    path('flatpage_root/', include('django.contrib.flatpages.urls')),
  File "/testbed/django/urls/conf.py", line 34, in include
    urlconf_module = import_module(urlconf_module)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/testbed/django/contrib/flatpages/urls.py", line 1, in <module>
    from django.contrib.flatpages import views
  File "/testbed/django/contrib/flatpages/views.py", line 2, in <module>
    from django.contrib.flatpages.models import FlatPage
  File "/testbed/django/contrib/flatpages/models.py", line 1, in <module>
    from django.contrib.sites.models import Site
  File "/testbed/django/contrib/sites/models.py", line 78, in <module>
    class Site(models.Model):
  File "/testbed/django/db/models/base.py", line 116, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class django.contrib.sites.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.
'

======================================================================
FAIL: test_salted_hmac (utils_tests.test_crypto.TestUtilsCryptoMisc) (args=(b'salt', b'value'), kwargs={})
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/utils_tests/test_crypto.py", line 51, in test_salted_hmac
    self.assertEqual(salted_hmac(*args, **kwargs).hexdigest(), digest)
AssertionError: '879e1ee1a1e446a7db9b7a1af8496cedd63cd535' != 'b51a2e619c43b1ca4f91d15c57455521d71d61eb'
- 879e1ee1a1e446a7db9b7a1af8496cedd63cd535
+ b51a2e619c43b1ca4f91d15c57455521d71d61eb


======================================================================
FAIL: test_salted_hmac (utils_tests.test_crypto.TestUtilsCryptoMisc) (args=('salt', 'value'), kwargs={})
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/utils_tests/test_crypto.py", line 51, in test_salted_hmac
    self.assertEqual(salted_hmac(*args, **kwargs).hexdigest(), digest)
AssertionError: '879e1ee1a1e446a7db9b7a1af8496cedd63cd535' != 'b51a2e619c43b1ca4f91d15c57455521d71d61eb'
- 879e1ee1a1e446a7db9b7a1af8496cedd63cd535
+ b51a2e619c43b1ca4f91d15c57455521d71d61eb


======================================================================
FAIL: test_salted_hmac (utils_tests.test_crypto.TestUtilsCryptoMisc) (args=('salt', 'value'), kwargs={'algorithm': 'sha256'})
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/utils_tests/test_crypto.py", line 51, in test_salted_hmac
    self.assertEqual(salted_hmac(*args, **kwargs).hexdigest(), digest)
AssertionError: 'beb98270fc0f8ee59b6f6b004cf258f4a5c8991e8a125f2aedf0b7d852b50291' != 'ee0bf789e4e009371a5372c90f73fcf17695a8439c9108b0480f14e347b3f9ec'
- beb98270fc0f8ee59b6f6b004cf258f4a5c8991e8a125f2aedf0b7d852b50291
+ ee0bf789e4e009371a5372c90f73fcf17695a8439c9108b0480f14e347b3f9ec


======================================================================
FAIL: test_translation (view_tests.tests.test_csrf.CsrfViewTests)
An invalid request is rejected with a localized error message.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/view_tests/tests/test_csrf.py", line 33, in test_translation
    self.assertContains(response, 'CSRF-verificatie mislukt. Verzoek afgebroken.', status_code=403)
  File "/testbed/django/test/testcases.py", line 461, in assertContains
    self.assertTrue(real_count != 0, msg_prefix + "Couldn't find %s in response" % text_repr)
AssertionError: False is not true : Couldn't find 'CSRF-verificatie mislukt. Verzoek afgebroken.' in response

======================================================================
FAIL: test_template_exceptions (view_tests.tests.test_debug.DebugViewTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/view_tests/tests/test_debug.py", line 166, in test_template_exceptions
    self.client.get(reverse('template_exception'))
django.template.exceptions.TemplateDoesNotExist: debug/template_exception.html

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/tests/view_tests/tests/test_debug.py", line 172, in test_template_exceptions
    "traceback, instead found: %s" % raising_loc
AssertionError: -1 == -1 : Failed to find 'raise Exception' in last frame of traceback, instead found: raise TemplateDoesNotExist(template_name, chain=chain)

======================================================================
FAIL: test_template_exception (view_tests.tests.test_debug.PlainTextReportTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/utils.py", line 370, in inner
    return func(*args, **kwargs)
  File "/testbed/tests/view_tests/tests/test_debug.py", line 816, in test_template_exception
    text
AssertionError: "Template error:\nIn template /testbed/tests/view_tests/templates/debug/template_error.html, error at line 2\n   'cycle' tag requires at least two arguments\n   1 : Template with error:\n   2 :  {% cycle %} \n   3 : " not found in 'TemplateDoesNotExist at /test_view/\ndebug/template_error.html\n\nRequest Method: GET\nRequest URL: http://testserver/test_view/\nDjango Version: 3.1\nPython Executable: /opt/miniconda3/envs/testbed/bin/python\nPython Version: 3.6.13\nPython Path: [\'/testbed/tests\', \'/opt/miniconda3/envs/testbed/lib/python36.zip\', \'/opt/miniconda3/envs/testbed/lib/python3.6\', \'/opt/miniconda3/envs/testbed/lib/python3.6/lib-dynload\', \'/opt/miniconda3/envs/testbed/lib/python3.6/site-packages\', \'/testbed\']\nServer time: Tue, 19 Nov 2024 21:53:54 -0600\nInstalled Applications:\n[\'django.contrib.contenttypes\',\n \'django.contrib.auth\',\n \'django.contrib.sites\',\n \'django.contrib.sessions\',\n \'django.contrib.messages\',\n \'django.contrib.admin\',\n \'django.contrib.staticfiles\',\n \'test_app\',\n \'django.contrib.sitemaps\',\n \'django.contrib.flatpages\',\n \'migrations2\']\nInstalled Middleware:\n[\'django.middleware.security.SecurityMiddleware\',\n \'django.contrib.sessions.middleware.SessionMiddleware\',\n \'django.middleware.common.CommonMiddleware\',\n \'django.middleware.csrf.CsrfViewMiddleware\',\n \'django.contrib.auth.middleware.AuthenticationMiddleware\',\n \'django.contrib.messages.middleware.MessageMiddleware\',\n \'django.middleware.clickjacking.XFrameOptionsMiddleware\']\nTemplate loader postmortem\nDjango tried loading these templates, in this order:\n\nUsing engine django:\n    * django.template.loaders.app_directories.Loader: /testbed/django/contrib/auth/templates/debug/template_error.html (Source does not exist)\n    * django.template.loaders.app_directories.Loader: /testbed/django/contrib/admin/templates/debug/template_error.html (Source does not exist)\n    * django.template.loaders.app_directories.Loader: /testbed/django/contrib/sitemaps/templates/debug/template_error.html (Source does not exist)\n\n\n\n\nTraceback (most recent call last):\n  File "/testbed/tests/view_tests/tests/test_debug.py", line 803, in test_template_exception\n    render(request, \'debug/template_error.html\')\n  File "/testbed/django/shortcuts.py", line 19, in render\n    content = loader.render_to_string(template_name, context, request, using=using)\n  File "/testbed/django/template/loader.py", line 61, in render_to_string\n    template = get_template(template_name, using=using)\n  File "/testbed/django/template/loader.py", line 19, in get_template\n    raise TemplateDoesNotExist(template_name, chain=chain)\n\nException Type: TemplateDoesNotExist at /test_view/\nException Value: debug/template_error.html\nRequest information:\nUSER: [unable to retrieve the current user]\n\nGET: No GET data\n\nPOST: No POST data\n\nFILES: No FILES data\n\nCOOKIES: No cookie data\n\nMETA:\nHTTP_COOKIE = \'\'\nPATH_INFO = \'/test_view/\'\nQUERY_STRING = \'\'\nREMOTE_ADDR = \'127.0.0.1\'\nREQUEST_METHOD = \'GET\'\nSCRIPT_NAME = \'\'\nSERVER_NAME = \'testserver\'\nSERVER_PORT = \'80\'\nSERVER_PROTOCOL = \'HTTP/1.1\'\nwsgi.errors = <_io.BytesIO object at 0x714da8288780>\nwsgi.input = <django.test.client.FakePayload object at 0x714da828afd0>\nwsgi.multiprocess = True\nwsgi.multithread = False\nwsgi.run_once = False\nwsgi.url_scheme = \'http\'\nwsgi.version = \'(1, 0)\'\n\nSettings:\nUsing settings module None\nABSOLUTE_URL_OVERRIDES = {}\nADMINS = []\nALLOWED_HOSTS = [\'testserver\']\nAPPEND_SLASH = True\nAUTHENTICATION_BACKENDS = [\'django.contrib.auth.backends.ModelBackend\']\nAUTH_PASSWORD_VALIDATORS = \'********************\'\nAUTH_USER_MODEL = \'auth.User\'\nCACHES = {\'default\': {\'BACKEND\': \'django.core.cache.backends.locmem.LocMemCache\'}}\nCACHE_MIDDLEWARE_ALIAS = \'default\'\nCACHE_MIDDLEWARE_KEY_PREFIX = \'********************\'\nCACHE_MIDDLEWARE_SECONDS = 600\nCSRF_COOKIE_AGE = 31449600\nCSRF_COOKIE_DOMAIN = None\nCSRF_COOKIE_HTTPONLY = False\nCSRF_COOKIE_NAME = \'csrftoken\'\nCSRF_COOKIE_PATH = \'/\'\nCSRF_COOKIE_SAMESITE = \'Lax\'\nCSRF_COOKIE_SECURE = False\nCSRF_FAILURE_VIEW = \'django.views.csrf.csrf_failure\'\nCSRF_HEADER_NAME = \'HTTP_X_CSRFTOKEN\'\nCSRF_TRUSTED_ORIGINS = []\nCSRF_USE_SESSIONS = False\nDATABASES = {\'default\': {\'ENGINE\': \'django.db.backends.sqlite3\', \'NAME\': \'file:memorydb_default?mode=memory&cache=shared\', \'ATOMIC_REQUESTS\': False, \'AUTOCOMMIT\': True, \'CONN_MAX_AGE\': 0, \'OPTIONS\': {}, \'TIME_ZONE\': None, \'USER\': \'\', \'PASSWORD\': \'********************\', \'HOST\': \'\', \'PORT\': \'\', \'TEST\': {\'CHARSET\': None, \'COLLATION\': None, \'MIGRATE\': True, \'MIRROR\': None, \'NAME\': None}}}\nDATABASE_ROUTERS = [\'auth_tests.test_admin_multidb.Router\']\nDATA_UPLOAD_MAX_MEMORY_SIZE = 2621440\nDATA_UPLOAD_MAX_NUMBER_FIELDS = 1000\nDATETIME_FORMAT = \'N j, Y, P\'\nDATETIME_INPUT_FORMATS = [\'%Y-%m-%d %H:%M:%S\', \'%Y-%m-%d %H:%M:%S.%f\', \'%Y-%m-%d %H:%M\', \'%m/%d/%Y %H:%M:%S\', \'%m/%d/%Y %H:%M:%S.%f\', \'%m/%d/%Y %H:%M\', \'%m/%d/%y %H:%M:%S\', \'%m/%d/%y %H:%M:%S.%f\', \'%m/%d/%y %H:%M\']\nDATE_FORMAT = \'N j, Y\'\nDATE_INPUT_FORMATS = [\'%Y-%m-%d\', \'%m/%d/%Y\', \'%m/%d/%y\', \'%b %d %Y\', \'%b %d, %Y\', \'%d %b %Y\', \'%d %b, %Y\', \'%B %d %Y\', \'%B %d, %Y\', \'%d %B %Y\', \'%d %B, %Y\']\nDEBUG = True\nDEBUG_PROPAGATE_EXCEPTIONS = False\nDECIMAL_SEPARATOR = \'.\'\nDEFAULT_CHARSET = \'utf-8\'\nDEFAULT_EXCEPTION_REPORTER = \'django.views.debug.ExceptionReporter\'\nDEFAULT_EXCEPTION_REPORTER_FILTER = \'django.views.debug.SafeExceptionReporterFilter\'\nDEFAULT_FILE_STORAGE = \'django.core.files.storage.FileSystemStorage\'\nDEFAULT_FROM_EMAIL = \'webmaster@localhost\'\nDEFAULT_INDEX_TABLESPACE = \'\'\nDEFAULT_TABLESPACE = \'\'\nDISALLOWED_USER_AGENTS = []\nEMAIL_BACKEND = \'django.core.mail.backends.locmem.EmailBackend\'\nEMAIL_HOST = \'localhost\'\nEMAIL_HOST_PASSWORD = \'********************\'\nEMAIL_HOST_USER = \'\'\nEMAIL_PORT = 25\nEMAIL_SSL_CERTFILE = None\nEMAIL_SSL_KEYFILE = \'********************\'\nEMAIL_SUBJECT_PREFIX = \'[Django] \'\nEMAIL_TIMEOUT = None\nEMAIL_USE_LOCALTIME = False\nEMAIL_USE_SSL = False\nEMAIL_USE_TLS = False\nFILE_UPLOAD_DIRECTORY_PERMISSIONS = None\nFILE_UPLOAD_HANDLERS = [\'django.core.files.uploadhandler.MemoryFileUploadHandler\', \'django.core.files.uploadhandler.TemporaryFileUploadHandler\']\nFILE_UPLOAD_MAX_MEMORY_SIZE = 2621440\nFILE_UPLOAD_PERMISSIONS = 420\nFILE_UPLOAD_TEMP_DIR = None\nFIRST_DAY_OF_WEEK = 0\nFIXTURE_DIRS = []\nFORCE_SCRIPT_NAME = None\nFORMAT_MODULE_PATH = None\nFORM_RENDERER = \'django.forms.renderers.DjangoTemplates\'\nIGNORABLE_404_URLS = []\nINSTALLED_APPS = [\'django.contrib.contenttypes\', \'django.contrib.auth\', \'django.contrib.sites\', \'django.contrib.sessions\', \'django.contrib.messages\', \'django.contrib.admin\', \'django.contrib.staticfiles\', \'test_app\', \'django.contrib.sitemaps\', \'django.contrib.flatpages\', \'migrations2\']\nINTERNAL_IPS = [\'127.0.0.1\']\nLANGUAGES = [(\'af\', \'Afrikaans\'), (\'ar\', \'Arabic\'), (\'ar-dz\', \'Algerian Arabic\'), (\'ast\', \'Asturian\'), (\'az\', \'Azerbaijani\'), (\'bg\', \'Bulgarian\'), (\'be\', \'Belarusian\'), (\'bn\', \'Bengali\'), (\'br\', \'Breton\'), (\'bs\', \'Bosnian\'), (\'ca\', \'Catalan\'), (\'cs\', \'Czech\'), (\'cy\', \'Welsh\'), (\'da\', \'Danish\'), (\'de\', \'German\'), (\'dsb\', \'Lower Sorbian\'), (\'el\', \'Greek\'), (\'en\', \'English\'), (\'en-au\', \'Australian English\'), (\'en-gb\', \'British English\'), (\'eo\', \'Esperanto\'), (\'es\', \'Spanish\'), (\'es-ar\', \'Argentinian Spanish\'), (\'es-co\', \'Colombian Spanish\'), (\'es-mx\', \'Mexican Spanish\'), (\'es-ni\', \'Nicaraguan Spanish\'), (\'es-ve\', \'Venezuelan Spanish\'), (\'et\', \'Estonian\'), (\'eu\', \'Basque\'), (\'fa\', \'Persian\'), (\'fi\', \'Finnish\'), (\'fr\', \'French\'), (\'fy\', \'Frisian\'), (\'ga\', \'Irish\'), (\'gd\', \'Scottish Gaelic\'), (\'gl\', \'Galician\'), (\'he\', \'Hebrew\'), (\'hi\', \'Hindi\'), (\'hr\', \'Croatian\'), (\'hsb\', \'Upper Sorbian\'), (\'hu\', \'Hungarian\'), (\'hy\', \'Armenian\'), (\'ia\', \'Interlingua\'), (\'id\', \'Indonesian\'), (\'io\', \'Ido\'), (\'is\', \'Icelandic\'), (\'it\', \'Italian\'), (\'ja\', \'Japanese\'), (\'ka\', \'Georgian\'), (\'kab\', \'Kabyle\'), (\'kk\', \'Kazakh\'), (\'km\', \'Khmer\'), (\'kn\', \'Kannada\'), (\'ko\', \'Korean\'), (\'lb\', \'Luxembourgish\'), (\'lt\', \'Lithuanian\'), (\'lv\', \'Latvian\'), (\'mk\', \'Macedonian\'), (\'ml\', \'Malayalam\'), (\'mn\', \'Mongolian\'), (\'mr\', \'Marathi\'), (\'my\', \'Burmese\'), (\'nb\', \'Norwegian Bokmål\'), (\'ne\', \'Nepali\'), (\'nl\', \'Dutch\'), (\'nn\', \'Norwegian Nynorsk\'), (\'os\', \'Ossetic\'), (\'pa\', \'Punjabi\'), (\'pl\', \'Polish\'), (\'pt\', \'Portuguese\'), (\'pt-br\', \'Brazilian Portuguese\'), (\'ro\', \'Romanian\'), (\'ru\', \'Russian\'), (\'sk\', \'Slovak\'), (\'sl\', \'Slovenian\'), (\'sq\', \'Albanian\'), (\'sr\', \'Serbian\'), (\'sr-latn\', \'Serbian Latin\'), (\'sv\', \'Swedish\'), (\'sw\', \'Swahili\'), (\'ta\', \'Tamil\'), (\'te\', \'Telugu\'), (\'th\', \'Thai\'), (\'tr\', \'Turkish\'), (\'tt\', \'Tatar\'), (\'udm\', \'Udmurt\'), (\'uk\', \'Ukrainian\'), (\'ur\', \'Urdu\'), (\'uz\', \'Uzbek\'), (\'vi\', \'Vietnamese\'), (\'zh-hans\', \'Simplified Chinese\'), (\'zh-hant\', \'Traditional Chinese\')]\nLANGUAGES_BIDI = [\'he\', \'ar\', \'ar-dz\', \'fa\', \'ur\']\nLANGUAGE_CODE = \'en-us\'\nLANGUAGE_COOKIE_AGE = None\nLANGUAGE_COOKIE_DOMAIN = None\nLANGUAGE_COOKIE_HTTPONLY = False\nLANGUAGE_COOKIE_NAME = \'django_language\'\nLANGUAGE_COOKIE_PATH = \'/\'\nLANGUAGE_COOKIE_SAMESITE = None\nLANGUAGE_COOKIE_SECURE = False\nLOCALE_PATHS = []\nLOGGING = {}\nLOGGING_CONFIG = \'logging.config.dictConfig\'\nLOGIN_REDIRECT_URL = \'/accounts/profile/\'\nLOGIN_URL = \'/accounts/login/\'\nLOGOUT_REDIRECT_URL = None\nMANAGERS = []\nMEDIA_ROOT = \'\'\nMEDIA_URL = \'/\'\nMESSAGE_STORAGE = \'django.contrib.messages.storage.fallback.FallbackStorage\'\nMIDDLEWARE = [\'django.middleware.security.SecurityMiddleware\', \'django.contrib.sessions.middleware.SessionMiddleware\', \'django.middleware.common.CommonMiddleware\', \'django.middleware.csrf.CsrfViewMiddleware\', \'django.contrib.auth.middleware.AuthenticationMiddleware\', \'django.contrib.messages.middleware.MessageMiddleware\', \'django.middleware.clickjacking.XFrameOptionsMiddleware\']\nMIGRATION_MODULES = {\'contenttypes_tests\': \'contenttypes_tests.operations_migrations\'}\nMONTH_DAY_FORMAT = \'F j\'\nNUMBER_GROUPING = 0\nPASSWORD_HASHERS = \'********************\'\nPASSWORD_RESET_TIMEOUT = \'********************\'\nPASSWORD_RESET_TIMEOUT_DAYS = \'********************\'\nPREPEND_WWW = False\nROOT_URLCONF = \'flatpages_tests.urls\'\nSECRET_KEY = \'********************\'\nSECURE_BROWSER_XSS_FILTER = False\nSECURE_CONTENT_TYPE_NOSNIFF = True\nSECURE_HSTS_INCLUDE_SUBDOMAINS = False\nSECURE_HSTS_PRELOAD = False\nSECURE_HSTS_SECONDS = 0\nSECURE_PROXY_SSL_HEADER = None\nSECURE_REDIRECT_EXEMPT = []\nSECURE_REFERRER_POLICY = \'same-origin\'\nSECURE_SSL_HOST = None\nSECURE_SSL_REDIRECT = False\nSERVER_EMAIL = \'root@localhost\'\nSESSION_CACHE_ALIAS = \'default\'\nSESSION_COOKIE_AGE = 1209600\nSESSION_COOKIE_DOMAIN = None\nSESSION_COOKIE_HTTPONLY = True\nSESSION_COOKIE_NAME = \'sessionid\'\nSESSION_COOKIE_PATH = \'/\'\nSESSION_COOKIE_SAMESITE = \'Lax\'\nSESSION_COOKIE_SECURE = False\nSESSION_ENGINE = \'django.contrib.sessions.backends.db\'\nSESSION_EXPIRE_AT_BROWSER_CLOSE = False\nSESSION_FILE_PATH = None\nSESSION_SAVE_EVERY_REQUEST = False\nSESSION_SERIALIZER = \'django.contrib.sessions.serializers.JSONSerializer\'\nSETTINGS_MODULE = None\nSHORT_DATETIME_FORMAT = \'m/d/Y P\'\nSHORT_DATE_FORMAT = \'m/d/Y\'\nSIGNING_BACKEND = \'django.core.signing.TimestampSigner\'\nSILENCED_SYSTEM_CHECKS = []\nSITE_ID = 1\nSTATICFILES_DIRS = []\nSTATICFILES_FINDERS = [\'django.contrib.staticfiles.finders.FileSystemFinder\', \'django.contrib.staticfiles.finders.AppDirectoriesFinder\']\nSTATICFILES_STORAGE = \'django.contrib.staticfiles.storage.StaticFilesStorage\'\nSTATIC_ROOT = None\nSTATIC_URL = \'/static/\'\nTEMPLATES = [{\'BACKEND\': \'django.template.backends.django.DjangoTemplates\', \'APP_DIRS\': True, \'OPTIONS\': {\'context_processors\': [\'django.template.context_processors.debug\']}}]\nTEST_NON_SERIALIZED_APPS = []\nTEST_RUNNER = \'django.test.runner.DiscoverRunner\'\nTHOUSAND_SEPARATOR = \',\'\nTIME_FORMAT = \'P\'\nTIME_INPUT_FORMATS = [\'%H:%M:%S\', \'%H:%M:%S.%f\', \'%H:%M\']\nTIME_ZONE = \'America/Chicago\'\nUSE_I18N = True\nUSE_L10N = False\nUSE_THOUSAND_SEPARATOR = False\nUSE_TZ = True\nUSE_X_FORWARDED_HOST = False\nUSE_X_FORWARDED_PORT = False\nWSGI_APPLICATION = None\nX_FRAME_OPTIONS = \'DENY\'\nYEAR_MONTH_FORMAT = \'F Y\'\n\n\nYou\'re seeing this error because you have DEBUG = True in your\nDjango settings file. Change that to False, and Django will\ndisplay a standard page generated by the handler for this status code.\n\n'

======================================================================
FAIL: test_get_wsgi_application (wsgi.tests.WSGITest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/wsgi/tests.py", line 44, in test_get_wsgi_application
    {('Content-Length', '12'), ('Content-Type', 'text/html; charset=utf-8')})
AssertionError: Items in the first set but not the second:
('X-Frame-Options', 'DENY')
('X-Content-Type-Options', 'nosniff')
('Referrer-Policy', 'same-origin')

======================================================================
FAIL: test_custom_command (bash_completion.tests.BashCompletionTests)
A custom command can autocomplete option flags
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/bash_completion/tests.py", line 75, in test_custom_command
    self.assertEqual(output, ['--list'])
AssertionError: Lists differ: [''] != ['--list']

First differing element 0:
''
'--list'

- ['']
+ ['--list']

----------------------------------------------------------------------
Ran 5747 tests in 73.802s

FAILED (failures=153, errors=768, skipped=163)
Destroying test database for alias 'default'...
System check identified no issues (0 silenced).
+ git checkout b330b918e979ea39a21d47b61172d112caf432c3 tests/backends/base/test_creation.py tests/backends/models.py
Updated 2 paths from 145ff97b2b
