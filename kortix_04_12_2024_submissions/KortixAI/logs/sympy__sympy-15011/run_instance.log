2024-12-03 12:04:22,486 - INFO - Environment image sweb.env.x86_64.c795f4b88616b8462021ed:latest found for sympy__sympy-15011
Building instance image sweb.eval.x86_64.sympy__sympy-15011:latest for sympy__sympy-15011
2024-12-03 12:05:10,699 - INFO - Creating container for sympy__sympy-15011...
2024-12-03 12:05:11,010 - INFO - Container for sympy__sympy-15011 created: c20a248e14de095cdbb8bb3eadfcd435bf692e8f71f01961b35884b718b07623
2024-12-03 12:05:11,651 - INFO - Container for sympy__sympy-15011 started: c20a248e14de095cdbb8bb3eadfcd435bf692e8f71f01961b35884b718b07623
2024-12-03 12:05:11,651 - INFO - Intermediate patch for sympy__sympy-15011 written to logs/run_evaluation/KortixAI/KortixAI/sympy__sympy-15011/patch.diff, now applying to container...
2024-12-03 12:05:12,432 - INFO - Failed to apply patch to container, trying again...
2024-12-03 12:05:12,529 - INFO - >>>>> Applied Patch:
patching file sympy/utilities/lambdify.py
patching file sympy/utilities/tests/test_lambdify.py

2024-12-03 12:05:13,159 - INFO - Git diff before:
diff --git a/sympy/utilities/lambdify.py b/sympy/utilities/lambdify.py
index f71bea25f5..663fe3285e 100644
--- a/sympy/utilities/lambdify.py
+++ b/sympy/utilities/lambdify.py
@@ -707,7 +707,7 @@ def _preprocess(self, args, expr):
 
         Returns string form of args, and updated expr.
         """
-        from sympy import Dummy, Symbol, Function, flatten
+        from sympy import Dummy, Symbol, Function, flatten, MatrixSymbol
         from sympy.matrices import DeferredVector
 
         dummify = self._dummify
@@ -725,11 +725,12 @@ def _preprocess(self, args, expr):
                 argstrs.append(nested_argstrs)
             elif isinstance(arg, DeferredVector):
                 argstrs.append(str(arg))
-            elif isinstance(arg, Symbol):
+            elif isinstance(arg, (Symbol, MatrixSymbol)):
                 argrep = self._argrepr(arg)
 
                 if dummify or not self._is_safe_ident(argrep):
-                    dummy = Dummy()
+                    dummy = Dummy() if isinstance(arg, Symbol) else \
+                           MatrixSymbol(Dummy().name, *arg.shape)
                     argstrs.append(self._argrepr(dummy))
                     expr = self._subexpr(expr, {arg: dummy})
                 else:
@@ -930,4 +931,4 @@ def implemented_function(symfunc, implementation):
     elif not isinstance(symfunc, UndefinedFunction):
         raise ValueError('symfunc should be either a string or'
                          ' an UndefinedFunction instance.')
-    return symfunc
+    return symfunc
\ No newline at end of file
diff --git a/sympy/utilities/tests/test_lambdify.py b/sympy/utilities/tests/test_lambdify.py
index 149a7e3136..34a1330c50 100644
--- a/sympy/utilities/tests/test_lambdify.py
+++ b/sympy/utilities/tests/test_lambdify.py
@@ -884,6 +884,12 @@ def test_lambdify_inspect():
     # details
     assert 'x**2' in inspect.getsource(f)
 
+def test_matrix_symbol_special_name():
+    from sympy import MatrixSymbol
+    curlyv = MatrixSymbol("{v}", 2, 1)
+    f = lambdify(curlyv, curlyv, dummify=True)
+    assert isinstance(f, type(lambda: None))
+
 def test_issue_14941():
     x, y = Dummy(), Dummy()
 
@@ -897,4 +903,4 @@ def test_issue_14941():
 
     # test list
     f3 = lambdify([x, y], [y, x], 'sympy')
-    assert f3(2, 3) == [3, 2]
+    assert f3(2, 3) == [3, 2]
\ No newline at end of file
2024-12-03 12:05:13,159 - INFO - Eval script for sympy__sympy-15011 written to logs/run_evaluation/KortixAI/KortixAI/sympy__sympy-15011/eval.sh; copying to container...
2024-12-03 12:05:22,415 - INFO - Test runtime: 9.07 seconds
2024-12-03 12:05:22,415 - INFO - Test output for sympy__sympy-15011 written to logs/run_evaluation/KortixAI/KortixAI/sympy__sympy-15011/test_output.txt
2024-12-03 12:05:22,535 - INFO - Git diff after:
diff --git a/sympy/utilities/lambdify.py b/sympy/utilities/lambdify.py
index f71bea25f5..663fe3285e 100644
--- a/sympy/utilities/lambdify.py
+++ b/sympy/utilities/lambdify.py
@@ -707,7 +707,7 @@ def _preprocess(self, args, expr):
 
         Returns string form of args, and updated expr.
         """
-        from sympy import Dummy, Symbol, Function, flatten
+        from sympy import Dummy, Symbol, Function, flatten, MatrixSymbol
         from sympy.matrices import DeferredVector
 
         dummify = self._dummify
@@ -725,11 +725,12 @@ def _preprocess(self, args, expr):
                 argstrs.append(nested_argstrs)
             elif isinstance(arg, DeferredVector):
                 argstrs.append(str(arg))
-            elif isinstance(arg, Symbol):
+            elif isinstance(arg, (Symbol, MatrixSymbol)):
                 argrep = self._argrepr(arg)
 
                 if dummify or not self._is_safe_ident(argrep):
-                    dummy = Dummy()
+                    dummy = Dummy() if isinstance(arg, Symbol) else \
+                           MatrixSymbol(Dummy().name, *arg.shape)
                     argstrs.append(self._argrepr(dummy))
                     expr = self._subexpr(expr, {arg: dummy})
                 else:
@@ -930,4 +931,4 @@ def implemented_function(symfunc, implementation):
     elif not isinstance(symfunc, UndefinedFunction):
         raise ValueError('symfunc should be either a string or'
                          ' an UndefinedFunction instance.')
-    return symfunc
+    return symfunc
\ No newline at end of file
2024-12-03 12:05:22,535 - INFO - Git diff changed after running eval script
2024-12-03 12:05:22,535 - INFO - Grading answer for sympy__sympy-15011...
2024-12-03 12:05:22,538 - INFO - report: {'sympy__sympy-15011': {'patch_is_None': False, 'patch_exists': True, 'patch_successfully_applied': True, 'resolved': True, 'tests_status': {'FAIL_TO_PASS': {'success': ['test_curly_matrix_symbol'], 'failure': []}, 'PASS_TO_PASS': {'success': ['test_no_args', 'test_single_arg', 'test_list_args', 'test_nested_args', 'test_str_args', 'test_own_namespace_1', 'test_own_namespace_2', 'test_own_module', 'test_bad_args', 'test_atoms', 'test_sympy_lambda', 'test_math_lambda', 'test_mpmath_lambda', 'test_number_precision', 'test_mpmath_precision', 'test_math_transl', 'test_mpmath_transl', 'test_exponentiation', 'test_sqrt', 'test_trig', 'test_vector_simple', 'test_vector_discontinuous', 'test_trig_symbolic', 'test_trig_float', 'test_docs', 'test_math', 'test_sin', 'test_matrix', 'test_issue9474', 'test_integral', 'test_sym_single_arg', 'test_sym_list_args', 'test_sym_integral', 'test_namespace_order', 'test_namespace_type', 'test_imps', 'test_imps_errors', 'test_imps_wrong_args', 'test_lambdify_imps', 'test_dummification', 'test_python_keywords', 'test_lambdify_docstring', 'test_special_printers', 'test_true_false', 'test_issue_2790', 'test_issue_12092', 'test_ITE', 'test_Min_Max', 'test_issue_12173', 'test_sinc_mpmath', 'test_lambdify_dummy_arg', 'test_lambdify_mixed_symbol_dummy_args', 'test_lambdify_inspect'], 'failure': []}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}}}
Result for sympy__sympy-15011: resolved: True
2024-12-03 12:05:22,538 - INFO - Attempting to stop container sweb.eval.sympy__sympy-15011.KortixAI...
2024-12-03 12:05:38,234 - INFO - Attempting to remove container sweb.eval.sympy__sympy-15011.KortixAI...
2024-12-03 12:05:38,311 - INFO - Container sweb.eval.sympy__sympy-15011.KortixAI removed.
