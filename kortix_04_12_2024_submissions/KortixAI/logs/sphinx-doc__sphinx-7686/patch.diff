diff --git a/setup.py b/setup.py
index a427d5493..978e3d8e0 100644
--- a/setup.py
+++ b/setup.py
@@ -15,22 +15,22 @@ if sys.version_info < (3, 5):
     sys.exit(1)
 
 install_requires = [
-    'sphinxcontrib-applehelp',
-    'sphinxcontrib-devhelp',
+    'sphinxcontrib-applehelp<=1.0.7',
+    'sphinxcontrib-devhelp<=1.0.5',
     'sphinxcontrib-jsmath',
-    'sphinxcontrib-htmlhelp',
-    'sphinxcontrib-serializinghtml',
-    'sphinxcontrib-qthelp',
-    'Jinja2>=2.3',
+    'sphinxcontrib-htmlhelp<=2.0.4',
+    'sphinxcontrib-serializinghtml<=1.1.9',
+    'sphinxcontrib-qthelp<=1.0.6',
+    'Jinja2<3.0',
     'Pygments>=2.0',
     'docutils>=0.12',
     'snowballstemmer>=1.1',
     'babel>=1.3',
-    'alabaster>=0.7,<0.8',
+    'alabaster>=0.7,<0.7.12',
     'imagesize',
     'requests>=2.5.0',
     'setuptools',
-    'packaging',
+    'packaging', 'markupsafe<=2.0.1',
 ]
 
 extras_require = {
diff --git a/sphinx/ext/autosummary/generate.py b/sphinx/ext/autosummary/generate.py
index a57c73fb7..eed13dfcc 100644
--- a/sphinx/ext/autosummary/generate.py
+++ b/sphinx/ext/autosummary/generate.py
@@ -246,7 +246,30 @@ def generate_autosummary_content(name: str, obj: Any, parent: Any,
     ns.update(context)
 
     if doc.objtype == 'module':
-        ns['members'] = dir(obj)
+        all_members = dir(obj)
+        filtered_members = []
+        
+        # Filter members based on imported_members setting
+        try:
+            analyzer = ModuleAnalyzer.for_module(name)
+            for member in all_members:
+                if member.startswith('__'):  # Keep special attributes
+                    filtered_members.append(member)
+                    continue
+                if imported_members:
+                    filtered_members.append(member)
+                else:
+                    # Only include if it's defined in the module
+                    if hasattr(obj, member):
+                        member_obj = getattr(obj, member)
+                        if (getattr(member_obj, '__module__', obj.__name__) == obj.__name__ or
+                            member in analyzer.find_attr_docs()[1]):
+                            filtered_members.append(member)
+        except PycodeError:
+            # Fallback to all members if analysis fails
+            filtered_members = all_members
+
+        ns['members'] = filtered_members
         ns['functions'], ns['all_functions'] = \
             get_members(obj, {'function'}, imported=imported_members)
         ns['classes'], ns['all_classes'] = \
@@ -254,7 +277,7 @@ def generate_autosummary_content(name: str, obj: Any, parent: Any,
         ns['exceptions'], ns['all_exceptions'] = \
             get_members(obj, {'exception'}, imported=imported_members)
         ns['attributes'], ns['all_attributes'] = \
-            get_module_attrs(ns['members'])
+            get_module_attrs(filtered_members)
         ispackage = hasattr(obj, '__path__')
         if ispackage and recursive:
             ns['modules'], ns['all_modules'] = get_modules(obj)
@@ -582,4 +605,4 @@ def main(argv: List[str] = sys.argv[1:]) -> None:
 
 
 if __name__ == '__main__':
-    main()
+    main()
\ No newline at end of file
diff --git a/tests/test_ext_autosummary.py b/tests/test_ext_autosummary.py
index 166029ccb..32accd457 100644
--- a/tests/test_ext_autosummary.py
+++ b/tests/test_ext_autosummary.py
@@ -413,8 +413,48 @@ def test_invalid_autosummary_generate(app, status, warning):
     assert 'WARNING: autosummary_generate: file not found: unknown.rst' in warning.getvalue()
 
 
+def test_imported_members_filtering(app):
+    text = '''
+.. autosummary::
+   :toctree: generated
+
+   target
+'''
+    with open(app.srcdir / 'target.py', 'w') as f:
+        f.write('import os\n\ndef local_func(): pass\n')
+    
+    with open(app.srcdir / 'index.rst', 'w') as f:
+        f.write(text)
+    
+    app.config.autosummary_imported_members = False
+    app.build()
+    
+    content = (app.srcdir / 'generated' / 'target.rst').read_text()
+    assert 'os' not in content
+    assert 'local_func' in content
+
+def test_imported_members_filtering(app):
+    text = '''
+.. autosummary::
+   :toctree: generated
+
+   target
+'''
+    with open(app.srcdir / 'target.py', 'w') as f:
+        f.write('import os\n\ndef local_func(): pass\n')
+    
+    with open(app.srcdir / 'index.rst', 'w') as f:
+        f.write(text)
+    
+    app.config.autosummary_imported_members = False
+    app.build()
+    
+    content = (app.srcdir / 'generated' / 'target.rst').read_text()
+    assert 'os' not in content
+    assert 'local_func' in content
+
 def test_autogen(rootdir, tempdir):
     with cd(rootdir / 'test-templating'):
         args = ['-o', tempdir, '-t', '.', 'autosummary_templating.txt']
         autogen_main(args)
-        assert (tempdir / 'sphinx.application.TemplateBridge.rst').exists()
+        assert (tempdir / 'sphinx.application.TemplateBridge.rst').exists()
\ No newline at end of file
diff --git a/tox.ini b/tox.ini
index d9f040544..bf39854b6 100644
--- a/tox.ini
+++ b/tox.ini
@@ -28,7 +28,7 @@ extras =
 setenv =
     PYTHONWARNINGS = all,ignore::ImportWarning:importlib._bootstrap_external,ignore::DeprecationWarning:site,ignore::DeprecationWarning:distutils
 commands=
-    pytest --durations 25 {posargs}
+    pytest -rA --durations 25 {posargs}
 
 [testenv:flake8]
 basepython = python3
