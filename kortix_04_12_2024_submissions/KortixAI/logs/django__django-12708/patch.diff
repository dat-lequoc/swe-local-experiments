diff --git a/django/db/backends/base/schema.py b/django/db/backends/base/schema.py
index 61f88401ab..8228818e9f 100644
--- a/django/db/backends/base/schema.py
+++ b/django/db/backends/base/schema.py
@@ -403,16 +403,28 @@ class BaseDatabaseSchemaEditor:
         meta_constraint_names = {constraint.name for constraint in model._meta.constraints}
         meta_index_names = {constraint.name for constraint in model._meta.indexes}
         columns = [model._meta.get_field(field).column for field in fields]
+        
+        # Try to find index-specific constraint first
         constraint_names = self._constraint_names(
             model, columns, exclude=meta_constraint_names | meta_index_names,
+            type_=Index.suffix if 'index' in constraint_kwargs else None,
             **constraint_kwargs
         )
+        
+        if not constraint_names:
+            return  # Index might be covered by a unique constraint
+            
+        if len(constraint_names) > 1:
+            # If multiple found, try to filter by naming pattern
+            constraint_names = [name for name in constraint_names if name.endswith('_idx')]
+            
         if len(constraint_names) != 1:
-            raise ValueError("Found wrong number (%s) of constraints for %s(%s)" % (
+            raise ValueError("Found wrong number (%s) of indexes for %s(%s)" % (
                 len(constraint_names),
                 model._meta.db_table,
                 ", ".join(columns),
             ))
+        
         self.execute(self._delete_constraint_sql(sql, model, constraint_names[0]))
 
     def alter_db_table(self, model, old_db_table, new_db_table):
@@ -1197,4 +1209,4 @@ class BaseDatabaseSchemaEditor:
             'procedure': self.quote_name(procedure_name),
             'param_types': ','.join(param_types),
         }
-        self.execute(sql)
+        self.execute(sql)
\ No newline at end of file
