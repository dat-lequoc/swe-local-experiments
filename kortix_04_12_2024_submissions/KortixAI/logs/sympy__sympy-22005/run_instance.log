2024-12-03 12:11:52,721 - INFO - Environment image sweb.env.x86_64.c795f4b88616b8462021ed:latest found for sympy__sympy-22005
Building instance image sweb.eval.x86_64.sympy__sympy-22005:latest for sympy__sympy-22005
2024-12-03 12:12:30,344 - INFO - Creating container for sympy__sympy-22005...
2024-12-03 12:12:30,477 - INFO - Container for sympy__sympy-22005 created: 8b5f2e7ca86cf2c2d328d3878aedba1095171f0f3437df4753aad6325d7ba8ec
2024-12-03 12:12:30,879 - INFO - Container for sympy__sympy-22005 started: 8b5f2e7ca86cf2c2d328d3878aedba1095171f0f3437df4753aad6325d7ba8ec
2024-12-03 12:12:30,879 - INFO - Intermediate patch for sympy__sympy-22005 written to logs/run_evaluation/KortixAI/KortixAI/sympy__sympy-22005/patch.diff, now applying to container...
2024-12-03 12:12:31,294 - INFO - Failed to apply patch to container, trying again...
2024-12-03 12:12:31,380 - INFO - >>>>> Applied Patch:
patching file sympy/solvers/polysys.py
patching file sympy/solvers/tests/test_polysys.py

2024-12-03 12:12:32,029 - INFO - Git diff before:
diff --git a/sympy/solvers/polysys.py b/sympy/solvers/polysys.py
index b9809fd4e9..fd8fca5a85 100644
--- a/sympy/solvers/polysys.py
+++ b/sympy/solvers/polysys.py
@@ -132,6 +132,17 @@ def solve_biquadratic(f, g, opt):
     return sorted(solutions, key=default_sort_key)
 
 
+def _check_zero_dimensional(system, gens):
+    """Verify system is zero-dimensional."""
+    # Check if we have enough equations
+    if len(system) < len(gens):
+        return False
+    # Check if all variables appear in system
+    vars_in_system = set()
+    for eq in system:
+        vars_in_system.update(eq.free_symbols.intersection(gens))
+    return len(vars_in_system) == len(gens)
+
 def solve_generic(polys, opt):
     """
     Solve a generic system of polynomial equations.
@@ -226,8 +237,12 @@ def _subs_root(f, gen, zero):
 
     def _solve_reduced_system(system, gens, entry=False):
         """Recursively solves reduced polynomial systems. """
+        if not _check_zero_dimensional(system, gens):
+            raise NotImplementedError("only zero-dimensional systems supported")
+            
         if len(system) == len(gens) == 1:
-            zeros = list(roots(system[0], gens[-1]).keys())
+            f = system[0]
+            zeros = list(roots(f, gens[-1]).keys())
             return [(zero,) for zero in zeros]
 
         basis = groebner(system, gens, polys=True)
@@ -391,4 +406,4 @@ def solve_triangulated(polys, *gens, **args):
     for i, (solution, _) in enumerate(solutions):
         solutions[i] = solution
 
-    return sorted(solutions, key=default_sort_key)
+    return sorted(solutions, key=default_sort_key)
\ No newline at end of file
diff --git a/sympy/solvers/tests/test_polysys.py b/sympy/solvers/tests/test_polysys.py
index 58419f8762..c15b672950 100644
--- a/sympy/solvers/tests/test_polysys.py
+++ b/sympy/solvers/tests/test_polysys.py
@@ -48,6 +48,8 @@ def test_solve_poly_system():
     raises(NotImplementedError, lambda: solve_poly_system(
         [z, -2*x*y**2 + x + y**2*z, y**2*(-z - 4) + 2]))
     raises(PolynomialError, lambda: solve_poly_system([1/x], x))
+    raises(NotImplementedError, lambda: solve_poly_system([x - 1], x, y))
+    raises(NotImplementedError, lambda: solve_poly_system([y - 1], x, y))
 
 
 def test_solve_biquadratic():
@@ -132,4 +134,4 @@ def test_solve_issue_3686():
     assert roots[0][0] == 0
     assert roots[0][1].epsilon_eq(-499.474999374969, 1e12)
     assert roots[1][0] == 0
-    assert roots[1][1].epsilon_eq(500.474999374969, 1e12)
+    assert roots[1][1].epsilon_eq(500.474999374969, 1e12)
\ No newline at end of file
2024-12-03 12:12:32,029 - INFO - Eval script for sympy__sympy-22005 written to logs/run_evaluation/KortixAI/KortixAI/sympy__sympy-22005/eval.sh; copying to container...
2024-12-03 12:12:45,044 - INFO - Test runtime: 12.79 seconds
2024-12-03 12:12:45,045 - INFO - Test output for sympy__sympy-22005 written to logs/run_evaluation/KortixAI/KortixAI/sympy__sympy-22005/test_output.txt
2024-12-03 12:12:45,254 - INFO - Git diff after:
diff --git a/sympy/solvers/polysys.py b/sympy/solvers/polysys.py
index b9809fd4e9..fd8fca5a85 100644
--- a/sympy/solvers/polysys.py
+++ b/sympy/solvers/polysys.py
@@ -132,6 +132,17 @@ def solve_biquadratic(f, g, opt):
     return sorted(solutions, key=default_sort_key)
 
 
+def _check_zero_dimensional(system, gens):
+    """Verify system is zero-dimensional."""
+    # Check if we have enough equations
+    if len(system) < len(gens):
+        return False
+    # Check if all variables appear in system
+    vars_in_system = set()
+    for eq in system:
+        vars_in_system.update(eq.free_symbols.intersection(gens))
+    return len(vars_in_system) == len(gens)
+
 def solve_generic(polys, opt):
     """
     Solve a generic system of polynomial equations.
@@ -226,8 +237,12 @@ def _subs_root(f, gen, zero):
 
     def _solve_reduced_system(system, gens, entry=False):
         """Recursively solves reduced polynomial systems. """
+        if not _check_zero_dimensional(system, gens):
+            raise NotImplementedError("only zero-dimensional systems supported")
+            
         if len(system) == len(gens) == 1:
-            zeros = list(roots(system[0], gens[-1]).keys())
+            f = system[0]
+            zeros = list(roots(f, gens[-1]).keys())
             return [(zero,) for zero in zeros]
 
         basis = groebner(system, gens, polys=True)
@@ -391,4 +406,4 @@ def solve_triangulated(polys, *gens, **args):
     for i, (solution, _) in enumerate(solutions):
         solutions[i] = solution
 
-    return sorted(solutions, key=default_sort_key)
+    return sorted(solutions, key=default_sort_key)
\ No newline at end of file
2024-12-03 12:12:45,254 - INFO - Git diff changed after running eval script
2024-12-03 12:12:45,254 - INFO - Grading answer for sympy__sympy-22005...
2024-12-03 12:12:45,256 - INFO - report: {'sympy__sympy-22005': {'patch_is_None': False, 'patch_exists': True, 'patch_successfully_applied': True, 'resolved': True, 'tests_status': {'FAIL_TO_PASS': {'success': ['test_solve_poly_system'], 'failure': []}, 'PASS_TO_PASS': {'success': ['test_solve_biquadratic', 'test_solve_triangulated'], 'failure': []}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}}}
Result for sympy__sympy-22005: resolved: True
2024-12-03 12:12:45,256 - INFO - Attempting to stop container sweb.eval.sympy__sympy-22005.KortixAI...
2024-12-03 12:13:01,282 - INFO - Attempting to remove container sweb.eval.sympy__sympy-22005.KortixAI...
2024-12-03 12:13:01,389 - INFO - Container sweb.eval.sympy__sympy-22005.KortixAI removed.
